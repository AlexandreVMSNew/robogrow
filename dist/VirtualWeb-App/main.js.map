{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/Cadastros/Usuarios/Usuario.ts","webpack:///./src/app/_models/Info/infoAPI.ts","webpack:///./src/app/_services/Atendimentos/Retornos/retorno.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/cliente.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/grupoCliente.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/sistemaCliente.service.ts","webpack:///./src/app/_services/Cadastros/Ideias/ideia.service.ts","webpack:///./src/app/_services/Cadastros/Login/auth.service.ts","webpack:///./src/app/_services/Cadastros/Pessoas/pessoa.service.ts","webpack:///./src/app/_services/Cadastros/Produtos/produto.service.ts","webpack:///./src/app/_services/Cadastros/Usuarios/usuario.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/cidade.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/data.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/estado.service.ts","webpack:///./src/app/_services/Movimentos/Venda/venda.service.ts","webpack:///./src/app/_services/Notificacoes/notificacao.service.ts","webpack:///./src/app/_services/Permissoes/permissao.service.ts","webpack:///./src/app/_services/WebSocket/Socket.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/atendimento/atendimento.component.html","webpack:///./src/app/atendimento/atendimento.component.ts","webpack:///./src/app/atendimento/retorno/editarRetorno/editarRetorno.component.html","webpack:///./src/app/atendimento/retorno/editarRetorno/editarRetorno.component.ts","webpack:///./src/app/atendimento/retorno/novoRetorno/novoRetorno.component.html","webpack:///./src/app/atendimento/retorno/novoRetorno/novoRetorno.component.ts","webpack:///./src/app/atendimento/retorno/retorno.component.html","webpack:///./src/app/atendimento/retorno/retorno.component.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/cadastros/cliente/cliente.component.html","webpack:///./src/app/cadastros/cliente/cliente.component.ts","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.css","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.html","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.ts","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.css","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.html","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.ts","webpack:///./src/app/cadastros/pessoa/editarPessoa/editarPessoa.component.html","webpack:///./src/app/cadastros/pessoa/editarPessoa/editarPessoa.component.ts","webpack:///./src/app/cadastros/pessoa/novoPessoa/novoPessoa.component.html","webpack:///./src/app/cadastros/pessoa/novoPessoa/novoPessoa.component.ts","webpack:///./src/app/cadastros/pessoa/pessoa.component.html","webpack:///./src/app/cadastros/pessoa/pessoa.component.ts","webpack:///./src/app/cadastros/produto/editarProduto/editarProduto.component.html","webpack:///./src/app/cadastros/produto/editarProduto/editarProduto.component.ts","webpack:///./src/app/cadastros/produto/novoProduto/novoProduto.component.html","webpack:///./src/app/cadastros/produto/novoProduto/novoProduto.component.ts","webpack:///./src/app/cadastros/produto/produto.component.html","webpack:///./src/app/cadastros/produto/produto.component.ts","webpack:///./src/app/cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component.html","webpack:///./src/app/cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component.ts","webpack:///./src/app/cadastros/usuario/editarUsuario/editarUsuario.component.html","webpack:///./src/app/cadastros/usuario/editarUsuario/editarUsuario.component.ts","webpack:///./src/app/cadastros/usuario/login/login.component.css","webpack:///./src/app/cadastros/usuario/login/login.component.html","webpack:///./src/app/cadastros/usuario/login/login.component.ts","webpack:///./src/app/cadastros/usuario/novoUsuario/novoUsuario.component.html","webpack:///./src/app/cadastros/usuario/novoUsuario/novoUsuario.component.ts","webpack:///./src/app/cadastros/usuario/usuario.component.html","webpack:///./src/app/cadastros/usuario/usuario.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.ts","webpack:///./src/app/movimentos/venda/novoVenda/novoVenda.component.html","webpack:///./src/app/movimentos/venda/novoVenda/novoVenda.component.ts","webpack:///./src/app/movimentos/venda/venda.component.html","webpack:///./src/app/movimentos/venda/venda.component.ts","webpack:///./src/app/permissao/permissao.component.html","webpack:///./src/app/permissao/permissao.component.ts","webpack:///./src/app/pipes/celular.pipe.ts","webpack:///./src/app/pipes/cep.pipe.ts","webpack:///./src/app/pipes/cnpjCpf.pipe.ts","webpack:///./src/app/pipes/commons/constants.ts","webpack:///./src/app/pipes/ie.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { UsuarioOcorrencia } from 'src/app/_models/Cadastros/Usuarios/UsuarioOcorrencia';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\nexport class Usuario {\n    id: number;\n    userName: string;\n    email: string;\n    password: string;\n    nomeCompleto: string;\n    dataNascimento: Date;\n    usuarioOcorrencias: UsuarioOcorrencia[];\n    usuarioNivel: UsuarioNivel[];\n}\n","export const InfoAPI = {\r\n      URL: 'https://www.vmsweb.com.br:3050'\r\n      // URL: 'http://localhost:5000'\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Retorno } from './../../../_models/Atendimentos/Retornos/retorno';\nimport { RetornoLog } from './../../../_models/Atendimentos/Retornos/retornoLog';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RetornoService {\n\n  baseURL = InfoAPI.URL + '/api/atendimentos/retornos';\n  constructor(private http: HttpClient) { }\n\ngetAllRetornos(): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(this.baseURL);\n}\n\ngetRetornosNaoFinalizados(): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(`${this.baseURL}/NaoFinalizados`);\n}\n\ngetRetornosByPeriodo(datas: DataPeriodo): Observable<Retorno[]> {\n  return this.http.post<Retorno[]>(`${this.baseURL}/Periodo`, datas);\n}\n\ngetRetornoByClienteId(clienteId: number): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(`${this.baseURL}/cliente/${clienteId}`);\n}\n\ngetAllLogsByRetornoId(retornoId: number): Observable<RetornoLog[]> {\n  return this.http.get<RetornoLog[]>(`${this.baseURL}/logs/${retornoId}`);\n}\n\ngetAllObservacoesByRetornoId(retornoId: number): Observable<RetornoObservacao[]> {\n  return this.http.get<RetornoObservacao[]>(`${this.baseURL}/observacoes/${retornoId}`);\n}\n\ngetCountRetornos(): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/count`);\n}\n\ngetIdUltimoRetorno(): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/ultimoid`);\n}\n\ngetIdUsuarioUltimoLogByRetornoId(retornoId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/idUsuarioUltimoLog/${retornoId}`);\n}\n\ngetCountLogsAguardandoByRetornoId(retornoId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/logs/count/${retornoId}`);\n}\n\nnovoRetorno(retorno: Retorno) {\n  return this.http.post(`${this.baseURL}/novo`, retorno);\n}\n\nnovoLog(retornoLog: RetornoLog) {\n  return this.http.post(`${this.baseURL}/logs`, retornoLog);\n}\n\nnovaObservacao(retornoObservacao: RetornoObservacao) {\n  return this.http.post(`${this.baseURL}/novaObservacao`, retornoObservacao);\n}\n\neditarRetorno(retorno: Retorno) {\n  return this.http.put(`${this.baseURL}/editar/${retorno.id}`, retorno);\n}\n\ndeletarRetorno(id: number) {\n  return this.http.delete(`${this.baseURL}/${id}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cliente } from './../../../_models/Cadastros/Clientes/Cliente';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  baseURL = InfoAPI.URL + '/api/clientes';\nconstructor(private http: HttpClient) { }\n\ngetAllCliente(): Observable<Cliente[]> {\n  return this.http.get<Cliente[]>(this.baseURL);\n}\n\ngetClienteByName(name: string): Observable<Cliente[]> {\n  return this.http.get<Cliente[]>(`${this.baseURL}/getByName/${name}`);\n}\ngetClienteById(id: number): Observable<Cliente> {\n  return this.http.get<Cliente>(`${this.baseURL}/${id}`);\n}\n\ngetIdUltimoCliente(): Observable<Cliente> {\n  return this.http.get<Cliente>(`${this.baseURL}/idultimocliente`);\n}\n\nnovoCliente(cliente: Cliente) {\n  return this.http.post(`${this.baseURL}/novo`, cliente);\n}\n\neditarCliente(cliente: Cliente) {\n  return this.http.put(`${this.baseURL}/editar/${cliente.id}`, cliente);\n}\n\nexcluirCliente(id: number) {\n  return this.http.delete(`${this.baseURL}/excluir/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClienteGrupos } from './../../../_models/Cadastros/Clientes/ClienteGrupos';\nimport { Cliente } from './../../../_models/Cadastros/Clientes/Cliente';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupoClienteService {\n\n  baseURL = InfoAPI.URL + '/api/grupocliente';\nconstructor(private http: HttpClient) { }\n  getAllGrupos(): Observable<ClienteGrupos[]> {\n    return this.http.get<ClienteGrupos[]>(`${this.baseURL}/grupos`);\n  }\n\n  getClientesByGrupoId(GrupoId: number): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(`${this.baseURL}/clientes/grupo/${GrupoId}`);\n  }\n\n  novoGrupo(grupo: ClienteGrupos) {\n    return this.http.post(`${this.baseURL}/novo`, grupo);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Geracao } from '../../../_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from '../../../_models/Cadastros/Sistemas/Versao';\nimport { ClienteVersoes } from '../../../_models/Cadastros/Clientes/ClienteVersoes';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SistemaClienteService {\n  baseURL = InfoAPI.URL + '/api/sistemacliente';\n  constructor(private http: HttpClient) { }\n\n  getAllSistema(): Observable<Sistema[]> {\n    return this.http.get<Sistema[]>(`${this.baseURL}/sistemas`);\n  }\n\n  getAllGeracao(SistemasId: number): Observable<Geracao[]> {\n    return this.http.get<Geracao[]>(`${this.baseURL}/geracoes/${SistemasId}`);\n  }\n\n  getAllClienteVersoes(ClienteId: number): Observable<ClienteVersoes[]> {\n    return this.http.get<ClienteVersoes[]>(`${this.baseURL}/cliente/versoes/${ClienteId}`);\n  }\n\n  getAllGeracaoVersoes(GeracaoId: number): Observable<Versao[]> {\n    return this.http.get<Versao[]>(`${this.baseURL}/geracao/versoes/${GeracaoId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Observable } from 'rxjs';\nimport { Ideia } from 'src/app/_models/Cadastros/Ideias/ideia';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdeiaService {\n\n  baseURL = InfoAPI.URL + '/api/ideias';\n\n  constructor(private http: HttpClient) {}\n\ngetAllIdeias(): Observable<Ideia[]> {\n  return this.http.get<Ideia[]>(`${this.baseURL}`);\n}\n\ngetIdeiasByUsuarioId(usuarioId: number): Observable<Ideia[]> {\n  return this.http.get<Ideia[]>(`${this.baseURL}/${usuarioId}`);\n}\n\nnovaIdeia(ideia: Ideia) {\n  return this.http.post(`${this.baseURL}/novo`, ideia);\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseURL = InfoAPI.URL + '/api/usuarios/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient,\n              private router: Router) { }\n\n  login(model: any) {\n    return this.http.post(`${this.baseURL}login`, model).pipe(\n        map((response: any) => {\n          const usuario = response;\n          if (usuario) {\n            localStorage.setItem('token', usuario.token);\n\n            this.decodedToken = this.jwtHelper.decodeToken(usuario.token);\n          }\n        })\n      );\n  }\n\n  loggerIn() {\n    const token = localStorage.getItem('token');\n    if (token !== null && !this.jwtHelper.isTokenExpired(token)) {\n      return true;\n    } else {\n      if (this.router.url !== '/usuarios/login') {\n        this.router.navigate(['/usuarios/login']);\n      }\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Observable } from 'rxjs';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PessoaService {\n  baseURL = InfoAPI.URL + '/api/pessoas';\n  constructor(private http: HttpClient) { }\n\n  getAllPessoa(): Observable<Pessoa[]> {\n    return this.http.get<Pessoa[]>(this.baseURL);\n  }\n\n  getAllTiposPessoa(): Observable<TiposPessoa[]> {\n    return this.http.get<TiposPessoa[]>(`${this.baseURL}/tipos`);\n  }\n\n  getPessoaByNome(nome: string): Observable<Pessoa[]> {\n    return this.http.get<Pessoa[]>(`${this.baseURL}/getByNome/${nome}`);\n  }\n  getPessoaById(id: number): Observable<Pessoa> {\n    return this.http.get<Pessoa>(`${this.baseURL}/${id}`);\n  }\n\n  getIdUltimaPessoa(): Observable<Pessoa> {\n    return this.http.get<Pessoa>(`${this.baseURL}/idUltimaPessoa`);\n  }\n\n  novoPessoa(pessoa: Pessoa) {\n    return this.http.post(`${this.baseURL}/novo`, pessoa);\n  }\n\n  editarPessoa(pessoa: Pessoa) {\n    return this.http.put(`${this.baseURL}/editar/${pessoa.id}`, pessoa);\n  }\n\n  excluirPessoa(id: number) {\n    return this.http.delete(`${this.baseURL}/excluir/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  baseURL = InfoAPI.URL + '/api/produtos';\n  retornoPermissao = false;\nconstructor(private http: HttpClient) { }\n\ngetAllProduto(): Observable<Produto[]> {\n  return this.http.get<Produto[]>(this.baseURL);\n}\n\n\ngetProdutoByDescricao(descricao: string): Observable<Produto[]> {\n  return this.http.get<Produto[]>(`${this.baseURL}/getByDescricao/${descricao}`);\n}\n\ngetProdutoById(id: number): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/${id}`);\n}\n\ngetVendaProdutoById(id: number): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/vendas/${id}`);\n}\n\ngetIdUltimoProduto(): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/idUltimoProduto`);\n}\n\nnovoProduto(produto: Produto) {\n  return this.http.post(`${this.baseURL}/novo`, produto);\n}\n\nnovoItem(Item: ProdutoItem[]) {\n  return this.http.post(`${this.baseURL}/item/novo`, Item);\n}\n\neditarItem(Item: ProdutoItem[], id: number) {\n  return this.http.put(`${this.baseURL}/item/editar/${id}`, Item);\n}\n\neditarProduto(produto: Produto) {\n  return this.http.put(`${this.baseURL}/editar/${produto.id}`, produto);\n}\n\nexcluirProduto(id: number) {\n  return this.http.delete(`${this.baseURL}/excluir/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Usuario } from '../../../_models/Cadastros/Usuarios/Usuario';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Nivel } from '../../../_models/Cadastros/Usuarios/Nivel';\nimport { InfoAPI } from '../../../_models/Info/infoAPI';\nimport { UsuarioSenha } from 'src/app/_models/Cadastros/Usuarios/UsuarioSenha';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  baseURL = InfoAPI.URL + '/api/usuarios';\n  retornoPermissao = false;\nconstructor(private http: HttpClient) { }\n\ngetAllUsuario(): Observable<Usuario[]> {\n  return this.http.get<Usuario[]>(this.baseURL);\n}\n\ngetUsuarioByName(name: string): Observable<Usuario[]> {\n  return this.http.get<Usuario[]>(`${this.baseURL}/getByName/${name}`);\n}\ngetUsuarioById(id: number): Observable<Usuario> {\n  return this.http.get<Usuario>(`${this.baseURL}/${id}`);\n}\n\ngetAllNiveis(): Observable<Nivel[]> {\n  return this.http.get<Nivel[]>(`${this.baseURL}/niveis`);\n}\n\ngetIdUltimoUsuario(): Observable<Usuario> {\n  return this.http.get<Usuario>(`${this.baseURL}/idultimousuario`);\n}\n\n\nnovoUsuario(usuario: Usuario) {\n  return this.http.post(`${this.baseURL}/novo`, usuario);\n}\n\neditarUsuario(usuario: Usuario) {\n  return this.http.put(`${this.baseURL}/editar/${usuario.id}`, usuario);\n}\n\neditarSenhaUsuario(usuarioId: number, senhas: UsuarioSenha) {\n  return this.http.put(`${this.baseURL}/editarSenha/${usuarioId}`, senhas);\n}\n\ndeletarUsuario(id: number) {\n  return this.http.delete(`${this.baseURL}/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cidade } from './../../../_models/Cadastros/Uteis/Cidade';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CidadeService {\n  baseURL = InfoAPI.URL + '/api/cidades';\nconstructor(private http: HttpClient) { }\n\ngetAllCidades(): Observable<Cidade[]> {\n  return this.http.get<Cidade[]>(this.baseURL);\n}\n\ngetCidadeByEstadoId(EstadoId: number): Observable<Cidade[]> {\n  return this.http.get<Cidade[]>(`${this.baseURL}/${EstadoId}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  novaData: any;\nconstructor() { }\n\n  getDataPTBR(data: any) {\n    if (data && data !== null && data.toString().length > 0) {\n      this.novaData = data.split('T')[0].split('-');\n      const dia = this.novaData[2];\n      const mes = this.novaData[1];\n      const ano = this.novaData[0];\n      return dia + '/' + mes + '/' + ano;\n    } else {\n      return '';\n    }\n  }\n\n  getDataSQL(data: any) {\n    if (data && data !== null && data.toString().length > 0) {\n      this.novaData = data.split(' ')[0].split('/');\n      const dia = this.novaData[0];\n      const mes = this.novaData[1];\n      const ano = this.novaData[2];\n      return ano + '-' + mes + '-' + dia;\n    } else {\n      return null;\n    }\n  }\n\n  calculaDiferencaDataHora(dataInicial: any) {\n    const dataHoraAtual  = moment(new Date(), 'DD/MM/YYYY HH:mm:ss');\n\n    const ms = moment(dataHoraAtual, 'DD/MM/YYYY HH:mm:ss').diff(moment(dataInicial, 'DD/MM/YYYY HH:mm:ss'));\n    const d = moment.duration(ms);\n\n    if (d.asHours() > 23) {\n      return Number(d.asHours() / 24).toFixed(0) + ' dia(s)';\n    } else {\n      return Math.floor(d.asHours()) + moment.utc(ms).format(':mm:ss');\n    }\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Estado } from './../../../_models/Cadastros/Uteis/Estado';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstadoService {\n  baseURL = InfoAPI.URL + '/api/estados';\nconstructor(private http: HttpClient) { }\n\ngetAllEstados(): Observable<Estado[]> {\n  return this.http.get<Estado[]>(this.baseURL);\n}\n\ngetEstadoById(EstadoId: number): Observable<Estado> {\n  return this.http.get<Estado>(`${this.baseURL}/${EstadoId}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { VendaProduto } from 'src/app/_models/Movimentos/Venda/VendaProduto';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { VendaValorRealizadoValores } from 'src/app/_models/Movimentos/Venda/VendaValorRealizadoValores';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendaService {\n  baseURL = InfoAPI.URL + '/api/vendas';\n\nconstructor(private http: HttpClient) { }\n\ngetAllVenda(): Observable<Venda[]> {\n  return this.http.get<Venda[]>(this.baseURL);\n}\n\ngetVendaByClienteId(clienteId: number): Observable<Venda[]> {\n  return this.http.get<Venda[]>(`${this.baseURL}/getByClienteId/${clienteId}`);\n}\n\ngetVendaById(id: number): Observable<Venda> {\n  return this.http.get<Venda>(`${this.baseURL}/${id}`);\n}\n\ngetIdUltimaVenda(): Observable<Venda> {\n  return this.http.get<Venda>(`${this.baseURL}/idUltimaVenda`);\n}\n\nnovoProdutoVenda(produtos: VendaProduto[]) {\n  return this.http.post(`${this.baseURL}/produtos/novo`, produtos);\n}\n\ngetVendaValorPrevistoByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<VendaValorPrevisto> {\n  return this.http.get<VendaValorPrevisto>(`${this.baseURL}/valorprevisto/${idProdutoItem}/${idVenda}`);\n}\n\ngetVendaValoresRealizadosByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<VendaValorRealizado> {\n  return this.http.get<VendaValorRealizado>(`${this.baseURL}/valorrealizado/${idProdutoItem}/${idVenda}`);\n}\n\ngetVerificaPagamentoByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<boolean> {\n  return this.http.get<boolean>(`${this.baseURL}/valorrealizado/pago/${idProdutoItem}/${idVenda}`);\n}\n\n\nnovoVendaValorPrevisto(vendaValorPrevisto: VendaValorPrevisto) {\n  return this.http.post(`${this.baseURL}/valorprevisto/novo`, vendaValorPrevisto);\n}\n\nnovoVendaValorRealizado(vendaValorRealizado: VendaValorRealizado) {\n  return this.http.post(`${this.baseURL}/valorrealizado/novo`, vendaValorRealizado);\n}\n\ngetIdUltimoValorRealizado(): Observable<VendaValorRealizado> {\n  return this.http.get<VendaValorRealizado>(`${this.baseURL}/valorrealizado/idUltimo`);\n}\n\ngetValorRealizadoValores(idValorRealizado: number): Observable<VendaValorRealizadoValores[]> {\n  return this.http.get<VendaValorRealizadoValores[]>(`${this.baseURL}/valorrealizado/valores/${idValorRealizado}`);\n}\n\nnovoVendaValorRealizadoValores(valores: VendaValorRealizadoValores) {\n  return this.http.post(`${this.baseURL}/valorrealizado/valores/novo`, valores);\n}\n\nnovoVenda(venda: Venda) {\n  return this.http.post(`${this.baseURL}/novo`, venda);\n}\n\neditarVenda(venda: Venda) {\n  return this.http.put(`${this.baseURL}/editar/${venda.id}`, venda);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Observable } from 'rxjs';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacaoService {\n\n  baseURL = InfoAPI.URL + '/api/notificacoes';\n\n  constructor(private http: HttpClient) {}\n\ngetAllNotificacoesByUsuarioId(usuarioId: number): Observable<Notificacao[]> {\n  return this.http.get<Notificacao[]>(`${this.baseURL}/usuario/${usuarioId}`);\n}\n\ngetCountNotificacoesByUsuarioId(usuarioId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/usuario/count/${usuarioId}`);\n}\n\nnovaNotificacao(notificacao: Notificacao) {\n  return this.http.post(`${this.baseURL}/novo`, notificacao);\n}\n\neditarVistoNotificacao(notificacao: any) {\n  return this.http.put(`${this.baseURL}/editar/visto`, notificacao);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { Observable } from 'rxjs';\nimport { PermissaoNivel } from 'src/app/_models/Permissoes/permissaoNivel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissaoService {\n\n\n  private jwtHelper = new JwtHelperService();\n  private token = localStorage.getItem('token');\n  private decodedToken = this.jwtHelper.decodeToken(this.token);\n  baseURL = InfoAPI.URL + '/api/permissoes';\n\n  retornoAutorizacao: any;\nconstructor(private http: HttpClient) {\n }\n\ngetPermissoesByFormularioAcaoObjeto(formulario: string, acao: string, objeto = 'NULL'): Observable<Permissao> {\n  return this.http.get<Permissao>(`${this.baseURL}/${formulario}/${acao}/${objeto}`);\n}\n\ngetPermissoesByFormulario(formulario: string): Observable<Permissao[]> {\n  return this.http.get<Permissao[]>(`${this.baseURL}/${formulario}`);\n}\n\neditarNiveisPermissoes(formulario: string, permissaoNivel: PermissaoNivel[]): Observable<PermissaoNivel[]> {\n  return this.http.put<PermissaoNivel[]>(`${this.baseURL}/editar/${formulario}`, permissaoNivel);\n}\n\ngetUsuarioId() {\n  this.token = localStorage.getItem('token');\n  this.decodedToken = this.jwtHelper.decodeToken(this.token);\n  return this.decodedToken.nameid;\n}\n\ngetUsuario() {\n  this.token = localStorage.getItem('token');\n  this.decodedToken = this.jwtHelper.decodeToken(this.token);\n  return this.decodedToken.unique_name;\n}\n\ngetUsuarioNiveis() {\n  this.token = localStorage.getItem('token');\n  this.decodedToken = this.jwtHelper.decodeToken(this.token);\n  return this.decodedToken.role;\n}\n\nverificarPermissao(_PERMISSAO: any): any {\n  let retorno = false;\n  _PERMISSAO.permissaoNiveis.forEach(pn => {\n    this.getUsuarioNiveis().forEach(nivelUsuario => {\n      if (pn.nivelId.toString() === nivelUsuario) {\n        retorno = true;\n      }\n    });\n  });\n  return retorno;\n}\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport * as io from 'socket.io-client';\n\nexport interface Dados {\n    info: any;\n}\n\n@Injectable()\nexport class SocketService {\n\n    private url = location.protocol + '//' + location.hostname + '';\n    private socket;\n\n    constructor() {\n        this.socket = io(this.url);\n    }\n\n    public sendSocket(evento: string, dados: any) {\n        this.socket.emit(evento, dados);\n    }\n\n    public getSocket(evento: string) {\n    // tslint:disable-next-line: deprecation\n        return Observable.create((observer) => {\n            this.socket.on(evento, (dados) => {\n                observer.next(dados);\n            });\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { UsuarioComponent } from './cadastros/usuario/usuario.component';\nimport { LoginComponent } from './cadastros/usuario/login/login.component';\nimport { NovoUsuarioComponent } from './cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditarUsuarioComponent } from './cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { ClienteComponent } from './cadastros/cliente/cliente.component';\nimport { NovoClienteComponent } from './cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarClienteComponent } from './cadastros/cliente/editarCliente/editarCliente.component';\nimport { AtendimentoComponent } from './atendimento/atendimento.component';\nimport { RetornoComponent } from './atendimento/retorno/retorno.component';\nimport { NovoRetornoComponent } from './atendimento/retorno/novoRetorno/novoRetorno.component';\nimport { EditarRetornoComponent } from './atendimento/retorno/editarRetorno/editarRetorno.component';\nimport { EditarSenhaUsuarioComponent } from './cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component';\nimport { PermissaoComponent } from './permissao/permissao.component';\nimport { VendaComponent } from './movimentos/venda/venda.component';\nimport { NovoVendaComponent } from './movimentos/venda/novoVenda/novoVenda.component';\nimport { EditarVendaComponent } from './movimentos/venda/editarVenda/editarVenda.component';\nimport { ProdutoComponent } from './cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from './cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from './cadastros/produto/editarProduto/editarProduto.component';\nimport { PessoaComponent } from './cadastros/pessoa/pessoa.component';\nimport { EditarPessoaComponent } from './cadastros/pessoa/editarPessoa/editarPessoa.component';\nimport { NovoPessoaComponent } from './cadastros/pessoa/novoPessoa/novoPessoa.component';\n\nconst routes: Routes = [\n  { path: 'usuarios', component: UsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/login', component: LoginComponent},\n  { path: 'usuarios/novo', component: NovoUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/editar/:id', component: EditarUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/editar/senha/:id', component: EditarSenhaUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'clientes', component: ClienteComponent, canActivate: [AuthGuard]},\n  { path: 'clientes/novo', component: NovoClienteComponent, canActivate: [AuthGuard]},\n  { path: 'clientes/editar/:id', component: EditarClienteComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/novo', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/editar/:id', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos', component: RetornoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos/novo', component: NovoRetornoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos/editar/:id', component: EditarRetornoComponent, canActivate: [AuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  { path: 'permissoes', component: PermissaoComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas', component: VendaComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas/novo', component: NovoVendaComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas/editar/:id', component: EditarVendaComponent, canActivate: [AuthGuard]},\n  { path: 'produtos', component: ProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'produtos/novo', component: NovoProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'produtos/editar/:id', component: EditarProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas', component: PessoaComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas/novo', component: NovoPessoaComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas/editar/:id', component: EditarPessoaComponent, canActivate: [AuthGuard]},\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n  { path: '**', redirectTo: 'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n   imports: [RouterModule.forRoot(routes)],\n   exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".btn-circle.btn-xl {\\r\\n    width: 70px;\\r\\n    height: 70px;\\r\\n    padding: 10px 16px;\\r\\n    border-radius: 35px;\\r\\n    font-size: 24px;\\r\\n    line-height: 1.33;\\r\\n}\\r\\n\\r\\n.btn-circle {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    padding: 6px 0px;\\r\\n    border-radius: 15px;\\r\\n    text-align: center;\\r\\n    font-size: 12px;\\r\\n    line-height: 1.42857;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLG9CQUFvQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1jaXJjbGUuYnRuLXhsIHtcclxuICAgIHdpZHRoOiA3MHB4O1xyXG4gICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgcGFkZGluZzogMTBweCAxNnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzVweDtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjMzO1xyXG59XHJcblxyXG4uYnRuLWNpcmNsZSB7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIHBhZGRpbmc6IDZweCAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNDI4NTc7XHJcbn1cclxuIl19 */\"","module.exports = \"\\n<html>\\n\\n<body class='hold-transition skin-blue sidebar-mini {{sidebar}}'>\\n  <div class=\\\"wrapper\\\">\\n\\n    <header class=\\\"main-header \\\">\\n\\n      <!-- Logo -->\\n      <a routerlink=\\\"dashboard\\\" class=\\\"logo\\\">\\n        <!-- mini logo for sidebar mini 50x50 pixels -->\\n        <span class=\\\"logo-mini\\\"><b></b>VMS</span>\\n        <!-- logo for regular state and mobile devices -->\\n        <span class=\\\"logo-lg\\\"><b>Virtual</b>Web</span>\\n      </a>\\n\\n      <!-- Header Navbar: style can be found in header.less -->\\n      <nav class=\\\"navbar navbar-static-top\\\">\\n\\n        <a class=\\\"sidebar-toggle\\\" (click)=\\\"alterarSidebar()\\\" role=\\\"button\\\">\\n          <span class=\\\"sr-only\\\"></span>\\n        </a>\\n        <!-- Navbar Right Menu <div *dropdownMenu class=\\\"dropdown-menu\\\" style=\\\"position: absolute; width: 255px;\\\" aria-labelledby=\\\"navbarDropdownMenuLink2\\\">-->\\n        <div class=\\\"navbar-custom-menu\\\">\\n          <ul *ngIf=\\\"verificarLogIn()\\\" class=\\\"nav navbar-nav\\\">\\n\\n            <li class=\\\"dropdown messages-menu\\\" dropdown>\\n              <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                <i class=\\\"fa fa-bell-o\\\"></i>\\n                <span *ngIf=\\\"getQtdNotificacoes() > 0\\\" class=\\\"label label-warning\\\">{{getQtdNotificacoes()}}</span>\\n              </a>\\n              <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li class=\\\"header\\\">Você tem {{getQtdNotificacoes()}} Notificações</li>\\n            <li>\\n\\n              <ul class=\\\"menu\\\">\\n                \\n                <div *ngFor=\\\"let notificacao of notificacoes\\\">\\n                  <div *ngIf=\\\"notificacao.visto == 0\\\">\\n                    <li (click)=\\\"setarVistoNotificacao(notificacao)\\\" style=\\\"cursor:pointer;\\\">\\n                      <a>\\n                        <h4>Retorno.<small class=\\\"pull-right\\\">\\n                            <i class=\\\"fa fa-clock-o \\\"></i>\\n                            [{{notificacao.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}]</small>\\n                        </h4>\\n                        <p>Você tem um novo {{notificacao.tipo}}.</p>\\n                      </a>\\n                    </li>\\n                  </div>\\n                  <div *ngIf=\\\"notificacao.visto == 1\\\">\\n                    <li class=\\\"bg-gray\\\"\\n                      style=\\\"border-width: thin;border-style: solid;border-color: rgb(0, 0, 0);cursor:default;\\\">\\n                      <a>\\n                        <h4>\\n                          Retorno.\\n                          <small class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o \\\"></i>\\n                            [{{notificacao.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}]</small>\\n                        </h4>\\n                        <p>Você tem um novo {{notificacao.tipo}}.</p>\\n                      </a>\\n                    </li>\\n                  </div>\\n                </div>\\n\\n              </ul>\\n            </li>\\n            <li class=\\\"footer\\\"><a></a></li>\\n        </div>\\n        </li>\\n\\n        <!-- Tasks: style can be found in dropdown.less -->\\n\\n        <!-- User Account: style can be found in dropdown.less -->\\n        <li class=\\\"dropdown user user-menu\\\" dropdown>\\n          <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\">\\n            <span class=\\\"hidden-xs\\\">{{usuarioNome()}} </span>\\n          </a>\\n          <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <!-- User image -->\\n        <li class=\\\"user-header\\\">\\n          <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n\\n          <p>\\n            {{usuarioNome()}}\\n            <small></small>\\n          </p>\\n        </li>\\n        <li class=\\\"user-footer\\\">\\n          <div class=\\\"footer\\\">\\n            <a [routerLink]=\\\"['/usuarios','editar', usuarioId()]\\\" class=\\\"btn btn-default btn-flat\\\">Perfil</a>\\n            <a [routerLink]=\\\"['/usuarios','editar','senha', usuarioId()]\\\" class=\\\"btn btn-default btn-flat\\\">Alterar\\n              Senha</a>\\n            <a (click)=\\\"logout()\\\" class=\\\"btn btn-default btn-flat\\\">Sair</a>\\n          </div>\\n        </li>\\n  </div>\\n  </li>\\n  <!-- Control Sidebar Toggle Button -->\\n  <li>\\n    <a data-toggle=\\\"control-sidebar\\\"><i></i></a>\\n  </li>\\n  </ul>\\n  </div>\\n\\n  </nav>\\n  </header>\\n  <!-- Left side column. contains the logo and sidebar -->\\n  <aside *ngIf=\\\"verificarLogIn()\\\" class=\\\"main-sidebar\\\">\\n    <!-- sidebar: style can be found in sidebar.less -->\\n    <section class=\\\"sidebar\\\">\\n      <!-- Sidebar user panel -->\\n      <div class=\\\"user-panel\\\">\\n        <div class=\\\"pull-left image\\\">\\n          <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n        </div>\\n        <div class=\\\"pull-left info\\\">\\n          <p>{{usuarioNome()}}</p>\\n          <a href=\\\"#\\\"><i class=\\\"fa fa-circle text-success\\\"></i> Online</a>\\n        </div>\\n      </div>\\n      <!-- /.search form -->\\n      <!-- sidebar menu: : style can be found in sidebar.less \\n        <li class=\\\"dropdown messages-menu\\\" dropdown>\\n              <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                <i class=\\\"fa fa-bell-o\\\"></i>\\n                <span class=\\\"label label-warning\\\">10</span>\\n              </a>\\n              <body *dropdownMenu class=\\\"dropdown-menu\\\">\\n        \\n        -->\\n      <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\n        <li class=\\\"header\\\">MAIN NAVIGATION</li>\\n        <li>\\n          <a routerLink=\\\"dashboard\\\">\\n            <i class=\\\"fa fa-dashboard\\\"></i> <span>Dashboard</span>\\n            <span class=\\\"pull-right-container\\\">\\n              <small class=\\\"label pull-right bg-green\\\">new</small>\\n            </span>\\n          </a>\\n        </li>\\n\\n        <li>\\n          <a routerLink=\\\"usuarios\\\">\\n            <i class=\\\"fa fa-user\\\"></i> <span>Usuários</span>\\n          </a>\\n        </li>\\n\\n        <li>\\n          <a *ngIf=\\\"this.listarCliente == true\\\"routerLink=\\\"clientes\\\">\\n            <i class=\\\"fa fa-users\\\"></i> <span>Clientes</span>\\n          </a>\\n        </li>\\n\\n        <li *ngIf=\\\"this.listarPessoa == true\\\">\\n          <a routerLink=\\\"pessoas\\\">\\n            <i class=\\\"fa fa-users\\\"></i> <span>Pessoas</span>\\n          </a>\\n        </li>\\n\\n        <li *ngIf=\\\"this.listarProduto == true\\\">\\n          <a routerLink=\\\"produtos\\\">\\n            <i class=\\\"fa fa-dropbox\\\"></i> <span>Produtos</span>\\n          </a>\\n        </li>\\n\\n        <li>\\n          <a routerLink=\\\"atendimentos/retornos\\\">\\n            <i class=\\\"fa fa-phone\\\"></i> <span>Retornos</span>\\n          </a>\\n        </li>\\n\\n        <li *ngIf=\\\"this.listarVenda == true\\\">\\n          <a routerLink=\\\"movimentos/vendas\\\">\\n            <i class=\\\"fa fa-dollar\\\"></i> <span>Venda</span>\\n          </a>\\n        </li>\\n\\n        <li *ngIf=\\\"this.visualizarPermissao == true\\\">\\n          <a routerLink=\\\"permissoes\\\">\\n            <i class=\\\"fa fa-lock\\\"></i> <span>Permissões</span>\\n          </a>\\n        </li>\\n\\n      </ul>\\n    </section>\\n    <!-- /.sidebar -->\\n  </aside>\\n\\n  <div class=\\\"content-wrapper\\\">\\n    <!-- Content Header (Page header) -->\\n    <section class=\\\"content-header\\\">\\n      <router-outlet></router-outlet>\\n    </section>\\n  </div>\\n\\n  <footer class=\\\"main-footer\\\">\\n    <div class=\\\"pull-right hidden-xs\\\">\\n      <b>Versão</b> BETA\\n    </div>\\n    <strong>Copyright &copy; 2019 <a>VMS Ltda</a>.</strong>\\n  </footer>\\n  </div>\\n</body>\\n\\n</html>\\n<!--\\n<button type=\\\"button\\\" style=\\\"position:fixed;bottom:10%;left:2%;\\\" \\ntooltip=\\\"Novas ideias!\\\" (click)=\\\"templateIdeia.show()\\\" class=\\\"btn btn-warning btn-circle btn-xl\\\"><i class=\\\"fa fa-lightbulb\\\"></i>\\n</button>\\n\\n<div bsModal #templateIdeia=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateIdeia.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form class=\\\"container\\\" [formGroup]=\\\"cadastroIdeiaForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\"  />\\n\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n                <label>Ideia: (*)</label>\\n                <textarea class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{'is-invalid':cadastroIdeiaForm.get('ideia').errors &&cadastroIdeiaForm.get('ideia').touched}\\\"\\n                  formControlName=\\\"ideia\\\" rows=\\\"4\\\"></textarea>\\n                <div\\n                  *ngIf=\\\"cadastroIdeiaForm.get('ideia').hasError('required') &&cadastroIdeiaForm.get('ideia').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Campo é obrigatório.\\n                </div>\\n              </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateIdeia.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroIdeiaForm.valid\\\" (click)=\\\"cadastrarIdeia(templateIdeia)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n-->\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { IdeiaService } from './_services/Cadastros/Ideias/ideia.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Ideia } from './_models/Cadastros/Ideias/ideia';\nimport * as moment from 'moment';\nimport { SocketService } from './_services/WebSocket/Socket.service';\nimport { PermissaoService } from './_services/Permissoes/permissao.service';\nimport { Notificacao } from './_models/Notificacoes/notificacao';\nimport { NotificacaoService } from './_services/Notificacoes/notificacao.service';\nimport { AuthService } from './_services/Cadastros/Login/auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from './_services/Cadastros/Uteis/data.service';\nimport { Permissao } from './_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n  visualizarPermissao = false;\n  listarVenda = false;\n  listarProduto = false;\n  listarPessoa = false;\n  listarCliente = false;\n\n  title = 'VirtualWeb';\n  ideia: Ideia;\n  cadastroIdeiaForm: FormGroup;\n  notificacoes: Notificacao[];\n  qtdNotificacoes: number;\n  statusLogIn = false;\n  idUsuario: number;\n  paginaNotificacaoAtual = 1;\n  logou = false;\n  sidebar = 'sidebar-open';\n\n  Nav: any =\n  [\n    [\n      {\n        nome: 'DashBoard',\n        active: ''\n      }\n    ],\n    [\n      {\n        nome: 'Cadastros',\n        active: '',\n        menuOpen: 'menu-open',\n        subNav:\n        [\n          [\n            {\n              nome: 'Usuários',\n              active: ''\n            }\n          ],\n          [\n            {\n              nome: 'Clientes',\n              active: ''\n            }\n          ]\n        ]\n      }\n    ],\n    [\n      {\n        nome: 'Atendimentos',\n        active: '',\n        menuOpen: '',\n        subNav:\n        [\n          {\n            nome: 'Retornos',\n            active: ''\n          }\n        ]\n      }\n    ]\n  ];\n\n  constructor(private ideiaService: IdeiaService,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private socketService: SocketService,\n              private permissaoService: PermissaoService,\n              private notificacaoService: NotificacaoService,\n              private authService: AuthService,\n              private router: Router,\n              public dataService: DataService) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n\n    if (!('Notification' in window)) {\n      alert('This browser does not support system notifications');\n    } else if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n    this.validation();\n    this.getSocket('NotificacaoUsuarioRetorno');\n    this.getSocket('NovaObservacao');\n    this.idUsuario = this.permissaoService.getUsuarioId();\n    if (this.idUsuario && this.verificarLogIn()) {\n      this.getNotificacoes();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PERMISSOES', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarPermissao = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n      this.listarPessoa = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n      this.listarCliente = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n      this.listarProduto = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n      this.listarVenda = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  alterarSidebar() {\n    if (this.sidebar === '') {\n      this.sidebar = 'sidebar-open';\n    } else {\n      this.sidebar = '';\n    }\n  }\n\n  verificarLogIn() {\n    if (this.authService.loggerIn()) {\n      if (this.logou === false) {\n        this.logou = true;\n        this.sidebar = 'sidebar-open';\n        this.ngAfterViewInit();\n      }\n      return true;\n    } else {\n      this.sidebar = 'sidebar-collapse';\n      this.logou = false;\n      return false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out.');\n    this.router.navigate(['/usuarios/login']);\n  }\n\n  usuarioNome() {\n    return this.permissaoService.getUsuario();\n  }\n\n  usuarioId() {\n    return this.permissaoService.getUsuarioId();\n  }\n\n  getQtdNotificacoes() {\n    if (this.notificacoes) {\n      return this.notificacoes.filter(c => c.visto === 0).length;\n    } else {\n      return 0;\n    }\n  }\n\n  getDiferencaDataHora(dataHora: any) {\n    return this.dataService.calculaDiferencaDataHora(this.dataService.getDataPTBR(dataHora));\n  }\n\n  setarVistoNotificacao(notificacao: any) {\n    this.notificacaoService.editarVistoNotificacao(notificacao).subscribe(\n      () => {\n        this.getNotificacoes();\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar setar notificacoes: ${error}`);\n    });\n  }\n\n  getNotificacoes() {\n    this.notificacaoService.getAllNotificacoesByUsuarioId(this.idUsuario).subscribe(\n      (_NOTIFICACOES: Notificacao[]) => {\n      this.notificacoes = _NOTIFICACOES;\n      this.qtdNotificacoes = _NOTIFICACOES.length;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar notificacoes: ${error}`);\n    });\n  }\n\n  getSocket(evento: string) {\n    this.socketService.getSocket(evento).subscribe((data: any) => {\n      if (data) {\n        if (evento === 'NovaObservacao') {\n          const  notification = new Notification(`Olá, ${this.permissaoService.getUsuario()} !`, {\n            body: `O usuário ${data.usuario} adicionou\\numa nova observação no Retorno ${data.retornoId}.`\n          });\n        } else if (evento === 'NotificacaoUsuarioRetorno') {\n          if (Number(data) === Number(this.idUsuario)) {\n            const  notification = new Notification(`Retorno Específico!`, {\n              body: 'Foi adicionado um Novo Retorno específico para você!'\n            });\n            this.getNotificacoes();\n          }\n        }\n      }\n    });\n  }\n\n  validation() {\n    this.cadastroIdeiaForm = this.fb.group({\n        id:  [''],\n        usuarioId: [''],\n        ideia: ['', Validators.required],\n        dataCadastro: [''],\n        status: ['']\n    });\n  }\n\n  cadastrarIdeia(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.ideia = Object.assign(this.cadastroIdeiaForm.value, {id: 0, usuarioId: this.permissaoService.getUsuarioId(),\n       dataCadastro: dataAtual, status: 'EM ANALISE'});\n    this.ideiaService.novaIdeia(this.ideia).subscribe(\n      () => {\n        this.toastr.success('Ideia enviada com Sucesso!');\n        template.hide();\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ModalModule, TooltipModule, BsDropdownModule, BsDatepickerModule, TabsModule  } from 'ngx-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgxCurrencyModule } from 'ngx-currency';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { NgDatepickerModule } from 'ng2-datepicker';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { AppComponent } from './app.component';\nimport { UsuarioComponent } from './cadastros/usuario/usuario.component';\nimport { LoginComponent } from './cadastros/usuario/login/login.component';\nimport { EditarUsuarioComponent } from './cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { NovoUsuarioComponent } from './cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { EditarSenhaUsuarioComponent } from './cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component';\nimport { ClienteComponent } from './cadastros/cliente/cliente.component';\nimport { NovoClienteComponent } from './cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarClienteComponent } from './cadastros/cliente/editarCliente/editarCliente.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AtendimentoComponent } from './atendimento/atendimento.component';\nimport { RetornoComponent } from './atendimento/retorno/retorno.component';\nimport { NovoRetornoComponent } from './atendimento/retorno/novoRetorno/novoRetorno.component';\nimport { EditarRetornoComponent } from './atendimento/retorno/editarRetorno/editarRetorno.component';\nimport { VendaComponent } from './movimentos/venda/venda.component';\nimport { NovoVendaComponent } from './movimentos/venda/novoVenda/novoVenda.component';\nimport { EditarVendaComponent } from './movimentos/venda/editarVenda/editarVenda.component';\nimport { ResumoVendaComponent } from './movimentos/venda/editarVenda/resumoVenda/resumoVenda.component';\nimport { ProdutoComponent } from './cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from './cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from './cadastros/produto/editarProduto/editarProduto.component';\n\nimport { PessoaComponent } from './cadastros/pessoa/pessoa.component';\nimport { NovoPessoaComponent } from './cadastros/pessoa/novoPessoa/novoPessoa.component';\nimport { EditarPessoaComponent } from './cadastros/pessoa/editarPessoa/editarPessoa.component';\n\nimport { CnpjCpfPipe } from './pipes/cnpjCpf.pipe';\nimport { CelularPipe } from './pipes/celular.pipe';\nimport { CepPipe } from './pipes/cep.pipe';\nimport { IePipe } from './pipes/ie.pipe';\n\nimport { LOCALE_ID } from '@angular/core';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from '@angular/common';\n\nimport { APP_BASE_HREF } from '@angular/common';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ClienteService } from './_services/Cadastros/Clientes/cliente.service';\nimport { SocketService } from './_services/WebSocket/Socket.service';\nimport { PermissaoComponent } from './permissao/permissao.component';\n\nconst config: SocketIoConfig = { url: location.protocol + '//' + location.hostname + '', options: {}  };\nregisterLocaleData(localePt, LOCALE_ID);\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      UsuarioComponent,\n      LoginComponent,\n      NovoUsuarioComponent,\n      EditarUsuarioComponent,\n      EditarSenhaUsuarioComponent,\n      DashboardComponent,\n      ClienteComponent,\n      NovoClienteComponent,\n      EditarClienteComponent,\n      AtendimentoComponent,\n      RetornoComponent,\n      NovoRetornoComponent,\n      EditarRetornoComponent,\n      PermissaoComponent,\n      VendaComponent,\n      NovoVendaComponent,\n      EditarVendaComponent,\n      ResumoVendaComponent,\n      ProdutoComponent,\n      NovoProdutoComponent,\n      EditarProdutoComponent,\n      PessoaComponent,\n      NovoPessoaComponent,\n      EditarPessoaComponent,\n      CnpjCpfPipe,\n      CelularPipe,\n      CepPipe,\n      IePipe\n   ],\n   imports: [\n      BrowserAnimationsModule,\n      BrowserModule,\n      SocketIoModule.forRoot(config),\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      TabsModule.forRoot(),\n      ModalModule.forRoot(),\n      NgxMaskModule.forRoot(),\n      NgDatepickerModule,\n      ChartsModule,\n      NgxPaginationModule,\n      NgxCurrencyModule,\n      NgSelectModule,\n      ToastrModule.forRoot(),\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n   ],\n   providers: [\n      {\n         provide: LOCALE_ID,\n         useValue: 'pt-BR'\n      },\n      {\n         provide: APP_BASE_HREF,\n          useValue: '/'\n      },\n      ClienteService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      },\n      SocketService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  atendimento works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-atendimento',\n  templateUrl: './atendimento.component.html'\n})\nexport class AtendimentoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-3\\\">\\n  <div class=\\\"container d-flex col-xs-8\\\">\\n    <h3>Editar Retorno</h3>&nbsp;\\n  </div>\\n</div>\\n\\n<form [formGroup]=\\\"cadastroForm\\\" class=\\\" mt-3\\\">\\n  <div class=\\\"col-md-12 mt-3\\\">\\n      <div class=\\\"form-row mt-4\\\">\\n\\n          <div class=\\\"form-group col-md-3\\\">\\n              <label>Cliente:(*)</label>\\n              <ng-select [items]=\\\"clientes\\\" bindLabel=\\\"codSiga - nomeFantasia\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clienteId\\\">\\n              </ng-select>\\n          </div>\\n\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Nome do Solicitante:(*)</label>\\n          <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"contatoNome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('contatoNome').errors && \\n                                          cadastroForm.get('contatoNome').touched}\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('contatoNome').hasError('required') &&cadastroForm.get('contatoNome').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo Obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n            <label>Telefone:(*)</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                     cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n              (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n  \\n            <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo é obrigatório.\\n            </div>\\n          </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Prioridade:</label>\\n          <ng-select [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"prioridadeSelecionado\\\"\\n            formControlName=\\\"prioridade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"form-group  offset-md-10 mt-3\\\">\\n  <button class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\">Salvar Alterações</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editar-retorno',\n  templateUrl: './editarRetorno.component.html'\n})\nexport class EditarRetornoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  retorno: Retorno;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n  prioridadeSelecionado: string;\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  valueTelefonePipe = '';\n\n  dataHoraAtual: string;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private clienteServices: ClienteService,\n              private retornoServices: RetornoService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  salvarAlteracoes() {\n\n  }\n\n}\n","module.exports = \"<h2>Retorno</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Cliente:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clienteId\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Nome do Solicitante:(*)</label>\\n          <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n            type=\\\"text\\\" formControlName=\\\"contatoNome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('contatoNome').errors && \\n                                          cadastroForm.get('contatoNome').touched}\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('contatoNome').hasError('required') &&cadastroForm.get('contatoNome').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo Obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Telefone:(*)</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                     cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n            (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo é obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Atendente:</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"usuarios\\\" bindLabel=\\\"userName\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"usuarioIdSelecionado\\\" formControlName=\\\"usuarioId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Prioridade:</label>\\n          <ng-select [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"prioridadeSelecionado\\\"\\n            formControlName=\\\"prioridade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row \\\">\\n        <div class=\\\"form-group col-md-7\\\">\\n          <label>Observação</label>\\n          <textarea class=\\\"form-control\\\" formControlName=\\\"observacao\\\" [(ngModel)]=\\\"observacaoTexto\\\" rows=\\\"2\\\"></textarea>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n  </div>\\n\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarRetorno()\\\"\\n  tooltip=\\\"Novo Retorno\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport * as moment from 'moment';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { NotificacaoService } from 'src/app/_services/Notificacoes/notificacao.service';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-retorno',\n  templateUrl: './novoRetorno.component.html'\n\n})\nexport class NovoRetornoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  retorno: Retorno;\n  retornoObservacao: RetornoObservacao;\n  _observacao = '';\n  notificacao: Notificacao;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n  prioridadeSelecionado = 'NORMAL';\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  usuarios: Usuario[];\n  usuarioIdSelecionado: any;\n\n  valueTelefonePipe = '';\n\n  dataHoraAtual = new Date();\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private clienteService: ClienteService,\n              private usuarioService: UsuarioService,\n              private retornoService: RetornoService,\n              private notificacaoService: NotificacaoService,\n              private router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              private socketService: SocketService,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getClientes();\n    this.getUsuarios();\n    this.validarForm();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  get observacaoTexto(): string {\n    return this._observacao;\n  }\n\n  set observacaoTexto(value: string) {\n    this._observacao = value;\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clienteId: ['', Validators.required],\n        contatoNome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        prioridade: ['', Validators.required],\n        usuarioId: ['', Validators.required],\n        dataHora: [''],\n        status: [''],\n        observacao: ['']\n    });\n  }\n\n  getUsuarios() {\n    this.usuarioService.getAllUsuario().subscribe(\n      (_USUARIOS: Usuario[]) => {\n      this.usuarios = _USUARIOS;\n      this.usuarios.push(Object.assign({ id: 0, userName: 'TODOS'}));\n      this.usuarioIdSelecionado = 0;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar usuarios: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status === 'ATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  cadastrarRetorno() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroForm.valid) {\n      this.retorno = Object.assign(this.cadastroForm.value, {id: 0, status: 'AGUARDANDO', dataHora: dataAtual});\n\n      this.retornoService.novoRetorno(this.retorno).subscribe(\n        () => {\n\n          this.retornoService.getIdUltimoRetorno().subscribe((ultimoId: number) => {\n            if (this._observacao !== '') {\n              this.retornoObservacao = Object.assign({id: 0, retornoId: ultimoId,\n              usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, observacao: this._observacao});\n              this.retornoService.novaObservacao(this.retornoObservacao).subscribe();\n            }\n\n            const retornoLog = Object.assign({ id: 0, retornoId: ultimoId,\n              usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: 'AGUARDANDO'});\n\n            this.retornoService.novoLog(retornoLog).subscribe(\n              () => {\n                this.toastr.success(`Retorno Finalizado!`);\n                this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n              }, error => {\n                this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n                console.log(error.error);\n              });\n          });\n\n          if (this.retorno.usuarioId !== 0) {\n            this.notificacao = Object.assign({usuarioId: this.retorno.usuarioId, dataHora: dataAtual, tipo: 'Retorno', visto: 0});\n            this.notificacaoService.novaNotificacao(this.notificacao).subscribe(\n              () => {\n                this.socketService.sendSocket('NotificacaoUsuarioRetorno', this.retorno.usuarioId);\n                this.toastr.success('Cadastrado com sucesso!');\n                this.router.navigate([`/atendimentos/retornos`]);\n              });\n          } else {\n            this.toastr.success('Cadastrado com sucesso!');\n            this.router.navigate([`/atendimentos/retornos`]);\n          }\n\n          this.socketService.sendSocket('NovoRetorno', 'true');\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n\n}\n","module.exports = \"<h2>Retornos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CLIENTE'\\\" class=\\\"form-group col-md-4\\\">\\n        <label>Selecione o Cliente:</label>\\n        <ng-select name=\\\"filtroNome\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n          [(ngModel)]=\\\"filtroLista\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'DATA'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Selecione a Data:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataFiltro\\\" (bsValueChange)=\\\"setDataFiltro($event)\\\"\\n          bsDaterangepicker />\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'PRIORIDADE'\\\" class=\\\"form-group col-md-2\\\">\\n        <label>Selecione a Prioridade:</label>\\n        <ng-select name=\\\"filtroPrioridade\\\" [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"filtroLista\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a [routerLink]=\\\"['novo']\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Retorno\\n        </a>\\n      </div>\\n    </div>\\n    <label>Atualizado às: {{horaUltimaAtt}}</label>\\n\\n\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Cliente</th>\\n          <th style=\\\"text-align: center;\\\">Prioridade</th>\\n          <th style=\\\"text-align: center;\\\">Status</th>\\n          <th>Data/Hora</th>\\n          <th>Atendente</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"retornos && retornos.length\\\">\\n        <tr\\n          *ngFor=\\\"let retorno of retornosFiltrados | paginate: { itemsPerPage: 5, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ retorno.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">({{retorno.cliente.codSiga}}) - {{ retorno.cliente.nomeFantasia }}</td>\\n          <td style=\\\"text-align: center;\\\">\\n            <button *ngIf=\\\"retorno.prioridade == 'NORMAL'\\\" type=\\\"button\\\" disabled class=\\\"btn btn-dark btn-sm\\\"><i\\n                class=\\\"fa fa-history\\\"></i></button>\\n            <button *ngIf=\\\"retorno.prioridade == 'URGENTE'\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"><i\\n                class=\\\"fa fa-exclamation-triangle\\\"></i></button>\\n          </td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <button *ngIf=\\\"retorno.status == 'AGUARDANDO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-warning btn-sm\\\">AGUARDANDO</button>\\n\\n            <button *ngIf=\\\"retorno.status == 'FINALIZADO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-danger btn-sm\\\">FINALIZADO</button>\\n\\n            <button style=\\\"white-space: nowrap;\\\" *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-info btn-sm\\\">EM ANDAMENTO</button>\\n          </td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ retorno.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ retorno.usuarioId ? retorno.usuario.userName : 'TODOS'}}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n\\n              <button *ngIf=\\\"retorno.status == 'AGUARDANDO'\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n                (click)=\\\"alterarStatus(retorno)\\\" tooltip=\\\"Ligar\\\">\\n                <i class=\\\"fa fa-phone\\\"></i>\\n              </button>\\n\\n              <button *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\n                (click)=\\\"alterarStatus(retorno)\\\" tooltip=\\\"Não Atendeu\\\">\\n                <i class=\\\"fa fa-ban\\\"></i>\\n              </button>\\n              <button *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\n                (click)=\\\"finalizarRetorno(retorno)\\\" tooltip=\\\"Finalizar\\\">\\n                <i class=\\\"fa fa-check\\\"></i>\\n              </button>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"retornoLog(retorno.id,templateLog)\\\" tooltip=\\\"Log(s)\\\">\\n                <i class=\\\"fa fa-file-alt \\\"></i>\\n              </button>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-dark\\\"\\n                (click)=\\\"getRetornoInformacoes(retorno.id, retorno.telefone, retorno.contatoNome,templateInformacoes)\\\"\\n                tooltip=\\\"Informações\\\">\\n                <i class=\\\"fa fa-info\\\"></i>\\n              </button>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n\\n\\n\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!retornos\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum retorno encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n\\n\\n    <div bsModal #templateLog=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n      aria-labelledby=\\\"dialog-sizes-name1\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n              Log(s) do Retorno\\n            </h4>\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateLog.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n\\n          <div class=\\\"modal-body\\\">\\n            <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th>Usuario</th>\\n                  <th>Data/Hora</th>\\n                  <th>Status</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"logRetorno && logRetorno.length\\\">\\n                <tr *ngFor=\\\"let log of logRetorno;\\\">\\n                  <td style=\\\"white-space: nowrap;\\\">{{ log.usuario.userName }}</td>\\n                  <td style=\\\"white-space: nowrap;\\\">{{ log.dataHora  | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <button *ngIf=\\\"log.status == 'AGUARDANDO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-warning\\\">AGUARDANDO</button>\\n\\n                    <button *ngIf=\\\"log.status == 'FINALIZADO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-danger\\\">FINALIZADO</button>\\n\\n                    <button style=\\\"white-space: nowrap;\\\" *ngIf=\\\"log.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-info\\\">EM ANDAMENTO</button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n\\n              <tfoot *ngIf=\\\"!logRetorno\\\">\\n                <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n                <h4>\\n                  Nenhum Log encontrado!\\n                </h4>\\n              </tfoot>\\n            </table>\\n          </div>\\n          <div class=\\\"modal-footer d-flex\\\">\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateLog.hide()\\\">\\n              Fechar\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div bsModal #templateInformacoes=\\\"bs-modal\\\" class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog  modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n            Observações do Retorno\\n          </h4>\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateInformacoes.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Telefone:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" name=\\\"retornoTel\\\"\\n                [ngModel]=\\\"retornoTelefone | celularPipePipe\\\" (ngModelChange)=\\\"retornoTelefone=$event\\\" />\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Solicitante:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"retornoSol\\\" [(ngModel)]=\\\"retornoSolicitante\\\" />\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <form [formGroup]=\\\"cadastroObservacaoForm\\\">\\n                <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n                <label>Observação:(*)</label>\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" formControlName=\\\"observacao\\\"\\n                    oninput=\\\"this.value = this.value.toUpperCase()\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                    class=\\\"form-control\\\" name=\\\"nome\\\"\\n                    [ngClass]=\\\"{'is-invalid':cadastroObservacaoForm.get('observacao').errors &&cadastroObservacaoForm.get('observacao').touched}\\\" />\\n                  <span class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!cadastroObservacaoForm.valid\\\"\\n                      (click)=\\\"novaObservacao()\\\" tooltip=\\\"Nova Observação\\\">\\n                      <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                  </span>\\n                </div>\\n                <div\\n                  *ngIf=\\\"cadastroObservacaoForm.get('observacao').hasError('required') && cadastroObservacaoForm.get('observacao').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Campo obrigatório.\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n\\n        <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th>Usuário</th>\\n              <th>Data/Hora</th>\\n              <th>Observação</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"retornoObservacoes && retornoObservacoes.length\\\">\\n            <tr *ngFor=\\\"let observacao of retornoObservacoes;\\\">\\n              <td style=\\\"white-space: nowrap;\\\">{{ observacao.usuario.userName }}</td>\\n              <td style=\\\"white-space: nowrap;\\\">{{ observacao.dataHora  | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n              <td style=\\\"text-align: center;\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <textarea class=\\\"form-control\\\" rows=\\\"1\\\">{{observacao.observacao}}</textarea>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n\\n          <tfoot *ngIf=\\\"!retornoObservacoes\\\">\\n            <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n            <h4>\\n              Nenhuma observação encontrada!\\n            </h4>\\n          </tfoot>\\n        </table>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateInformacoes.hide()\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { BsLocaleService, ModalDirective } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { RetornoLog } from 'src/app/_models/Atendimentos/Retornos/retornoLog';\nimport * as moment from 'moment';\nimport { Subscription, interval } from 'rxjs';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { Time } from '@angular/common';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\n\n@Component({\n  selector: 'app-retorno',\n  templateUrl: './retorno.component.html'\n})\nexport class RetornoComponent implements OnInit {\n\n  cadastroObservacaoForm: FormGroup;\n  observacao: RetornoObservacao;\n  observacaoId: number;\n\n  retornosFiltrados: Retorno[];\n  retornos: Retorno[];\n  retornosNaoFinalizados: Retorno[];\n  retorno: Retorno;\n  logRetorno: RetornoLog[];\n  retornoObservacoes: RetornoObservacao[];\n  retornoTelefone: string;\n  retornoSolicitante: string;\n\n  cadastroForm: FormGroup;\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  filtrarPor = ['CLIENTE', 'DATA', 'PRIORIDADE'];\n  filtroSelecionado = 'DATA';\n\n  dataFiltro: any;\n  valueDataFiltro: any;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n\n  status = ['AGUARDANDO', 'EM ANDAMENTO', 'FINALIZADO', 'NÃO FINALIZADOS', 'TODOS'];\n\n  statusFiltroSelecionado = 'NÃO FINALIZADOS';\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  countRetornos: number;\n  private updateSubscription: Subscription;\n\n  dataPeriodo: DataPeriodo;\n\n  horaUltimaAtt: any;\n  constructor(public fb: FormBuilder,\n              private clienteServices: ClienteService,\n              private retornoServices: RetornoService,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private socketService: SocketService,\n              public permissaoService: PermissaoService,\n              private dataService: DataService) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getClientes();\n    this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n    this.getRetornosNaoFinalizados();\n    this.validationObservacao();\n    this.getSocket('NovoRetorno');\n    this.getSocket('StatusRetornoAlterado');\n  }\n\n  getSocket(evento: string) {\n    this.socketService.getSocket(evento).subscribe((data: any) => {\n      if (data === 'true') {\n        this.getRetornosNaoFinalizados();\n\n        if (evento === 'NovoRetorno') {\n          const  notification = new Notification(`Olá, ${this.permissaoService.getUsuario()} !`, {\n            body: 'Novo retorno!'\n          });\n        }\n      }\n    });\n  }\n\n  validationObservacao() {\n    this.cadastroObservacaoForm = this.fb.group({\n        id: [''],\n        observacao: ['', Validators.required]\n    });\n  }\n\n  getClientes() {\n    this.clienteServices.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status === 'ATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  alterarStatus(retorno: any) {\n    let newStatus;\n    if (retorno.status === 'AGUARDANDO') {\n      newStatus = 'EM ANDAMENTO';\n    } else if (retorno.status === 'EM ANDAMENTO') {\n      newStatus = 'AGUARDANDO';\n    }\n\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n\n    this.retorno = Object.assign(retorno, { status: newStatus});\n    const retornoLog = Object.assign({ id: 0, retornoId: retorno.id,\n       usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: newStatus});\n\n    this.retornoServices.editarRetorno(this.retorno).subscribe(\n      () => {\n        this.retornoServices.novoLog(retornoLog).subscribe(\n          () => {\n            this.toastr.success(`Status alterado para: ${newStatus}!`);\n            this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n          }, error => {\n            this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n            console.log(error.error);\n          });\n      }, error => {\n        this.toastr.error(`Erro ao tentar alterar status: ${error.error}`);\n      });\n  }\n\n  finalizarRetorno(retorno: any) {\n    const newStatus = 'FINALIZADO';\n    this.retorno = Object.assign(retorno, { status: newStatus});\n\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n\n    const retornoLog = Object.assign({ id: 0, retornoId: retorno.id,\n       usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: newStatus});\n    this.retornoServices.editarRetorno(this.retorno).subscribe(\n      () => {\n        this.retornoServices.novoLog(retornoLog).subscribe(\n          () => {\n            this.toastr.success(`Retorno Finalizado!`);\n            this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n          }, error => {\n            this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n            console.log(error.error);\n          });\n      }, error => {\n        this.toastr.error(`Erro ao tentar alterar status: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n\n  getCountLogsAguardando(retornoId: number) {\n    this.retornoServices.getCountLogsAguardandoByRetornoId(retornoId).subscribe(\n      (_COUNT: number) => {\n        if (_COUNT > 0) {\n          return `(${_COUNT})`;\n        } else {\n          return '';\n        }\n    });\n  }\n\n  retornoLog(retornoId: number, template: any) {\n    this.retornoServices.getAllLogsByRetornoId(retornoId).subscribe(\n      (_LOGS: RetornoLog[]) => {\n      this.logRetorno = _LOGS;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar retornoLog: ${error.error}`);\n    });\n    template.show();\n  }\n\n  getRetornoInformacoes(retornoId: number, telefone: string, solicitante: string, template: any) {\n    this.observacaoId = retornoId;\n    this.retornoTelefone = telefone;\n    this.retornoSolicitante = solicitante;\n    this.retornoServices.getAllObservacoesByRetornoId(retornoId).subscribe(\n      (_OBSERVACOES: RetornoObservacao[]) => {\n      this.retornoObservacoes = _OBSERVACOES;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar observacoes: ${error.error}`);\n    });\n    if (template !== null) {\n      template.show();\n    }\n  }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.retornosFiltrados = this.filtroLista ? this.filtrarRetornos(this.filtroLista) : this.retornos;\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setDataFiltro(valor: Date[]) {\n    this.dataPeriodo = Object.assign(\n      {\n        dataInicial: this.dataService.getDataSQL(valor[0].toLocaleString()) + 'T00:00:00',\n        dataFinal: this.dataService.getDataSQL(valor[1].toLocaleString()) + 'T23:59:00'\n      }\n    );\n    this.getRetornosByPeriodo(this.dataPeriodo);\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    if (valor !== 'NÃO FINALIZADOS') {\n      this.getAllRetornos();\n    } else {\n      this.getRetornosNaoFinalizados();\n    }\n    this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n  }\n\n  compararNumeros(a, b) {\n    return a - b;\n  }\n\n  filtrarRetornos(filtrarPor: any): Retorno[] {\n    if (this.statusFiltroSelecionado !== 'TODOS' && this.statusFiltroSelecionado !== 'NÃO FINALIZADOS') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.retornos;\n    }\n\n    if (this.statusFiltroSelecionado === 'FINALIZADOS') {\n      this.filtroRetorno = this.filtroRetorno.sort(this.compararNumeros);\n    }\n\n    if (this.filtroSelecionado === 'CLIENTE') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.clienteId === filtrarPor);\n    }\n\n    if (this.filtroSelecionado === 'PRIORIDADE') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.prioridade === filtrarPor);\n    }\n\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getAllRetornos() {\n      this.retornoServices.getAllRetornos().subscribe(\n        (_RETORNOS: Retorno[]) => {\n        this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n        this.retornos = _RETORNOS;\n        this.countRetornos = _RETORNOS.length;\n        this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n      });\n  }\n\n  getRetornosByPeriodo(datas: DataPeriodo) {\n    this.retornoServices.getRetornosByPeriodo(datas).subscribe(\n      (_RETORNOS: any) => {\n      this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n      this.retornos = _RETORNOS;\n      this.countRetornos = _RETORNOS.length;\n      this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n    });\n}\n\n  getRetornosNaoFinalizados() {\n    this.retornoServices.getRetornosNaoFinalizados().subscribe(\n      (_RETORNOS: Retorno[]) => {\n      this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n      this.retornos = _RETORNOS;\n      this.countRetornos = _RETORNOS.length;\n      this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n    });\n}\n\n  novaObservacao() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroObservacaoForm.valid) {\n      this.observacao = Object.assign(this.cadastroObservacaoForm.value, {id: 0, retornoId: this.observacaoId,\n      usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual});\n\n      this.retornoServices.novaObservacao(this.observacao).subscribe(\n        () => {\n          this.getRetornoInformacoes(this.observacaoId, this.retornoTelefone, this.retornoSolicitante, null);\n          this.toastr.success('Observação cadastrada com sucesso!');\n          const InfoObs = Object.assign({retornoId: this.observacaoId, usuario: this.permissaoService.getUsuario()});\n          this.socketService.sendSocket('NovaObservacao', InfoObs);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate,  ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { NovoUsuarioComponent } from '../cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\nimport { NovoClienteComponent } from '../cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarUsuarioComponent } from '../cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { Permissao } from '../_models/Permissoes/permissao';\nimport { EditarClienteComponent } from '../cadastros/cliente/editarCliente/editarCliente.component';\nimport { PermissaoComponent } from '../permissao/permissao.component';\nimport { VendaComponent } from '../movimentos/venda/venda.component';\nimport { EditarVendaComponent } from '../movimentos/venda/editarVenda/editarVenda.component';\nimport { NovoVendaComponent } from '../movimentos/venda/novoVenda/novoVenda.component';\nimport { PessoaComponent } from '../cadastros/pessoa/pessoa.component';\nimport { EditarPessoaComponent } from '../cadastros/pessoa/editarPessoa/editarPessoa.component';\nimport { NovoPessoaComponent } from '../cadastros/pessoa/novoPessoa/novoPessoa.component';\nimport { ProdutoComponent } from '../cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from '../cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from '../cadastros/produto/editarProduto/editarProduto.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  jwtHelper = new JwtHelperService();\n\n  autorizado = false;\n\n  constructor(private router: Router,\n              private permissaoService: PermissaoService) {}\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\n\n    const token = localStorage.getItem('token');\n    if (token !== null && !this.jwtHelper.isTokenExpired(token) ) {\n      if (next.component === NovoUsuarioComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      } else if (next.component === EditarUsuarioComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n\n      } else if (next.component === NovoClienteComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n\n      } else if (next.component === EditarClienteComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n\n      } else if (next.component === PermissaoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PERMISSOES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarVendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoVendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === VendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === PessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarPessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoPessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === ProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      }\n\n      return true;\n    } else {\n      this.router.navigate(['/usuarios/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({providedIn: 'root'})\nexport class AuthInterceptor implements HttpInterceptor {\n    jwtHelper = new JwtHelperService();\n\n    constructor(private router: Router) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const token = localStorage.getItem('token');\n        if (token !== null && !this.jwtHelper.isTokenExpired(token)) {\n            const cloneReq = req.clone({\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\n            });\n            return next.handle(cloneReq).pipe(\n                tap(\n                    succ => {},\n                    err => {\n                        if (err.status === 401) {\n                            this.router.navigateByUrl('usuarios/login');\n                        }\n                    }\n                )\n            );\n          } else {\n            this.router.navigate(['/usuarios/login']);\n            return next.handle(req.clone());\n          }\n    }\n}\n","module.exports = \"<h2>Clientes</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado != 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <div\\n          *ngIf=\\\"filtroSelecionado == 'NOME FANTASIA' || filtroSelecionado == 'RAZÃO SOCIAL' || filtroSelecionado == 'COD.SIGA'\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'CNPJ/CPF'\\\">\\n          <label>Filtro:</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\"\\n            [ngModel]=\\\"filtroLista | cnpjCpfPipePipe\\\" (ngModelChange)=\\\"filtroLista=$event\\\" />\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-1\\\">\\n        <label>Estado:(*)</label>\\n        <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n          (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" name=\\\"estadoFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Cidade:(*)</label>\\n        <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n          bindValue=\\\"id\\\" [(ngModel)]=\\\"filtroLista\\\" name=\\\"cidadeFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n      <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n        <a *ngIf=\\\"this.novo == true\\\"\\n          [routerLink]=\\\"['/clientes','novo']\\\" tooltip=\\\"Novo Cliente\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Cliente\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Razão Socia</th>\\n          <th>Nome Fantasia</th>\\n          <th>Telefone</th>\\n          <th>Celular</th> \\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"clientes && clientes.length\\\">\\n        <tr\\n          *ngFor=\\\"let cliente of clientesFiltrados | paginate: { itemsPerPage: 5, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ cliente.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.razaoSocial }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.nomeFantasia }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.telefone }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.celular }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir == true\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                tooltip=\\\"Excluir\\\" (click)=\\\"excluirCliente(cliente, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar == true || this.visualizar\\\" [routerLink]=\\\"['/clientes','editar', cliente.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!clientes\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum cliente encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"clientePagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Cliente\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirCliente}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmarExclusao(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Cliente } from '../../_models/Cadastros/Clientes/Cliente';\nimport { FormGroup } from '@angular/forms';\nimport { ClienteService } from '../../_services/Cadastros/Clientes/cliente.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Estado } from '../../_models/Cadastros/Uteis/Estado';\nimport { Cidade } from '../../_models/Cadastros/Uteis/Cidade';\nimport { CidadeService } from '../../_services/Cadastros/Uteis/cidade.service';\nimport { EstadoService } from '../../_services/Cadastros/Uteis/estado.service';\nimport { PermissaoService } from '../../_services/Permissoes/permissao.service';\nimport { Permissao } from '../../_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html'\n})\nexport class ClienteComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  clientesFiltrados: Cliente[];\n  cliente: Cliente;\n  clientes: Cliente[];\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirCliente = '';\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT', 'TODOS'];\n  statusFiltroSelecionado = 'ATIVO';\n\n  filtrarPor = ['COD.SIGA', 'RAZÃO SOCIAL', 'NOME FANTASIA', 'CNPJ/CPF', 'CIDADE'];\n  filtroSelecionado = 'NOME FANTASIA';\n\n  cidades: Cidade[];\n  cidadeIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  valueCnpjCpfPipe = '';\n\n  constructor(\n    private clienteService: ClienteService,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getEstados();\n    this.estadoIdSelecionado = 11;\n    this.getCidades(this.estadoIdSelecionado);\n    this.getClientes();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  excluirCliente(cliente: Cliente, template: any) {\n    this.cliente = cliente;\n    this.bodyExcluirCliente = `Tem certeza que deseja excluir o Cliente: ${cliente.nomeFantasia}, Código: ${cliente.id}?`;\n    template.show();\n  }\n\n  confirmarExclusao(template: any) {\n    this.clienteService.excluirCliente(this.cliente.id).subscribe(\n    () => {\n        template.hide();\n        this.getClientes();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  get filtroLista(): string {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.clientesFiltrados = this.filtrarClientes(this._filtroLista);\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    this.clientesFiltrados = this.filtrarClientes(this.filtroLista);\n  }\n\n  filtrarClientes(filtrarPor: string): Cliente[] {\n    if (this.statusFiltroSelecionado !== 'TODOS') {\n      this.filtroRetorno = this.clientes.filter(_CLIENTE => _CLIENTE.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.clientes;\n    }\n\n    if (filtrarPor) {\n      if (this.filtroSelecionado === 'COD.SIGA') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.codSiga.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'RAZÃO SOCIAL') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.razaoSocial.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'NOME FANTASIA') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.nomeFantasia.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CNPJ/CPF') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.cnpjCpf.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CIDADE') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.cidadeId === filtrarPor);\n      }\n    }\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES;\n      this.clientesFiltrados = this.filtrarClientes(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.filtroLista = '';\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.filtroLista = '';\n  }\n\n}\n","module.exports = \"ng-select.ng-invalid.ng-touched .ng-select-container {\\r\\n    background-color: #ffcccc;\\r\\n    border-color: #ff0000;\\r\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvZWRpdGFyQ2xpZW50ZS9lZGl0YXJDbGllbnRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLG1FQUFtRTtBQUN2RSIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy9jbGllbnRlL2VkaXRhckNsaWVudGUvZWRpdGFyQ2xpZW50ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibmctc2VsZWN0Lm5nLWludmFsaWQubmctdG91Y2hlZCAubmctc2VsZWN0LWNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjY2NjO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZmYwMDAwO1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgMCAzcHggI2ZkZTZlODtcclxufSJdfQ== */\"","module.exports = \"<h2>Cliente</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Cod.Siga:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codSiga\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>N° Loja:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nLoja\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                            cadastroForm.get('razaoSocial').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('razaoSocial').hasError('required') &&cadastroForm.get('razaoSocial').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Razão Social é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Nome Fantasia:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nomeFantasia').errors && \\n                                                          cadastroForm.get('nomeFantasia').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('nomeFantasia').hasError('required') &&cadastroForm.get('nomeFantasia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome Fantasia é obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Grupo:</label>\\n              <div class=\\\"input-group\\\">\\n                <ng-select [items]=\\\"grupos\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" (change)=\\\"getGrupos()\\\"\\n                  [(ngModel)]=\\\"grupoIdSelecionado\\\" formControlName=\\\"grupoId\\\">\\n                </ng-select>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"abrirModalNovoGrupo(templateGrupo)\\\" tooltip=\\\"Novo Grupo\\\">\\n                    <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Categoria:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"categorias\\\" [(ngModel)]=\\\"categoriaSelecionado\\\"\\n                formControlName=\\\"categoria\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Proprietário:</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"proprietario\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" formControlName=\\\"ie\\\"\\n                [ngModel]=\\\"valueIePipe | iePipePipe\\\" (ngModelChange)=\\\"valueIePipe=$event\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                      cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n                  cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                    cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                      cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n        </tab>\\n\\n        <tab heading=\\\"Implantação\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Cad.Produto(Inicio de Funcionamento): </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpCadProd\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpCadProd').value\\\" bsDatepicker />\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Frente Loja: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpFrenteLoja\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpFrenteLoja').value\\\" bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Financeiro: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpFinanceiro\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpFinanceiro').value\\\" bsDatepicker />\\n            </div>\\n          </div>\\n        </tab>\\n\\n        <tab heading=\\\"Sistema\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Sistema:(*)</label>\\n              <ng-select [items]=\\\"sistemas\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparSistema()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getGeracoes(sistemaIdSelecionado)\\\" [(ngModel)]=\\\"sistemaIdSelecionado\\\"\\n                formControlName=\\\"sistemaId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('sistemaId').hasError('required') && cadastroForm.get('sistemaId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Sistema é Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Gerações:(*)</label>\\n              <ng-select [items]=\\\"geracoes\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparGeracao()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getVersoesGeracao(geracaoIdSelecionado)\\\" [(ngModel)]=\\\"geracaoIdSelecionado\\\"\\n                formControlName=\\\"geracaoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('geracaoId').hasError('required') && cadastroForm.get('geracaoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Geração é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Versões:(*)</label>\\n              <ng-select [items]=\\\"versoes\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarClienteVersoes(versoesIdSelecionado)\\\" [(ngModel)]=\\\"versoesIdSelecionado\\\"\\n                formControlName=\\\"clienteVersoes\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('clienteVersoes').hasError('required') && cadastroForm.get('clienteVersoes').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Versão(ões) é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\" style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\"\\n  (click)=\\\"salvarAlteracao()\\\" tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n<div bsModal #templateGrupo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateGrupo.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroGrupoForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Nome:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroGrupoForm.get('nome').errors &&cadastroGrupoForm.get('nome').touched}\\\"\\n                formControlName=\\\"nome\\\" />\\n              <div *ngIf=\\\"cadastroGrupoForm.get('nome').hasError('required') &&cadastroGrupoForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateGrupo.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroGrupoForm.valid\\\" (click)=\\\"cadastrarGrupo(templateGrupo)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\nimport { Geracao } from 'src/app/_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from 'src/app/_models/Cadastros/Sistemas/Versao';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { SistemaClienteService } from 'src/app/_services/Cadastros/Clientes/sistemaCliente.service';\nimport { ClienteVersoes } from 'src/app/_models/Cadastros/Clientes/ClienteVersoes';\nimport { ClienteGrupos } from 'src/app/_models/Cadastros/Clientes/ClienteGrupos';\nimport { GrupoClienteService } from 'src/app/_services/Cadastros/Clientes/grupoCliente.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\n\n@Component({\n  selector: 'app-editar-cliente',\n  templateUrl: './editarCliente.component.html',\n  styleUrls: ['./editarCliente.component.css']\n})\nexport class EditarClienteComponent implements OnInit, AfterViewInit {\n\n  editar = false;\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  cadastroGrupoForm: FormGroup;\n  cliente: Cliente;\n\n  categorias = ['A', 'B', 'C', 'D'];\n  categoriaSelecionado: string;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT'];\n  statusSelecionado: string;\n\n  grupo: ClienteGrupos;\n  grupos: ClienteGrupos[];\n  grupoIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  sistemas: Sistema[];\n  sistemaIdSelecionado: any;\n\n  geracoes: Geracao[];\n  geracaoIdSelecionado: any;\n\n  versoes: Versao[];\n  versoesIdSelecionado: any;\n  versoesCliente: ClienteVersoes[];\n\n  idCliente: number;\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  dataCadProd: any;\n  dataFrenteLoja: any;\n  dataFinanceiro: any;\n\n  constructor(private clienteService: ClienteService,\n              private router: ActivatedRoute,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private clienteGruposService: GrupoClienteService,\n              private sistemaClienteService: SistemaClienteService,\n              private changeDetectionRef: ChangeDetectorRef,\n              public dataService: DataService,\n              public permissaoService: PermissaoService) {\n      this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.idCliente = +this.router.snapshot.paramMap.get('id');\n    this.getEstados();\n    this.getSistemas();\n    this.getGrupos();\n    this.validation();\n    this.validationGrupo();\n    this.carregarCliente();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarCliente() {\n    this.clienteService.getClienteById(this.idCliente)\n      .subscribe(\n        (cliente: Cliente) => {\n          this.cliente = Object.assign({}, cliente);\n          this.dataCadProd = this.dataService.getDataPTBR(this.cliente.dataImpCadProd);\n          this.dataFrenteLoja = this.dataService.getDataPTBR(this.cliente.dataImpFrenteLoja);\n          this.dataFinanceiro = this.dataService.getDataPTBR(this.cliente.dataImpFinanceiro);\n          this.cliente = Object.assign(this.cliente, {\n            dataImpCadProd: this.dataCadProd,\n            dataImpFrenteLoja: this.dataFrenteLoja,\n            dataImpFinanceiro: this.dataFinanceiro\n          });\n\n          this.cadastroForm.patchValue(this.cliente);\n\n          this.estadoIdSelecionado = this.cliente.estadoId;\n          this.getCidades(this.estadoIdSelecionado);\n          this.cidadeIdSelecionado = this.cliente.cidadeId;\n\n          this.sistemaIdSelecionado = this.cliente.sistemaId;\n          this.getGeracoes(this.sistemaIdSelecionado);\n          this.geracaoIdSelecionado = this.cliente.geracaoId;\n          this.getVersoesGeracao(this.geracaoIdSelecionado);\n          this.versoesIdSelecionado = [];\n          this.versoesCliente = [];\n          this.cliente.clienteVersoes.forEach(versoes => {\n            this.versoesCliente.push(versoes);\n            this.versoesIdSelecionado.push(versoes.versaoId);\n          });\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Cliente: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        codSiga: [''],\n        nLoja: [''],\n        razaoSocial: ['', Validators.required],\n        nomeFantasia: ['', Validators.required],\n        grupoId: [0],\n        categoria: [''],\n        proprietario: [''],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        ie: [''],\n        estadoId: ['', Validators.required],\n        cidadeId: ['', Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        sistemaId: ['', Validators.required],\n        geracaoId: ['', Validators.required],\n        dataImpCadProd: [''],\n        dataImpFrenteLoja: [''],\n        dataImpFinanceiro: [''],\n        clienteVersoes: [this.fb.group({\n          clienteId: [''],\n          versaoId: ['']\n        }), Validators.required],\n        status: ['']\n    });\n  }\n\n  adicionarClienteVersoes(versoesSelecionadas: any) {\n    this.versoesCliente = [];\n    versoesSelecionadas.forEach(versoes => {\n      this.versoesCliente.push(Object.assign({ clienteId: this.idCliente, versaoId: versoes}));\n    });\n  }\n\n  validationGrupo() {\n    this.cadastroGrupoForm = this.fb.group({\n        id: [''],\n        nome: ['', Validators.required]\n    });\n  }\n\n  getGrupos() {\n    this.clienteGruposService.getAllGrupos().subscribe(\n      (_GRUPOS: ClienteGrupos[]) => {\n      this.grupos = _GRUPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar grupos: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  getSistemas() {\n    this.sistemaClienteService.getAllSistema().subscribe(\n      (_SISTEMAS: Sistema[]) => {\n      this.sistemas = _SISTEMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar sistemas: ${error.error}`);\n    });\n  }\n\n  getGeracoes(SistemaId: number) {\n      if (SistemaId != null) {\n      this.geracaoIdSelecionado = [];\n      this.versoesIdSelecionado = [];\n      this.sistemaClienteService.getAllGeracao(SistemaId).subscribe(\n        (_GERACOES: Geracao[]) => {\n        this.geracoes = _GERACOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar geracoes: ${error.error}`);\n      });\n    }\n  }\n\n  getVersoesGeracao(GeracaoId: number) {\n    if (GeracaoId != null) {\n      this.sistemaClienteService.getAllGeracaoVersoes(GeracaoId).subscribe(\n        (_VERSOES: Versao[]) => {\n        this.versoes = _VERSOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar versoes geracao: ${error.error}`);\n      });\n    }\n  }\n\n  limparSistema() {\n    this.geracoes = [];\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      sistemaId: '',\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparGeracao() {\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparVersoes() {\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      versao: ''\n    });\n  }\n\n  limparCidade() {\n    this.cidadeIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.cidadeIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  abrirModalNovoGrupo(template: any) {\n    this.cadastroGrupoForm.reset();\n    template.show();\n  }\n\n  cadastrarGrupo(template: any) {\n    if (this.cadastroGrupoForm.valid) {\n      this.grupo = Object.assign(this.cadastroGrupoForm.value, {id: 0});\n      this.clienteGruposService.novoGrupo(this.grupo).subscribe(\n        () => {\n          this.getGrupos();\n          this.toastr.success('Grupo Cadastrado com Sucesso!');\n          template.hide();\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  salvarAlteracao() {\n    this.dataCadProd = null;\n    this.dataFrenteLoja = null;\n    this.dataFinanceiro = null;\n    if (this.cadastroForm.get('dataImpCadProd').value !== null) {\n      this.dataCadProd = this.cadastroForm.get('dataImpCadProd').value.toLocaleString();\n    }\n    if (this.cadastroForm.get('dataImpFrenteLoja').value !== null) {\n      this.dataFrenteLoja = this.cadastroForm.get('dataImpFrenteLoja').value.toLocaleString();\n    }\n    if (this.cadastroForm.get('dataImpFinanceiro').value !== null) {\n      this.dataFinanceiro = this.cadastroForm.get('dataImpFinanceiro').value.toLocaleString();\n    }\n\n    this.cliente = Object.assign(this.cadastroForm.value, { id: this.cliente.id,\n      dataImpCadProd: this.dataService.getDataSQL(this.dataCadProd),\n      dataImpFrenteLoja: this.dataService.getDataSQL(this.dataFrenteLoja),\n      dataImpFinanceiro: this.dataService.getDataSQL(this.dataFinanceiro) });\n\n    this.cliente.clienteVersoes = [];\n    this.versoesCliente.forEach(versoes => {\n      this.cliente.clienteVersoes.push(versoes);\n    });\n    this.clienteService.editarCliente(this.cliente).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarCliente();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n}\n","module.exports = \"ng-select.ng-invalid.ng-touched .ng-select-container {\\r\\n    background-color: #ffcccc;\\r\\n    border-color: #ff0000;\\r\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvbm92b0NsaWVudGUvbm92b0NsaWVudGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsbUVBQW1FO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvbm92b0NsaWVudGUvbm92b0NsaWVudGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm5nLXNlbGVjdC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQgLm5nLXNlbGVjdC1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmY2NjYztcclxuICAgIGJvcmRlci1jb2xvcjogI2ZmMDAwMDtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDAgM3B4ICNmZGU2ZTg7XHJcbn0iXX0= */\"","module.exports = \"<h2>Cliente</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Cod.Siga:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codSiga\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>N° Loja:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nLoja\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('razaoSocial').hasError('required') &&cadastroForm.get('razaoSocial').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Razão Social é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Nome Fantasia:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nomeFantasia').errors && \\n                                                      cadastroForm.get('nomeFantasia').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('nomeFantasia').hasError('required') &&cadastroForm.get('nomeFantasia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome Fantasia é obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Grupo:</label>\\n              <div class=\\\"input-group\\\">\\n                <ng-select [items]=\\\"grupos\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" (change)=\\\"getGrupos()\\\"\\n                  [(ngModel)]=\\\"grupoIdSelecionado\\\" formControlName=\\\"grupoId\\\">\\n                </ng-select>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"abrirModalNovoGrupo(templateGrupo)\\\" tooltip=\\\"Novo Grupo\\\">\\n                    <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Categoria:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"categorias\\\" [(ngModel)]=\\\"categoriaSelecionado\\\"\\n                formControlName=\\\"categoria\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Proprietário:</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"proprietario\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                    cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n        </tab>\\n\\n        <tab heading=\\\"Sistema\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Sistema:(*)</label>\\n              <ng-select [items]=\\\"sistemas\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparSistema()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getGeracoes(sistemaIdSelecionado)\\\" [(ngModel)]=\\\"sistemaIdSelecionado\\\"\\n                formControlName=\\\"sistemaId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('sistemaId').hasError('required') && cadastroForm.get('sistemaId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Sistema é Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Gerações:(*)</label>\\n              <ng-select [items]=\\\"geracoes\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparGeracao()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getVersoesGeracao(geracaoIdSelecionado)\\\" [(ngModel)]=\\\"geracaoIdSelecionado\\\"\\n                formControlName=\\\"geracaoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('geracaoId').hasError('required') && cadastroForm.get('geracaoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Geração é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Versões:(*)</label>\\n              <ng-select [items]=\\\"versoes\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarClienteVersoes(versoesIdSelecionado)\\\" [(ngModel)]=\\\"versoesIdSelecionado\\\"\\n                formControlName=\\\"clienteVersoes\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('clienteVersoes').hasError('required') && cadastroForm.get('clienteVersoes').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Versão(ões) é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button \\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarCliente()\\\"\\n  tooltip=\\\"Novo Cliente\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\\n\\n\\n\\n<div bsModal #templateGrupo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateGrupo.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroGrupoForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Nome:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroGrupoForm.get('nome').errors &&cadastroGrupoForm.get('nome').touched}\\\"\\n                formControlName=\\\"nome\\\" />\\n              <div *ngIf=\\\"cadastroGrupoForm.get('nome').hasError('required') &&cadastroGrupoForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateGrupo.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroGrupoForm.valid\\\" (click)=\\\"cadastrarGrupo(templateGrupo)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { GrupoClienteService } from 'src/app/_services/Cadastros/Clientes/grupoCliente.service';\nimport { ClienteGrupos } from 'src/app/_models/Cadastros/Clientes/ClienteGrupos';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\nimport { Geracao } from 'src/app/_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from 'src/app/_models/Cadastros/Sistemas/Versao';\nimport { ClienteVersoes } from 'src/app/_models/Cadastros/Clientes/ClienteVersoes';\nimport { SistemaClienteService } from 'src/app/_services/Cadastros/Clientes/sistemaCliente.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-cliente',\n  templateUrl: './novoCliente.component.html',\n  styleUrls: ['./novoCliente.component.css']\n})\n\nexport class NovoClienteComponent implements OnInit {\n\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  cadastroGrupoForm: FormGroup;\n  cliente: Cliente;\n\n  categorias = ['A', 'B', 'C', 'D'];\n  categoriaSelecionado: string;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT'];\n  statusSelecionado: string;\n\n  grupo: ClienteGrupos;\n  grupos: ClienteGrupos[];\n  grupoIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  sistemas: Sistema[];\n  sistemaIdSelecionado: any;\n\n  geracoes: Geracao[];\n  geracaoIdSelecionado: any;\n\n  versoes: Versao[];\n  versoesIdSelecionado: any;\n  versoesCliente: ClienteVersoes[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private clienteService: ClienteService,\n              private clienteGruposService: GrupoClienteService,\n              private sistemaClienteService: SistemaClienteService,\n              public router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) {\n               }\n\n  ngOnInit() {\n    this.getEstados();\n    this.getGrupos();\n    this.getSistemas();\n    this.validation();\n    this.validationGrupo();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        codSiga: [''],\n        nLoja: [''],\n        razaoSocial: ['', Validators.required],\n        nomeFantasia: ['', Validators.required],\n        grupoId: [0, Validators.required],\n        categoria: [''],\n        proprietario: [''],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        sistemaId: ['', Validators.required],\n        geracaoId: ['', Validators.required],\n        clienteVersoes: [this.fb.group({\n          clienteId: [''],\n          versaoId: ['']\n        }), Validators.required],\n        status: ['']\n    });\n  }\n\n\n  adicionarClienteVersoes(versoesSelecionadas: any) {\n    this.versoesCliente = [];\n    versoesSelecionadas.forEach(versoes => {\n      this.versoesCliente.push(Object.assign({ clienteId: 0, versaoId: versoes}));\n    });\n  }\n\n  validationGrupo() {\n    this.cadastroGrupoForm = this.fb.group({\n        id: [''],\n        nome: ['', Validators.required]\n    });\n  }\n\n  getGrupos() {\n    this.clienteGruposService.getAllGrupos().subscribe(\n      (_GRUPOS: ClienteGrupos[]) => {\n      this.grupos = _GRUPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar grupos: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  getSistemas() {\n    this.sistemaClienteService.getAllSistema().subscribe(\n      (_SISTEMAS: Sistema[]) => {\n      this.sistemas = _SISTEMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar sistemas: ${error.error}`);\n    });\n  }\n\n  getGeracoes(SistemaId: number) {\n      if (SistemaId != null) {\n      this.geracaoIdSelecionado = [];\n      this.versoesIdSelecionado = [];\n      this.sistemaClienteService.getAllGeracao(SistemaId).subscribe(\n        (_GERACOES: Geracao[]) => {\n        this.geracoes = _GERACOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar geracoes: ${error.error}`);\n      });\n    }\n  }\n\n  getVersoesGeracao(GeracaoId: number) {\n    if (GeracaoId != null) {\n      this.sistemaClienteService.getAllGeracaoVersoes(GeracaoId).subscribe(\n        (_VERSOES: Versao[]) => {\n        this.versoes = _VERSOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar versoes geracao: ${error.error}`);\n      });\n    }\n  }\n\n  limparSistema() {\n    this.geracoes = [];\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      sistemaId: '',\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparGeracao() {\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparVersoes() {\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      versao: ''\n    });\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  abrirModalNovoGrupo(template: any) {\n    this.cadastroGrupoForm.reset();\n    template.show();\n  }\n\n  cadastrarGrupo(template: any) {\n    if (this.cadastroGrupoForm.valid) {\n      this.grupo = Object.assign(this.cadastroGrupoForm.value, {id: 0});\n      this.clienteGruposService.novoGrupo(this.grupo).subscribe(\n        () => {\n          this.getGrupos();\n          this.toastr.success('Grupo Cadastrado com Sucesso!');\n          template.hide();\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  cadastrarCliente() {\n    if (this.cadastroForm.valid) {\n      this.cliente = Object.assign(this.cadastroForm.value, {id: 0, clienteVersoes: null});\n      this.clienteService.novoCliente(this.cliente).subscribe(\n        () => {\n\n          this.clienteService.getIdUltimoCliente().subscribe(\n            (_CLIENTE: Cliente) => {\n              const IdUltimoCliente = _CLIENTE.id;\n              this.cliente = Object.assign(this.cadastroForm.value, {id: IdUltimoCliente});\n\n              this.cliente.clienteVersoes = [];\n              this.versoesCliente.forEach(versoes => {\n                this.cliente.clienteVersoes.push(Object.assign({ clienteId: IdUltimoCliente , versaoId: versoes.versaoId}));\n              });\n\n              this.clienteService.editarCliente(this.cliente).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/clientes/editar/${IdUltimoCliente}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Pessoa</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome :(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nome').errors && \\n                                                        cadastroForm.get('nome').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('nome').hasError('required') &&cadastroForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Tipo(s):(*)</label>\\n              <ng-select [items]=\\\"tiposPessoa\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarPessoaTipos(tiposIdSelecionado)\\\" [(ngModel)]=\\\"tiposIdSelecionado\\\"\\n                formControlName=\\\"pessoaTipos\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('pessoaTipos').hasError('required') && cadastroForm.get('pessoaTipos').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Tipo(s) é Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo Obrigatório.\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\nimport { PessoaTipos } from 'src/app/_models/Cadastros/Pessoas/PessoaTipos';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-editar-pessoa',\n  templateUrl: './editarPessoa.component.html'\n})\nexport class EditarPessoaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  editar = false;\n  cadastroForm: FormGroup;\n  pessoa: Pessoa;\n  idPessoa: number;\n\n  status = ['ATIVO', 'INATIVO'];\n  statusSelecionado: string;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  tiposPessoa: TiposPessoa[];\n  tiposIdSelecionado: any;\n  pessoaTipos: PessoaTipos[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private pessoaService: PessoaService,\n              public router: ActivatedRoute,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.idPessoa = +this.router.snapshot.paramMap.get('id');\n    this.getTipos();\n    this.getEstados();\n    this.carregarPessoa();\n    this.validarForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n\n  carregarPessoa() {\n    this.pessoaService.getPessoaById(this.idPessoa)\n      .subscribe(\n        (_PESSOA: Pessoa) => {\n          this.pessoa = Object.assign({}, _PESSOA);\n          this.cadastroForm.patchValue(this.pessoa);\n\n          this.estadoIdSelecionado = this.pessoa.estadoId;\n          this.getCidades(this.estadoIdSelecionado);\n          this.cidadeIdSelecionado = this.pessoa.cidadeId;\n\n          this.tiposIdSelecionado = [];\n          this.pessoaTipos = [];\n          this.pessoa.pessoaTipos.forEach(tipos => {\n            this.pessoaTipos.push(tipos);\n            this.tiposIdSelecionado.push(tipos.tiposPessoaId);\n          });\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Pessoa: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        razaoSocial: [''],\n        nome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        pessoaTipos: [this.fb.group({\n          pessoasId: [''],\n          tiposPessoaId: ['']\n        }), Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  salvarAlteracoes() {\n    this.pessoa = Object.assign({ id: this.pessoa.id }, this.cadastroForm.value);\n    this.pessoa.pessoaTipos = [];\n    this.pessoaTipos.forEach(tipos => {\n      this.pessoa.pessoaTipos.push(tipos);\n    });\n    this.pessoaService.editarPessoa(this.pessoa).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarPessoa();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n\n  adicionarPessoaTipos(tiposSelecionados: any) {\n    this.pessoaTipos = [];\n    tiposSelecionados.forEach(tipo => {\n      this.pessoaTipos.push(Object.assign({ pessoasId: 0, tiposPessoaId: tipo}));\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n}\n","module.exports = \"<h2>Pessoa</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome :(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nome').errors && \\n                                                        cadastroForm.get('nome').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('nome').hasError('required') &&cadastroForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Tipo(s):(*)</label>\\n              <ng-select [items]=\\\"tiposPessoa\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarPessoaTipos(tiposIdSelecionado)\\\" [(ngModel)]=\\\"tiposIdSelecionado\\\"\\n                formControlName=\\\"pessoaTipos\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('pessoaTipos').hasError('required') && cadastroForm.get('pessoaTipos').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Tipo(s) é Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo Obrigatório.\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarPessoa()\\\" tooltip=\\\"Novo Pessoa\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { PessoaTipos } from 'src/app/_models/Cadastros/Pessoas/PessoaTipos';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { Router } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-pessoa',\n  templateUrl: './novoPessoa.component.html'\n})\nexport class NovoPessoaComponent implements OnInit, AfterViewChecked {\n\n  cadastroForm: FormGroup;\n  pessoa: Pessoa;\n\n  status = ['ATIVO', 'INATIVO'];\n  statusSelecionado: string;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  tiposPessoa: TiposPessoa[];\n  tiposIdSelecionado: any;\n  pessoaTipos: PessoaTipos[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private pessoaService: PessoaService,\n              public router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getTipos();\n    this.getEstados();\n    this.validarForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        razaoSocial: [''],\n        nome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        pessoaTipos: [this.fb.group({\n          pessoasId: [''],\n          tiposPessoaId: ['']\n        }), Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n\n  adicionarPessoaTipos(tiposSelecionados: any) {\n    this.pessoaTipos = [];\n    tiposSelecionados.forEach(tipo => {\n      this.pessoaTipos.push(Object.assign({ pessoasId: 0, tiposPessoaId: tipo}));\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n}\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  cadastrarPessoa() {\n    if (this.cadastroForm.valid) {\n      this.pessoa = Object.assign(this.cadastroForm.value, {id: 0, pessoaTipos: null});\n      this.pessoaService.novoPessoa(this.pessoa).subscribe(\n        () => {\n\n          this.pessoaService.getIdUltimaPessoa().subscribe(\n            (_PESSOA: Pessoa) => {\n              const IdUltimaPessoa = _PESSOA.id;\n              this.pessoa = Object.assign(this.cadastroForm.value, {id: IdUltimaPessoa});\n\n              this.pessoa.pessoaTipos = [];\n              this.pessoaTipos.forEach(tipos => {\n                this.pessoa.pessoaTipos.push(Object.assign({ pessoasId: IdUltimaPessoa , tiposPessoaId: tipos.tiposPessoaId}));\n              });\n\n              this.pessoaService.editarPessoa(this.pessoa).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/pessoas/editar/${IdUltimaPessoa}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Pessoas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado != 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <div *ngIf=\\\"filtroSelecionado == 'TIPO'\\\">\\n          <label>Tipo:</label>\\n          <ng-select [items]=\\\"tiposPessoa\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"descricao\\\"\\n            [(ngModel)]=\\\"filtroLista\\\" name=\\\"tipoFiltro\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'NOME'\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'CNPJ/CPF'\\\">\\n          <label>Filtro:</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\"\\n            [ngModel]=\\\"filtroLista | cnpjCpfPipePipe\\\" (ngModelChange)=\\\"filtroLista=$event\\\" />\\n        </div>\\n      </div>\\n\\n\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-1\\\">\\n        <label>Estado:</label>\\n        <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n          (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" name=\\\"estadoFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Cidade:</label>\\n        <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n          bindValue=\\\"id\\\" [(ngModel)]=\\\"filtroLista\\\" name=\\\"cidadeFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n      <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/pessoas','novo']\\\" tooltip=\\\"Nova Pessoa\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Pessoa\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Nome</th>\\n          <th>Tipo(s)</th>\\n          <th>Telefone</th>\\n          <th>Celular</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"pessoas && pessoas.length\\\">\\n        <tr\\n          *ngFor=\\\"let pessoa of pessoasFiltrados | paginate: { itemsPerPage: 5, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ pessoa.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.nome }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">\\n            <span style=\\\"margin-right:5px;\\\" class=\\\"label label-primary\\\" *ngFor=\\\"let pTipos of pessoa.pessoaTipos\\\">\\n              {{ pTipos.tiposPessoa.descricao }}\\n            </span>&nbsp;\\n          </td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.telefone }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.celular }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir == true\\\" class=\\\"btn btn-sm btn-danger\\\" tooltip=\\\"Excluir\\\"\\n                (click)=\\\"excluirPessoa(pessoa, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\" [routerLink]=\\\"['/pessoas','editar', pessoa.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!pessoas\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum cliente encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"clientePagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Pessoa\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirPessoa}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmarExclusao(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\n\n@Component({\n  selector: 'app-pessoa',\n  templateUrl: './pessoa.component.html'\n})\nexport class PessoaComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  pessoasFiltrados: Pessoa[];\n  pessoa: Pessoa;\n  pessoas: Pessoa[];\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirPessoa = '';\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  status = ['ATIVO', 'INATIVO', 'TODOS'];\n  statusFiltroSelecionado = 'ATIVO';\n\n  filtrarPor = ['NOME', 'TIPO', 'CNPJ/CPF', 'CIDADE'];\n  filtroSelecionado = 'NOME';\n\n  cidades: Cidade[];\n  cidadeIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  tiposPessoa: TiposPessoa[];\n  tipoIdSelecionado: any;\n\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  valueCnpjCpfPipe = '';\n\n  constructor(\n    private pessoaService: PessoaService,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getEstados();\n    this.estadoIdSelecionado = 11;\n    this.getCidades(this.estadoIdSelecionado);\n    this.getTipos();\n    this.getPessoas();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n}\n\n  excluirPessoa(pessoa: Pessoa, template: any) {\n    this.pessoa = pessoa;\n    this.bodyExcluirPessoa = `Tem certeza que deseja excluir : ${pessoa.nome}, Código: ${pessoa.id}?`;\n    template.show();\n  }\n\n  confirmarExclusao(template: any) {\n    this.pessoaService.excluirPessoa(this.pessoa.id).subscribe(\n    () => {\n        template.hide();\n        this.getPessoas();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  get filtroLista(): string {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.pessoasFiltrados = this.filtrarPessoas(this._filtroLista);\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    this.pessoasFiltrados = this.filtrarPessoas(this.filtroLista);\n  }\n\n  filtrarPessoas(filtrarPor: string): Pessoa[] {\n    if (this.statusFiltroSelecionado !== 'TODOS') {\n      this.filtroRetorno = this.pessoas.filter(_PESSOA => _PESSOA.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.pessoas;\n    }\n    if (filtrarPor) {\n      if (this.filtroSelecionado === 'NOME') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.nome.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'TIPO') {\n        this.filtroRetorno = this.filtroRetorno;\n      } else if (this.filtroSelecionado === 'CNPJ/CPF') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.cnpjCpf.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CIDADE') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.cidadeId === filtrarPor);\n      }\n    }\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getPessoas() {\n    this.pessoaService.getAllPessoa().subscribe(\n      (_PESSOAS: Pessoa[]) => {\n      this.pessoas = _PESSOAS;\n      this.pessoasFiltrados = this.filtrarPessoas(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar pessoas: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.filtroLista = '';\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.filtroLista = '';\n  }\n\n}\n","module.exports = \"<h2>Produto</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Descrição:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"descricao\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors && \\n                                        cadastroForm.get('descricao').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </tab>\\n \\n      <tab heading=\\\"Produto Itens\\\" style=\\\"margin-top: 20px;\\\">\\n          <div style=\\\"margin-right: 15px;margin-bottom: 10px;\\\"class=\\\"pull-right\\\">\\n              <a (click)=\\\"novoItem(templateItem)\\\"\\n                tooltip=\\\"Novo Item\\\" class=\\\"btn btn-success\\\"> \\n                <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Item\\n              </a>\\n            </div>\\n  \\n          <table class=\\\"table table-striped table-bordered mt-3\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th>Id</th>\\n                <th>Descrição</th>\\n                <th>Tipo</th>\\n                <th style=\\\"text-align: center;\\\">Ações</th>\\n              </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"produtoItens && produtoItens.length\\\">\\n              <tr *ngFor=\\\"let Item of produtoItens\\\">\\n                <td>{{ Item.id }}</td>\\n                <td style=\\\"white-space: nowrap;\\\" >{{ Item.descricao }}</td>\\n                <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                    <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem == 'ENTRADA'\\\" class=\\\"label label-info\\\">\\n                      {{ Item.tipoItem }}\\n                    </span>\\n                    <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem != 'ENTRADA'\\\" class=\\\"label label-danger\\\">\\n                        {{ Item.tipoItem }}\\n                    </span>\\n                    <span style=\\\"margin-left: 5px;margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem != 'ENTRADA'\\\" class=\\\"label label-warning\\\">\\n                      {{ Item.subTipoItem }}\\n                    </span>\\n              </td>\\n                <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"editarItem(templateItem, Item)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                      class=\\\"btn btn-sm btn-primary\\\">\\n                      <i class=\\\"fa fa-edit\\\"></i>\\n                    </a>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n  \\n            <tfoot *ngIf=\\\"!produtoItens\\\">\\n              <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n              <h4>\\n                Nenhum Item encontrado!\\n              </h4>\\n            </tfoot>\\n          </table>\\n        </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\" tooltip=\\\"Salvar\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n\\n<div bsModal #templateItem=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Item\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateItem.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroItemForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>Tipo:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"tipos\\\" [(ngModel)]=\\\"tipoSelecionado\\\"\\n                formControlName=\\\"tipoItem\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('tipoItem').hasError('required') &&cadastroItemForm.get('tipoItem').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"tipoSelecionado == 'SAIDA'\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>SubTipo:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"subTipos\\\" [(ngModel)]=\\\"subTipoSelecionado\\\"\\n                formControlName=\\\"subTipoItem\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('subTipoItem').hasError('required') &&cadastroItemForm.get('subTipoItem').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Descrição:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroItemForm.get('descricao').errors &&cadastroItemForm.get('descricao').touched}\\\"\\n                formControlName=\\\"descricao\\\" />\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('descricao').hasError('required') &&cadastroItemForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateItem.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary ml-auto\\\" [disabled]=\\\"!cadastroItemForm.valid\\\"\\n          (click)=\\\"adicionarItem(templateItem)\\\">\\n          Salvar Alterações\\n        </button>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Component({\n  selector: 'app-editar-produto',\n  templateUrl: './editarProduto.component.html'\n})\nexport class EditarProdutoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  cadastroItemForm: FormGroup;\n\n  produto: Produto;\n  idProduto: number;\n\n  tipos = ['ENTRADA', 'SAIDA'];\n  tipoSelecionado: string;\n\n  subTipos = ['COMISSÃO', 'GASTO'];\n  subTipoSelecionado: string;\n\n  produtoItens: ProdutoItem[] = [];\n  novosItem: ProdutoItem[] = [];\n  idItemEdit: number;\n\n  modoSalvar = '';\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private produtoService: ProdutoService,\n              public router: ActivatedRoute,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngOnInit() {\n    this.idProduto = +this.router.snapshot.paramMap.get('id');\n    this.validarForm();\n    this.validarItemForm();\n    this.carregarProduto();\n  }\n\n  carregarProduto() {\n    this.produtoService.getProdutoById(this.idProduto)\n    .subscribe((produto: Produto) => {\n      this.produto = Object.assign({}, produto);\n      this.cadastroForm.patchValue(this.produto);\n\n      this.produtoItens = [];\n      this.produtoItens = produto.itens;\n\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Produto: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required]\n    });\n  }\n\n  validarItemForm() {\n    this.cadastroItemForm = this.fb.group({\n        id:  [''],\n        produtosId: [''],\n        tipoItem: ['', Validators.required],\n        subTipoItem: ['', Validators.required],\n        descricao: ['', Validators.required]\n    });\n  }\n\n  adicionarItem(template: any) {\n\n    if (this.cadastroItemForm.get('tipoItem').value === 'ENTRADA') {\n      this.cadastroItemForm.get('subTipoItem').setValue(null);\n    }\n\n    if (this.modoSalvar === 'novo') {\n      this.novosItem.push(Object.assign(this.cadastroItemForm.value, {id: 0, produtosId: this.idProduto}));\n      if (this.novosItem.length > 0) {\n        this.produtoService.novoItem(this.novosItem).subscribe(() => {\n          this.cadastroItemForm.reset();\n          this.carregarProduto();\n          this.toastr.success('Item Cadastrado com sucesso!');\n        });\n      }\n      this.novosItem = [];\n    } else {\n      const item = Object.assign(this.cadastroItemForm.value);\n\n      this.produtoService.editarItem(item, this.idItemEdit).subscribe(\n        () => {\n          this.cadastroItemForm.reset();\n          this.carregarProduto();\n          this.toastr.success('Editado com sucesso!');\n        });\n    }\n    template.hide();\n  }\n\n  editarItem(template: any, Item: any) {\n    this.modoSalvar = 'editar';\n    this.idItemEdit = Item.id;\n    this.cadastroItemForm.patchValue(Item);\n    this.subTipoSelecionado = Item.subTipoItem;\n    template.show();\n  }\n\n  novoItem(template: any) {\n    this.modoSalvar = 'novo';\n    this.cadastroItemForm.reset();\n    this.tipoSelecionado = null;\n    this.subTipoSelecionado = null;\n    template.show();\n  }\n\n  salvarAlteracoes() {\n    this.produto = Object.assign({ id: this.produto.id }, this.cadastroForm.value);\n\n    this.produtoService.editarProduto(this.produto).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarProduto();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n}\n","module.exports = \"<h2>Produto</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Descrição:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"descricao\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors && \\n                                        cadastroForm.get('descricao').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarProduto()\\\" tooltip=\\\"Novo Produto\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-novo-produto',\n  templateUrl: './novoProduto.component.html'\n})\nexport class NovoProdutoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  produto: Produto;\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private produtoService: ProdutoService,\n              private router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngOnInit() {\n    this.validarForm();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['']\n    });\n  }\n\n  cadastrarProduto() {\n    if (this.cadastroForm.valid) {\n      this.produto = Object.assign(this.cadastroForm.value, {id: 0});\n      this.produtoService.novoProduto(this.produto).subscribe(\n        () => {\n          this.produtoService.getIdUltimoProduto().subscribe(\n            (_PRODUTO: Produto) => {\n              const IdUltimoProduto = _PRODUTO.id;\n\n              this.toastr.success('Cadastrado com sucesso!');\n              this.router.navigate([`/produtos/editar/${IdUltimoProduto}`]);\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Produtos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-4\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pesquisar...\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n        <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n            <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/produtos','novo']\\\"\\n              tooltip=\\\"Novo Produto\\\" class=\\\"btn btn-success\\\"> \\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Produto\\n            </a>\\n          </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Descrição</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"produtos && produtos.length\\\">\\n        <tr *ngFor=\\\"let produto of produtosFiltrados | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ produto.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ produto.descricao }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir == true\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                tooltip=\\\"Excluir\\\" (click)=\\\"excluirProduto(produto, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                [routerLink]=\\\"['/produtos','editar', produto.id]\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!produtos\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum produto encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Produto\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirProduto}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmarExclusao(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html'\n})\nexport class ProdutoComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  produtosFiltrados: Produto[];\n  produtos: Produto[];\n  produto: Produto;\n  produtoId: number;\n\n  bodyExcluirProduto = '';\n\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n  filtroProdutos: any;\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  constructor(private produtoService: ProdutoService,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getProdutos();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.produtosFiltrados = this.filtrarProdutos(this.filtroLista);\n  }\n\n  excluirProduto(produto: Produto, template: any) {\n    template.show();\n    this.produto = produto;\n    this.bodyExcluirProduto = `Tem certeza que deseja excluir o Produto: ${produto.descricao}, Código: ${produto.id}?`;\n  }\n\n  confirmarExclusao(template: any) {\n    this.produtoService.excluirProduto(this.produto.id).subscribe(\n    () => {\n        template.hide();\n        this.getProdutos();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  filtrarProdutos(filtrarPor: string): Produto[] {\n    this.filtroProdutos = this.produtos;\n\n    if (filtrarPor) {\n      filtrarPor = filtrarPor.toLocaleLowerCase();\n      this.filtroProdutos = this.produtos.filter(\n        produto => produto.descricao.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n      );\n    }\n\n    this.totalRegistros = this.filtroProdutos.length;\n    return this.filtroProdutos;\n  }\n\n  getProdutos() {\n      this.produtoService.getAllProduto().subscribe(\n        // tslint:disable-next-line:variable-name\n        (_produtos: Produto[]) => {\n        this.produtos = _produtos;\n        this.produtosFiltrados = this.filtrarProdutos(this.filtroLista);\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar produtos: ${error}`);\n      });\n  }\n\n}\n","module.exports = \"<h2>Alterar Senha</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form [formGroup]=\\\"cadastroForm\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label>Senha Atual:</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"senhaAtual\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('senhaAtual').errors &&\\n                                                             cadastroForm.get('senhaAtual').touched}\\\"\\n              placeholder=\\\"Digite sua Senha atual\\\" />\\n            <div *ngIf=\\\"cadastroForm.get('senhaAtual').hasError('minlength') &&\\n                                  cadastroForm.get('senhaAtual').touched\\\" class=\\\"invalid-feedback\\\">\\n              Deve conter no mínimo 4 caracters.\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('senhaAtual').hasError('required') &&\\n                                            cadastroForm.get('senhaAtual').touched\\\" class=\\\"invalid-feedback\\\">\\n              Senha Atual é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formGroupName=\\\"passwords\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Senha:</label>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.password').errors &&\\n                                                             cadastroForm.get('passwords.password').touched}\\\"\\n                placeholder=\\\"Digite uma Senha\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('minlength') &&\\n                                  cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                Deve conter no mínimo 4 caracters.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('required') &&\\n                                            cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                Senha é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Confirmar Senha:</label>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.confirmPassword').errors \\n                                               && cadastroForm.get('passwords.confirmPassword').touched \\n                                               ||cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                               && cadastroForm.get('passwords.confirmPassword').touched }\\\"\\n                placeholder=\\\"Confirme a Senha\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('required') &&\\n                                            cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Confirme a senha.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                            && cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Senhas diferentes!\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.idUsuario == permissaoService.getUsuarioId()\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracao()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { UsuarioSenha } from 'src/app/_models/Cadastros/Usuarios/UsuarioSenha';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-editar-senha-usuario',\n  templateUrl: './editarSenhaUsuario.component.html'\n})\nexport class EditarSenhaUsuarioComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  senhas: UsuarioSenha;\n  idUsuario: any;\n  constructor(private usuarioService: UsuarioService,\n              private router: ActivatedRoute,\n              private router2: Router,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.idUsuario = +this.router.snapshot.paramMap.get('id');\n    this.validation();\n  }\n\n  validation()  {\n    this.cadastroForm = this.fb.group({\n      senhaAtual: ['', [Validators.required, Validators.minLength(4)]],\n      passwords: this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required]\n      }, { validator : this.compararSenhas})\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({mismatch: true});\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  salvarAlteracao() {\n    this.senhas = Object.assign({ novaSenha: this.cadastroForm.get('passwords.password').value,\n     senhaAtual: this.cadastroForm.get('senhaAtual').value });\n\n    this.usuarioService.editarSenhaUsuario(this.permissaoService.getUsuarioId(), this.senhas).subscribe(\n      () => {\n        this.toastr.success('Senha alterada com sucesso!');\n        this.router2.navigate([`/usuarios/editar/${this.permissaoService.getUsuarioId()}`]);\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar Senha: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \"<h2>Usuário</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mr-8\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome Completo:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nomeCompleto\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('nomeCompleto').errors &&\\n                                                cadastroForm.get('nomeCompleto').touched }\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('nomeCompleto').hasError('required') &&\\n                                  cadastroForm.get('nomeCompleto').touched\\\" class=\\\"invalid-feedback\\\">\\n                Nome Completo é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Email:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                  cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail é obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Usuario:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"userName\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('userName').errors &&\\n                                                  cadastroForm.get('userName').touched}\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('userName').hasError('required') &&\\n                                  cadastroForm.get('userName').touched\\\" class=\\\"invalid-feedback\\\">\\n                Usuário é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Data de Nascimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNascimento\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataNascimento').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"/>\\n            </div>\\n\\n            <div *ngIf=\\\"this.visualizarNivel\\\" class=\\\"form-group col-md-6\\\">\\n              <label>Nível:(*)</label>\\n              <ng-select [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarUsuarioNivel(niveisIdSelecionado)\\\" [(ngModel)]=\\\"niveisIdSelecionado\\\"\\n                formControlName=\\\"usuarioNivel\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('usuarioNivel').hasError('required') && cadastroForm.get('usuarioNivel').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </tab>\\n\\n      <tab *ngIf=\\\"this.visualizarOcorrencia\\\" heading=\\\"Ocorrências\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"pull-right\\\">\\n          <button (click)=\\\"novaOcorrencia(templateOcorrencia)\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Ocorrência\\n          </button>\\n        </div>\\n\\n        <table class=\\\"table table-striped table-bordered mt-3\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th>Id</th>\\n              <th>Data</th>\\n              <th>Descrição</th>\\n              <th style=\\\"text-align: center;\\\">Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"usuarioOcorrencias && usuarioOcorrencias.length\\\">\\n            <tr *ngFor=\\\"let ocorrencia of usuarioOcorrencias\\\">\\n              <td>{{ ocorrencia.id }}</td>\\n              <td>{{ ocorrencia.data }}</td>\\n              <td>{{ ocorrencia.descricao }}</td>\\n              <td>\\n                <div class=\\\"btn-group\\\">\\n                  <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"removerOcorrencia(ocorrencia)\\\" tooltip=\\\"Excluir\\\">\\n                    <i class=\\\"fa fa-eraser\\\"></i>\\n                  </button>\\n                  <a [routerLink]=\\\"['/usuarioOcorrencias','editar', usuario.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                    class=\\\"btn btn-sm btn-primary\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                  </a>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n\\n          <tfoot *ngIf=\\\"!usuarioOcorrencias\\\">\\n            <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n            <h4>\\n              Nenhuma ocorrência encontrada!\\n            </h4>\\n          </tfoot>\\n        </table>\\n      </tab>\\n \\n    </tabset>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar || this.idUsuario == usuario.id\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracao()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n\\n<div bsModal #templateOcorrencia=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Ocorrência\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateOcorrencia.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroOcorrenciaForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Data:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"data\\\"\\n                [ngModel]=\\\"cadastroOcorrenciaForm.get('data').value\\\" bsDatepicker />\\n\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('data').hasError('required') && cadastroOcorrenciaForm.get('data').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Data é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-10\\\">\\n              <label>Descrição:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroOcorrenciaForm.get('descricao').errors &&cadastroOcorrenciaForm.get('descricao').touched}\\\"\\n                formControlName=\\\"descricao\\\" placeholder=\\\"\\\" />\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('required') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição é obrigatória.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('minlength') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição deve ter no mínimo 10 Caracteres.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('maxlength') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição deve ter no máximo 50 Caracteres.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <label>Observação</label>\\n            <textarea class=\\\"form-control\\\"\\n              [ngClass]=\\\"{'is-invalid':cadastroOcorrenciaForm.get('observacao').errors &&cadastroOcorrenciaForm.get('observacao').touched}\\\"\\n              formControlName=\\\"observacao\\\" placeholder=\\\"\\\" rows=\\\"4\\\"></textarea>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('required') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação é obrigatória.\\n            </div>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('minlength') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação deve ter no mínimo 10 Caracteres.\\n            </div>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('maxlength') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação deve ter no máximo 100 Caracteres.\\n            </div>\\n          </div>\\n        </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateOcorrencia.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary ml-auto\\\" [disabled]=\\\"!cadastroOcorrenciaForm.valid\\\"\\n          (click)=\\\"adicionarOcorrencia(templateOcorrencia)\\\">\\n          Salvar Alterações\\n        </button>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioOcorrencia } from 'src/app/_models/Cadastros/Usuarios/UsuarioOcorrencia';\nimport { Nivel } from 'src/app/_models/Cadastros/Usuarios/Nivel';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport * as moment from 'moment';\nimport { DatepickerOptions } from 'ng2-datepicker';\nimport * as ptLocale from 'date-fns/locale/pt';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n@Component({\n  selector: 'app-editar-usuario',\n  templateUrl: './editarUsuario.component.html'\n})\nexport class EditarUsuarioComponent implements OnInit, AfterViewInit {\n\n  editar = false;\n  visualizarOcorrencia = false;\n  visualizarNivel = false;\n\n  cadastroForm: FormGroup;\n  idUsuario: number;\n  cadastroOcorrenciaForm: FormGroup;\n  usuario: Usuario = new Usuario();\n  usuarioOcorrencias: UsuarioOcorrencia[] = [];\n  dataAtual = '';\n  modoSalvarOcorrencia = '';\n\n  niveis: Nivel[];\n  niveisIdSelecionado: any;\n  niveisUsuario: UsuarioNivel[];\n  bsConfig: Partial<BsDatepickerConfig>;\n  dateFormat = '';\n\n  constructor(private usuarioService: UsuarioService,\n              private router: ActivatedRoute,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private changeDetectionRef: ChangeDetectorRef,\n              private permissaoService: PermissaoService,\n              private dataService: DataService) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-dark-blue' });\n    this.idUsuario = +this.router.snapshot.paramMap.get('id');\n    this.getNiveis();\n    this.validation();\n    this.carregarUsuario();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'VISUALIZAR', 'OCORRENCIA').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarOcorrencia = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'VISUALIZAR', 'NIVEL').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarNivel = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarUsuario() {\n\n  this.usuarioOcorrencias.length = 0;\n  this.usuarioService.getUsuarioById(this.idUsuario)\n    .subscribe(\n    (usuario: Usuario) => {\n        this.usuario = Object.assign({}, usuario);\n        const data = this.usuario.dataNascimento;\n        this.usuario = Object.assign(this.usuario, { dataNascimento: this.dataService.getDataPTBR(data) });\n        this.cadastroForm.patchValue(this.usuario);\n\n        this.usuario.usuarioOcorrencias.forEach(ocorrencia => {\n          ocorrencia = Object.assign(ocorrencia, { data: this.dataService.getDataPTBR(ocorrencia.data) });\n          this.usuarioOcorrencias.push(ocorrencia);\n        });\n\n        this.niveisIdSelecionado = [];\n        this.niveisUsuario = [];\n\n        this.usuario.usuarioNivel.forEach(niveis => {\n          this.niveisUsuario.push(niveis);\n          this.niveisIdSelecionado.push(niveis.roleId);\n        });\n    });\n  }\n\n  validation()  {\n    this.cadastroForm = this.fb.group({\n      id: [],\n      nomeCompleto: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      dataNascimento: ['', Validators.required],\n      usuarioOcorrencias: this.fb.array([]),\n      usuarioNivel: [this.fb.group({\n        userId: [''],\n        roleId: ['']\n      }), Validators.required]\n    });\n\n    this.cadastroOcorrenciaForm = this.fb.group({\n      id: [],\n      data: ['', Validators.required],\n      descricao: ['', Validators.required],\n      observacao: ['', Validators.required]\n    });\n  }\n\n  adicionarUsuarioNivel(niveisSelecionados: any) {\n    this.niveisUsuario = [];\n    niveisSelecionados.forEach(niveis => {\n      this.niveisUsuario.push(Object.assign({ userId: this.idUsuario, roleId: niveis}));\n    });\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n  openModal(template: any) {\n    this.cadastroOcorrenciaForm.reset();\n    template.show(template);\n  }\n\n  novaOcorrencia(template: any)  {\n    this.modoSalvarOcorrencia = 'post';\n    this.openModal(template);\n  }\n\n  criaOcorrencia(ocorrencia: any): FormGroup {\n    return this.fb.group({\n      id: [ocorrencia.id],\n      data: [ocorrencia.data, Validators.required],\n      descricao: [ocorrencia.descricao, [Validators.required]],\n      observacao: [ocorrencia.observacao, Validators.required],\n    });\n  }\n\n  adicionarOcorrencia(template: any) {\n    this.usuarioOcorrencias.push(Object.assign(this.cadastroOcorrenciaForm.value, {id: 0}));\n    template.hide();\n  }\n\n  removerOcorrencia(ocorrencia: any) {\n    this.usuarioOcorrencias.splice(this.usuarioOcorrencias.indexOf(ocorrencia), 1);\n  }\n\n  salvarAlteracao() {\n    const data = this.cadastroForm.get('dataNascimento').value.toLocaleString();\n\n    this.usuario = Object.assign(this.cadastroForm.value, {id: this.usuario.id,\n      dataNascimento: this.dataService.getDataSQL(data)});\n    this.usuario.usuarioOcorrencias = [];\n    this.usuarioOcorrencias.forEach(ocorrencia => {\n      const dataOcorrencia = ocorrencia.data.toLocaleString();\n      ocorrencia = Object.assign(ocorrencia, { usuarioId: this.usuario.id, data: this.dataService.getDataSQL(dataOcorrencia)});\n      this.usuario.usuarioOcorrencias.push(ocorrencia);\n    });\n\n    this.usuario.usuarioNivel = [];\n    this.niveisUsuario.forEach(niveis => {\n      this.usuario.usuarioNivel.push(niveis);\n    });\n\n    this.usuarioService.editarUsuario(this.usuario).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarUsuario();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \".form-signin {\\r\\n    width: 100%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .form-signin .checkbox {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n  .form-signin .form-control {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  .form-signin .form-control:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n  .form-signin input[type=\\\"email\\\"] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  .form-signin input[type=\\\"password\\\"] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  }\\r\\n  .center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL3VzdWFyaW8vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7RUFDakI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsMEJBQTBCO0VBQzVCO0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy91c3VhcmlvL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1zaWduaW4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDMzMHB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gLmNoZWNrYm94IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuICB9XHJcblxyXG4gIC5jZW50ZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB9XHJcbiAgIl19 */\"","module.exports = \"<form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <img class=\\\"center\\\" src=\\\"./../../../assets/img/LogoVMS.png\\\" width=\\\"280\\\" style=\\\"float:center;\\\" height=\\\"180\\\">\\n  <h1 class=\\\"text-center h3 mb-3 font-weight-bold\\\">Log In</h1>\\n  <label style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"font-weight-normal\\\"\\n    for=\\\"username\\\">Usuário :</label>\\n  <input type=\\\"email\\\" id=\\\"username\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\" name=\\\"username\\\" required\\n    [(ngModel)]=\\\"model.username\\\">\\n\\n  <label class=\\\"font-weight-normal\\\" for=\\\"password\\\">Password :</label>\\n  <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\">\\n\\n  <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Entrar</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/Cadastros/Login/auth.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  titulo = 'Login';\n  model: any = {};\n  jwtHelper = new JwtHelperService();\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private authService: AuthService,\n              public router: Router) {\n              }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    if (token != null && !this.jwtHelper.isTokenExpired(token)) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n        .subscribe(\n          () => {\n            this.router.navigate(['/dashboard']);\n          },\n          error => {\n            this.toastr.error(`Usuário ou senha incorreto(s).`, '', {\n              positionClass: 'toast-bottom-right',\n            });\n          }\n        );\n  }\n\n}\n","module.exports = \"<h2>Usuário</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" style=\\\"margin-top: 10px;\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome Completo:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"nomeCompleto\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('nomeCompleto').errors &&\\n                                              cadastroForm.get('nomeCompleto').touched }\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('nomeCompleto').hasError('required') &&\\n                                cadastroForm.get('nomeCompleto').touched\\\" class=\\\"invalid-feedback\\\">\\n                Nome Completo é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Email:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail é obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Usuario:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"userName\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('userName').errors &&\\n                                                cadastroForm.get('userName').touched}\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('userName').hasError('required') &&\\n                                cadastroForm.get('userName').touched\\\" class=\\\"invalid-feedback\\\">\\n                Usuário é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Data de Nascimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNascimento\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'DD/MM/YYYY' }\\\" bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Nível:(*)</label>\\n              <ng-select [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarUsuarioNivel(niveisIdSelecionado)\\\" [(ngModel)]=\\\"niveisIdSelecionado\\\"\\n                formControlName=\\\"usuarioNivel\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('usuarioNivel').hasError('required') && cadastroForm.get('usuarioNivel').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div formGroupName=\\\"passwords\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-3\\\">\\n                <label>Senha:</label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.password').errors &&\\n                                                             cadastroForm.get('passwords.password').touched}\\\" />\\n                <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('minlength') &&\\n                                  cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                  Deve conter no mínimo 4 caracters\\n                </div>\\n                <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('required') &&\\n                                            cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                  Senha é obrigatório.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-3\\\">\\n                <label>Confirmar Senha:</label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.confirmPassword').errors \\n                                               && cadastroForm.get('passwords.confirmPassword').touched \\n                                               ||cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                               && cadastroForm.get('passwords.confirmPassword').touched }\\\" />\\n                <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('required') &&\\n                                            cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Confirme a senha.\\n                </div>\\n                <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                            && cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Senhas diferentes!\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </tab>\\n\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarUsuario()\\\"\\n  tooltip=\\\"Novo Usuário\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { Nivel } from 'src/app/_models/Cadastros/Usuarios/Nivel';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\n\n@Component({\n  selector: 'app-novo-usuario',\n  templateUrl: './novoUsuario.component.html'\n})\nexport class NovoUsuarioComponent implements OnInit {\n\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  usuario: Usuario;\n\n  niveis: Nivel[];\n  niveisIdSelecionado: any;\n  niveisUsuario: UsuarioNivel[];\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private usuarioService: UsuarioService,\n              public router: Router) { }\n\n  ngOnInit() {\n    this.getNiveis();\n    this.validation();\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n      nomeCompleto: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      dataNascimento: ['', Validators.required],\n      passwords: this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required]\n      }, { validator : this.compararSenhas}),\n      usuarioNivel: [this.fb.group({\n        userId: [''],\n        roleId: ['']\n      }), Validators.required],\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({mismatch: true});\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  adicionarUsuarioNivel(niveisSelecionados: any) {\n    this.niveisUsuario = [];\n    niveisSelecionados.forEach(niveis => {\n      this.niveisUsuario.push(Object.assign({ userId: 0, roleId: niveis}));\n    });\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n  cadastrarUsuario() {\n    if (this.cadastroForm.valid) {\n      this.usuario = Object.assign(this.cadastroForm.value,\n         {password: this.cadastroForm.get('passwords.password').value, usuarioNivel: null});\n      this.usuarioService.novoUsuario(this.usuario).subscribe(\n        () => {\n          this.usuarioService.getIdUltimoUsuario().subscribe(\n            (_USUARIO: Usuario) => {\n              const IdUltimoUsuario = _USUARIO.id;\n              this.usuario = Object.assign(this.cadastroForm.value, {id: IdUltimoUsuario});\n\n              this.usuario.usuarioNivel = [];\n              this.niveisUsuario.forEach(niveis => {\n                this.usuario.usuarioNivel.push(Object.assign({ userId: IdUltimoUsuario , roleId: niveis.roleId}));\n              });\n\n              this.usuarioService.editarUsuario(this.usuario).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/usuarios/editar/${IdUltimoUsuario}`]);\n              });\n          });\n        }, error => {\n          const erro = error.error;\n          console.log(erro);\n          erro.forEach(element => {\n            switch (element.code) {\n            case 'DuplicateUserName':\n              this.toastr.error('Usuario já existente.');\n              break;\n            default:\n              this.toastr.error(`Erro no Cadastro! CODE: ${element.code}`);\n              break;\n            }\n          });\n        }\n      );\n    }\n  }\n}\n","module.exports = \"<h2>Usuários</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-4\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pesquisar...\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n        <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n            <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/usuarios','novo']\\\"\\n              tooltip=\\\"Novo Usuario\\\" class=\\\"btn btn-success\\\"> \\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Usuário\\n            </a>\\n          </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Usuário {{this.novo}}</th>\\n          <th>Nome</th>\\n          <th>E-mail</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"usuarios && usuarios.length\\\">\\n        <tr *ngFor=\\\"let usuario of usuariosFiltrados | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ usuario.id }}</td>\\n          <td>{{ usuario.userName }}</td>\\n          <td>{{ usuario.nomeCompleto }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ usuario.email }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                tooltip=\\\"Excluir\\\" (click)=\\\"excluirUsuario(usuario, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar || this.usuarioId == usuario.id\\\"\\n                [routerLink]=\\\"['/usuarios','editar', usuario.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!usuarios\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum usuario encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Colaborador\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirUsuario}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmeDelete(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Usuario } from '../../_models/Cadastros/Usuarios/Usuario';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UsuarioService } from '../../_services/Cadastros/Usuarios/usuario.service';\nimport { BsModalService, BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from '../../_services/Permissoes/permissao.service';\nimport { Permissao } from '../../_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html'\n})\nexport class UsuarioComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n\n  usuariosFiltrados: Usuario[];\n  usuarios: Usuario[];\n  usuario: Usuario;\n  usuarioId: number;\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirUsuario = '';\n\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n  filtroUsuarios: any;\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  constructor(\n    private usuarioService: UsuarioService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    private permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n    ngOnInit() {\n      this.getUsuarios();\n    }\n\n    ngAfterViewInit() {\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n        this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n        this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n        this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.usuarioId = this.permissaoService.getUsuarioId();\n    }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.usuariosFiltrados = this.filtrarUsuarios(this.filtroLista);\n  }\n\n  excluirUsuario(usuario: Usuario, template: any) {\n    template.show();\n    this.usuario = usuario;\n    this.bodyExcluirUsuario = `Tem certeza que deseja excluir o Usuario: ${usuario.userName}, Código: ${usuario.id}?`;\n  }\n\n  confirmeDelete(template: any) {\n    this.usuarioService.deletarUsuario(this.usuario.id).subscribe(\n    () => {\n        template.hide();\n        this.getUsuarios();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  filtrarUsuarios(filtrarPor: string): Usuario[] {\n    this.filtroUsuarios = this.usuarios;\n\n    if (filtrarPor) {\n      filtrarPor = filtrarPor.toLocaleLowerCase();\n      this.filtroUsuarios = this.usuarios.filter(\n        usuario => usuario.userName.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n      );\n    }\n\n    this.totalRegistros = this.filtroUsuarios.length;\n    return this.filtroUsuarios;\n  }\n\n  getUsuarios() {\n      this.usuarioService.getAllUsuario().subscribe(\n        // tslint:disable-next-line:variable-name\n        (_usuarios: Usuario[]) => {\n        this.usuarios = _usuarios;\n        this.usuariosFiltrados = this.filtrarUsuarios(this.filtroLista);\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar usuarios: ${error}`);\n      });\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-7\\\">\\r\\n    <div class=\\\"box box-default\\\">\\r\\n      <div class=\\\"box-header with-border\\\">\\r\\n        <i class=\\\"fa fa-bullhorn\\\"></i>\\r\\n\\r\\n        <h3 class=\\\"box-title\\\">Alerts</h3>\\r\\n      </div>\\r\\n      <!-- /.box-header -->\\r\\n      <div class=\\\"box-body\\\">\\r\\n\\r\\n        <ul class=\\\"timeline\\\">\\r\\n          <li class=\\\"time-label\\\">\\r\\n            <span class=\\\"bg-green\\\">\\r\\n              13/06/2019\\r\\n            </span>\\r\\n          </li>\\r\\n          <!-- /.timeline-label -->\\r\\n          <!-- timeline item -->\\r\\n          <li>\\r\\n            <i class=\\\"fa fa-hand-peace-o bg-purple\\\"></i>\\r\\n\\r\\n            <div class=\\\"timeline-item\\\">\\r\\n\\r\\n              <h3 class=\\\"timeline-header\\\"><a href=\\\"#\\\">Novo</a> sistema!</h3>\\r\\n\\r\\n              <div class=\\\"timeline-body\\\">\\r\\n                <img src=\\\"./../../assets/img/dashBoardInicial.png\\\" style=\\\"width: 100%;\\\" alt=\\\"...\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <!-- /.box-body -->\\r\\n    </div>\\r\\n    <!-- /.box -->\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../_services/WebSocket/Socket.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n\n  ioConnection: any;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 80%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n.modal-sm {\\r\\n    width: 25%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aW1lbnRvcy92ZW5kYS9lZGl0YXJWZW5kYS9lZGl0YXJWZW5kYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9tb3ZpbWVudG9zL3ZlbmRhL2VkaXRhclZlbmRhL2VkaXRhclZlbmRhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwteGwge1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIC8qIE5ldyB3aWR0aCBmb3IgbGFyZ2UgbW9kYWwgKi9cclxufVxyXG5cclxuLm1vZGFsLXNtIHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn0iXX0= */\"","module.exports = \"<h2>Venda (Custo do Produto de Revenda)</h2>\\n<h5 >Cliente: {{getNomeCliente()}}</h5>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"box box-info\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-share\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Entradas</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n\\n                  <table class=\\\"table table-responsive table-bordered\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Descrição</th>\\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensEntrada\\\">\\n                        <td>{{item.descricao}}</td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\"(click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\" (click)=\\\"abrirFormValorRealizado(item.id, item.tipoItem, item.subTipoItem, item.descricao, templateValorRealizado)\\\"\\n                              tooltip=\\\"Valores Realizado\\\" class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\" class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n              <div class=\\\"form-group col-md-2\\\">\\n                <label>Data Negociação: </label>\\n                <input *ngIf=\\\"disabledDataNegociacao() == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNegociacao\\\"\\n                  [ngModel]=\\\"cadastroForm.get('dataNegociacao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\" disabled/>\\n\\n                <input *ngIf=\\\"disabledDataNegociacao() == false\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNegociacao\\\"\\n                  [ngModel]=\\\"cadastroForm.get('dataNegociacao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"/>\\n              </div>\\n\\n              <div *ngIf=\\\"showedDataFinalizado() == true\\\" class=\\\"form-group col-md-2\\\">\\n                <label>Data Finalizado: </label>\\n                <input  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataFinalizado\\\"\\n                  [ngModel]=\\\"cadastroForm.get('dataFinalizado').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\" disabled/>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-2\\\">\\n                <label>Status:</label>\\n                <ng-select *ngIf=\\\"disabledStatus() == true\\\" [clearable]=\\\"false\\\" \\n                (change)=\\\"setarDataFinalizado(cadastroForm.get('status').value)\\\" \\n                [items]=\\\"status\\\" [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\">\\n                </ng-select>\\n              </div>\\n\\n          </div>\\n\\n          <hr style=\\\"width: 100%\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n\\n              <div class=\\\"box box-danger\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-reply\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Saídas(COMISSÕES)</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                  <table class=\\\"table table-responsive table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Descrição</th>\\n                        <th style=\\\"text-align: center;\\\">Status</th>\\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensSaidaComissao\\\">\\n                        <td>{{item.descricao}}</td>\\n\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"verificarPagamento(item.vendaValorRealizado) == true\\\"\\n                            class=\\\"label label-success\\\">PAGO</span>\\n                          <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"verificarPagamento(item.vendaValorRealizado) == false\\\"\\n                            class=\\\"label label-warning\\\">PENDENTE</span>\\n                        </td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\" (click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\" (click)=\\\"abrirFormValorRealizado(item.id, item.tipoItem, item.subTipoItem, item.descricao, templateValorRealizado)\\\"\\n                              tooltip=\\\"Valores Realizado\\\" class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\" class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n\\n              <div class=\\\"box box-danger\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-reply\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Saídas(GASTOS)</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                  <table class=\\\"table table-responsive table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Descrição</th>\\n                       \\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensSaidaGasto\\\">\\n                        <td>{{item.descricao}}</td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\"(click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\" (click)=\\\"abrirFormValorRealizado(item.id, item.tipoItem, item.subTipoItem, item.descricao, templateValorRealizado)\\\"\\n                              tooltip=\\\"Valores Realizado\\\" class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\" class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </tab>\\n      <tab *ngIf=\\\"this.visualizarResumo == true\\\" heading=\\\"Resumo\\\" style=\\\"margin-top: 10px;\\\">\\n        <app-resumo-venda></app-resumo-venda>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n<div bsModal #templateValorPrevisto=\\\"bs-modal\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Valor Previsto <label *ngIf=\\\"subTipoItem\\\">({{subTipoItem}}) - </label><label>({{descricaoItem}})</label>\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateValorPrevisto.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"form-group col-md-12\\\">\\n            <form [formGroup]=\\\"cadastroValorPrevistoForm\\\">\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask [(ngModel)]=\\\"valorPrevistoPipe\\\" formControlName=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateValorPrevisto.hide()\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"!cadastroValorPrevistoForm.valid || valorPrevistoDisabled == true\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarValorPrevisto(templateValorPrevisto)\\\" disabled>\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"cadastroValorPrevistoForm.valid && valorPrevistoDisabled == false\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarValorPrevisto(templateValorPrevisto)\\\">\\n          Salvar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<div bsModal #templateValorRealizado=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Valores Realizado <label *ngIf=\\\"subTipoItem\\\">({{subTipoItem}}) - </label><label>({{descricaoItem}})</label>\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplateValorRealizado(templateValorRealizado)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"this.verificarStatus() != 'FINALIZADO' && this.novoLancamento == true && this.subTipoItem != 'COMISSÃO'\\\" class=\\\"row\\\">\\n          <div style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n            <a (click)=\\\"novoValorRealizado()\\\" class=\\\"btn btn-success\\\">\\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Lançamento\\n            </a>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"this.verificarStatus() != 'FINALIZADO' && this.novoLancamento == true && this.subTipoItem == 'COMISSÃO' && valorRealizadoValores.length < 1\\\"\\n          class=\\\"row\\\">\\n          <div style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n            <a (click)=\\\"novoValorRealizado()\\\" class=\\\"btn btn-success\\\">\\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Lançamento\\n            </a>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"valorRealizadoValores && valorRealizadoValores.length > 0\\\">\\n          <div *ngFor=\\\"let valores of valorRealizadoValores\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Valor:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask [(ngModel)]=\\\"valores.valor\\\" name=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" disabled />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"this.subTipoItem != 'GASTO'\\\" class=\\\"form-group col-md-3\\\">\\n              <label *ngIf=\\\"this.tipoItem == 'SAIDA'\\\" style=\\\"white-space: nowrap;\\\">Pessoa comissionada:(*)</label>\\n              <label *ngIf=\\\"this.tipoItem == 'ENTRADA'\\\" style=\\\"white-space: nowrap;\\\">Cobrador:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"pessoas\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"valores.pessoasId\\\" name=\\\"pessoasId\\\" disabled>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label *ngIf=\\\"this.tipoItem == 'SAIDA'\\\" style=\\\"white-space: nowrap;\\\">Data do Pagamento:(*)</label>\\n              <label *ngIf=\\\"this.tipoItem == 'ENTRADA'\\\" style=\\\"white-space: nowrap;\\\">Data do Recebimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataPagamento\\\" disabled\\n                [ngModel]=\\\"dataService.getDataPTBR(valores.dataPagamento)\\\" bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Descrição:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"valores.descricao\\\" name=\\\"descricao\\\"\\n                disabled />\\n            </div>\\n          </div>\\n        </div>\\n\\n        <form [formGroup]=\\\"cadastroNovoValor\\\">\\n          <div *ngFor=\\\"let valores of valorRealizadoValoresNovo\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Valor:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask [(ngModel)]=\\\"valorRealizadoNovoPipe\\\" formControlName=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"this.subTipoItem != 'GASTO'\\\" class=\\\"form-group col-md-3\\\">\\n              <label *ngIf=\\\"this.tipoItem == 'SAIDA'\\\" style=\\\"white-space: nowrap;\\\">Pessoa comissionada:(*)</label>\\n              <label *ngIf=\\\"this.tipoItem == 'ENTRADA'\\\" style=\\\"white-space: nowrap;\\\">Cobrador:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"pessoas\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"pessoaIdNovo\\\" formControlName=\\\"pessoasId\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label *ngIf=\\\"this.tipoItem == 'SAIDA'\\\" style=\\\"white-space: nowrap;\\\">Data do Pagamento:(*)</label>\\n              <label *ngIf=\\\"this.tipoItem == 'ENTRADA'\\\" style=\\\"white-space: nowrap;\\\">Data do Recebimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataPagamento\\\" [ngModel]=\\\"dataPagamentoNovo\\\"\\n                bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Descrição:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"descricaoNovo\\\"\\n                formControlName=\\\"descricao\\\" />\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <a style=\\\"margin-top:25px;\\\" (click)=\\\"cadastrarValorRealizado()\\\" class=\\\"btn btn-success\\\">\\n                <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp;\\n              </a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplateValorRealizado(templateValorRealizado)\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport * as moment from 'moment';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { VendaValorRealizadoValores } from 'src/app/_models/Movimentos/Venda/VendaValorRealizadoValores';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-editar-venda',\n  templateUrl: './editarVenda.component.html',\n  styleUrls: ['./editarVenda.component.css']\n})\nexport class EditarVendaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  editar = false;\n  editarValorPrevisto = false;\n  editarValorRealizado = false;\n  visualizarResumo = false;\n\n  cadastroForm: FormGroup;\n  cadastroValorPrevistoForm: FormGroup;\n  cadastroValorRealizadoForm: FormGroup;\n  cadastroNovoValor: FormGroup;\n\n  pessoas: Pessoa[];\n  pessoaIdSelecionado: any;\n\n  idVenda: number;\n  venda: Venda;\n\n  vendaItensEntrada: ProdutoItem[];\n  vendaItensSaidaComissao: ProdutoItem[];\n  vendaItensSaidaGasto: ProdutoItem[];\n\n  valorPrevistoPipe: any;\n  valorPrevisto: VendaValorPrevisto;\n  valorPrevistoDisabled = true;\n  idProdutoItemValorPrevisto: number;\n\n  valorRealizado: VendaValorRealizado;\n  idValorRealizado: number;\n  idProdutoItemValorRealizado: number;\n  valorRealizadoValor: VendaValorRealizadoValores;\n  valorRealizadoValores: VendaValorRealizadoValores[] = [];\n  valorRealizadoValoresNovo = [];\n\n  novoLancamento = true;\n  valorRealizadoNovoPipe: any;\n  pessoaIdNovo: any;\n  descricaoNovo: any;\n  dataPagamentoNovo: any;\n\n  descricaoItem: string;\n  subTipoItem: string;\n  tipoItem: string;\n\n  status = ['EM ABERTO', 'FINALIZADO'];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: ActivatedRoute,\n              private vendaService: VendaService,\n              private pessoaService: PessoaService,\n              public permissaoService: PermissaoService,\n              public dataService: DataService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-dark-blue' });\n    this.idVenda = +this.router.snapshot.paramMap.get('id');\n    this.validarForm();\n    this.validarValorPrevistoForm();\n    this.validarNovoValorForm();\n    this.getPessoas();\n    this.carregarVenda();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR', 'VALOR PREVISTO').subscribe((_PERMISSAO: Permissao) => {\n      this.editarValorPrevisto = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR', 'VALOR REALIZADO').subscribe((_PERMISSAO: Permissao) => {\n      this.editarValorRealizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'VISUALIZAR', 'RESUMO').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarResumo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarVenda() {\n    this.venda = null;\n    this.vendaService.getVendaById(this.idVenda)\n      .subscribe(\n        (_VENDA: Venda) => {\n          this.venda = Object.assign({}, _VENDA);\n\n          this.venda = Object.assign(this.venda, {\n            dataNegociacao: this.dataService.getDataPTBR(this.venda.dataNegociacao),\n            dataFinalizado: this.dataService.getDataPTBR(this.venda.dataFinalizado)\n          });\n\n          this.cadastroForm.patchValue(this.venda);\n          this.vendaItensEntrada = this.venda.vendaProdutos[0].produtos.itens.filter(item => item.tipoItem === 'ENTRADA');\n          this.vendaItensEntrada.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id)[0];\n          });\n\n          this.vendaItensSaidaComissao = this.venda.vendaProdutos[0].produtos.itens.filter(\n            item => item.tipoItem === 'SAIDA' && item.subTipoItem === 'COMISSÃO');\n          this.vendaItensSaidaComissao.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id)[0];\n          });\n\n          this.vendaItensSaidaGasto = this.venda.vendaProdutos[0].produtos.itens.filter(\n            item => item.tipoItem === 'SAIDA' && item.subTipoItem === 'GASTO');\n          this.vendaItensSaidaGasto.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id)[0];\n          });\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Venda: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  disabledDataNegociacao() {\n    if (this.venda) {\n      if (this.venda.dataNegociacao.toString() !== '') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  disabledStatus() {\n    if (this.venda) {\n      if (this.venda.status === 'FINALIZADO') {\n        this.cadastroForm.get('status').disable();\n        return true;\n      } else {\n        this.cadastroForm.get('status').enable();\n        return true;\n      }\n    }\n    return true;\n  }\n\n  showedDataFinalizado() {\n    if (this.venda) {\n      if (this.venda.status === 'FINALIZADO') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setarDataFinalizado(status: string) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (status === 'FINALIZADO') {\n      this.cadastroForm.controls.dataFinalizado.setValue(dataAtual);\n    } else {\n      this.cadastroForm.controls.dataFinalizado.setValue('');\n    }\n  }\n\n  getNomeCliente() {\n    if (this.venda) {\n      if (this.venda.clientes) {\n        return this.venda.clientes.nomeFantasia;\n      }\n    }\n    return '';\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        status: ['', Validators.required],\n        dataEmissao: [''],\n        dataNegociacao: [''],\n        dataFinalizado: [''],\n        dataHoraUltAlt: ['']\n    });\n  }\n\n  validarValorPrevistoForm() {\n    this.cadastroValorPrevistoForm = this.fb.group({\n        id: [''],\n        valor: ['', Validators.required]\n    });\n  }\n\n  verificarPrevisto(vendaValorPrevisto: any): boolean {\n    if (vendaValorPrevisto) {\n      return true;\n    }\n    return false;\n  }\n\n  verificarPagamento(vendaValorRealizado: any): boolean {\n    if (vendaValorRealizado) {\n      if (vendaValorRealizado.vendaValorRealizadoValores) {\n        if (vendaValorRealizado.vendaValorRealizadoValores.length > 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  verificarStatus() {\n    if (this.cadastroForm.get('status')) {\n      return this.cadastroForm.get('status').value;\n    }\n  }\n\n  abrirFormValorPrevisto(idProdutoItem: number, descricaoItem: string, template: any) {\n    this.idProdutoItemValorPrevisto = idProdutoItem;\n    this.descricaoItem = descricaoItem;\n    this.vendaService.getVendaValorPrevistoByProdIdVendId(idProdutoItem, this.idVenda).subscribe(\n      (_VALORPREVISTO: VendaValorPrevisto) => {\n        if (_VALORPREVISTO) {\n          this.valorPrevistoDisabled = true;\n          this.valorPrevisto = Object.assign({}, _VALORPREVISTO);\n          this.cadastroValorPrevistoForm.patchValue(this.valorPrevisto);\n        } else {\n          this.valorPrevisto = null;\n          this.valorPrevistoDisabled = false;\n          this.cadastroValorPrevistoForm.patchValue({id: 0, valor: null});\n        }\n\n      }, error => {\n        console.log(error.error);\n      }\n    );\n    template.show();\n  }\n\n  salvarValorPrevisto(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.valorPrevisto = Object.assign(this.cadastroValorPrevistoForm.value,\n       {id: 0, vendaId: this.idVenda, produtosItensId: this.idProdutoItemValorPrevisto, dataHoraUltAlt: dataAtual});\n    this.vendaService.novoVendaValorPrevisto(this.valorPrevisto).subscribe(\n      () => {\n        this.carregarVenda();\n        this.toastr.success('Salvo com Sucesso!');\n        template.hide();\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  validarNovoValorForm() {\n    this.cadastroNovoValor = this.fb.group({\n        valor: ['', Validators.required],\n        pessoasId:  ['', Validators.required],\n        dataPagamento: [''],\n        descricao:  ['', Validators.required]\n    });\n  }\n\n  novoValorRealizado() {\n    this.novoLancamento = false;\n    this.valorRealizadoValoresNovo.push(Object.assign({id: 0, vendaValorRealizadoId: this.idValorRealizado}));\n    this.valorRealizadoNovoPipe = null;\n    this.descricaoNovo = null;\n    this.pessoaIdNovo = null;\n  }\n\n  fecharTemplateValorRealizado(template: any) {\n    this.valorRealizadoValor = null;\n    this.valorRealizadoValoresNovo = [];\n    template.hide();\n  }\n\n  cadastrarValorRealizado() {\n    const dataPag = this.cadastroNovoValor.get('dataPagamento').value.toLocaleString();\n\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.valorRealizadoValor = Object.assign({id: 0, pessoasId: this.pessoaIdNovo, vendaValorRealizadoId: this.idValorRealizado,\n    descricao: this.descricaoNovo, dataPagamento: this.dataService.getDataSQL(dataPag),\n     dataHoraUltAlt: dataAtual, valor: this.valorRealizadoNovoPipe});\n\n    this.vendaService.novoVendaValorRealizadoValores(this.valorRealizadoValor).subscribe(() => {\n      this.valorRealizadoValoresNovo = [];\n      this.novoLancamento = true;\n      this.carregarVenda();\n      this.carregarValores(this.idValorRealizado);\n      this.toastr.success('Lançado com Sucesso!');\n    });\n  }\n\n  abrirFormValorRealizado(idProdutoItem: number, tipoItem: string, subTipoItem: string, descricaoItem: string, template: any) {\n    this.descricaoItem = descricaoItem;\n    this.novoLancamento = true;\n    this.valorRealizadoValor = null;\n    this.valorRealizadoValoresNovo = [];\n    this.valorRealizadoValores = [];\n    this.subTipoItem = subTipoItem;\n    this.tipoItem = tipoItem;\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.idProdutoItemValorRealizado = idProdutoItem;\n    this.vendaService.getVendaValoresRealizadosByProdIdVendId(idProdutoItem, this.idVenda).subscribe(\n      (_VALORREALIZADO: VendaValorRealizado) => {\n        if (_VALORREALIZADO) {\n          this.idValorRealizado = _VALORREALIZADO.id;\n          this.valorRealizado = Object.assign({}, _VALORREALIZADO);\n          this.valorRealizadoValores = _VALORREALIZADO.vendaValorRealizadoValores;\n\n        } else {\n          this.valorRealizado = Object.assign({id: 0, vendaId: this.idVenda, produtosItensId: idProdutoItem, dataHoraUltAlt: dataAtual});\n          this.vendaService.novoVendaValorRealizado(this.valorRealizado).subscribe(() => {\n            this.vendaService.getIdUltimoValorRealizado().subscribe((_ID: VendaValorRealizado) => {\n              this.idValorRealizado = _ID.id;\n            });\n          });\n        }\n\n      }, error => {\n        console.log(error.error);\n      }\n    );\n    template.show();\n  }\n\n  carregarValores(idValorRealizado: number) {\n    this.vendaService.getValorRealizadoValores(idValorRealizado).subscribe(\n    (_VALORES: VendaValorRealizadoValores[]) => {\n      this.valorRealizadoValores = _VALORES;\n    });\n    this.vendaItensSaidaComissao.forEach(item => {\n      this.vendaService.getVendaValoresRealizadosByProdIdVendId(item.id, this.idVenda)\n      .subscribe((_VALORES: VendaValorRealizado) => {\n        if (_VALORES) {\n          item.vendaValorRealizado = _VALORES;\n        }\n      });\n    });\n  }\n\n  getPessoas() {\n    this.pessoaService.getAllPessoa().subscribe(\n      (_PESSOAS: Pessoa[]) => {\n      this.pessoas = _PESSOAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar pessoas: ${error.error}`);\n    });\n  }\n\n  salvarAlteracoes() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const dataNeg = this.cadastroForm.get('dataNegociacao').value.toLocaleString();\n\n    this.venda = Object.assign(this.cadastroForm.value, {id: this.venda.id,\n      dataNegociacao: this.dataService.getDataSQL(dataNeg),\n      dataHoraUltAlt: dataAtual\n    });\n    this.vendaService.editarVenda(this.venda).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarVenda();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvZWRpdGFyVmVuZGEvcmVzdW1vVmVuZGEvcmVzdW1vVmVuZGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-5\\\">\\n  {{somar()}}\\n  <div class=\\\"box box-info\\\">\\n    <table class=\\\"table  table-bordered\\\" style=\\\"table-layout:fixed;\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Previsto</th>\\n          <th>Realizado</th>\\n          <th>Diferença</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td style=\\\"font-size:20px;max-width:60px;\\\">Entradas</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalEntradasPrevisto | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalEntradasRealizado | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">\\n            {{calcularDiferenca(valorTotalEntradasRealizado, valorTotalEntradasPrevisto) | currency:'BRL':true}}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n  <hr style=\\\"width: 100%;\\\">\\n\\n  <div class=\\\"box box-danger\\\">\\n    <table class=\\\"table  table-bordered \\\" style=\\\"table-layout:fixed;\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Previsto</th>\\n          <th>Realizado</th>\\n          <th>Diferença</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td style=\\\"font-size:20px;\\\">Comissões</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalSaidasComissaoPrevisto | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalSaidasComissaoRealizado | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">\\n            {{calcularDiferenca(valorTotalSaidasComissaoRealizado, valorTotalSaidasComissaoPrevisto) | currency:'BRL':true}}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <hr style=\\\"width: 100%;\\\">\\n    <div class=\\\"box box-danger\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Descrição</th>\\n            <th>Previsto</th>\\n            <th>Realizado</th>\\n            <th>Diferença</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr style=\\\"vertical-align: middle;\\\">\\n            <td style=\\\"font-size:20px;\\\">Gastos</td>\\n            <td style=\\\"vertical-align: middle;\\\">{{valorTotalSaidasGastoPrevisto | currency:'BRL':true}}</td>\\n            <td style=\\\"vertical-align: middle;\\\">{{valorTotalSaidasGastoRealizado | currency:'BRL':true}}</td>\\n            <td style=\\\"vertical-align: middle;\\\">\\n              {{calcularDiferenca(valorTotalSaidasGastoRealizado, valorTotalSaidasGastoPrevisto) | currency:'BRL':true}}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"col-md-7\\\">\\n\\n  <div class=\\\"md-2\\\">\\n    <div class=\\\"box box-info\\\">\\n      <table class=\\\"table  table-bordered\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th style=\\\" font-size:40px;text-align: center;\\\">\\n              <span *ngIf=\\\"verificarMaiorZero(calcularResultado()) == true\\\"\\n                class=\\\"label label-success\\\">LUCRO\\n              </span>\\n              <span *ngIf=\\\"verificarMaiorZero(calcularResultado()) == false\\\"\\n                class=\\\"label label-danger\\\">PREJUÍZO\\n              </span>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr style=\\\"vertical-align: middle;\\\">\\n            <td style=\\\"text-align: center;font-size:30px;\\\">\\n              {{calcularResultado() | currency:'BRL':true}}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n<div class=\\\"col-md-3\\\">\\n  <div class=\\\"chart\\\" style=\\\"width: 400px;height: 200px;\\\">\\n    <canvas baseChart [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\"\\n      [options]=\\\"pieChartOptions\\\" [plugins]=\\\"pieChartPlugins\\\" [colors]=\\\"pieChartColors\\\" [legend]=\\\"pieChartLegend\\\">\\n    </canvas>\\n  </div>\\n</div>\\n<div class=\\\"col-md-4\\\">\\n  <div class=\\\"chart\\\" style=\\\"width: 350px;margin-left:55px;margin-top: 20px;height: 200px;\\\">\\n    <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\"\\n      [plugins]=\\\"barChartPlugins\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\">\\n    </canvas>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { VendaValorRealizadoValores } from 'src/app/_models/Movimentos/Venda/VendaValorRealizadoValores';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { ChartType, ChartOptions, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\n\n@Component({\n  selector: 'app-resumo-venda',\n  templateUrl: './resumoVenda.component.html',\n  styleUrls: ['./resumoVenda.component.css']\n})\nexport class ResumoVendaComponent implements OnInit, AfterViewChecked {\n\n\n  idVenda: number;\n  venda: Venda;\n\n  vendaItensEntrada: ProdutoItem[];\n  vendaItensSaidaComissao: ProdutoItem[];\n  vendaItensSaidaGasto: ProdutoItem[];\n\n\n  idValorRealizado: number;\n  realizadoEntradaValores: VendaValorRealizadoValores[] = [];\n  realizadoSaidaComissaoValores: VendaValorRealizadoValores[] = [];\n  realizadoSaidaGastoValores: VendaValorRealizadoValores[] = [];\n\n  idValorPrevisto: number;\n  previstoEntradaValores: VendaValorPrevisto[] = [];\n  previstoSaidaComissaoValores: VendaValorPrevisto[] = [];\n  previstoSaidaGastoValores: VendaValorPrevisto[] = [];\n\n  subTipoItem: string;\n  tipoItem: string;\n\n  valorTotalEntradasPrevisto = 0;\n  valorTotalEntradasRealizado = 0;\n\n  valorTotalSaidasComissaoPrevisto = 0;\n  valorTotalSaidasComissaoRealizado = 0;\n\n  valorTotalSaidasGastoPrevisto = 0;\n  valorTotalSaidasGastoRealizado = 0;\n\n  verificarSoma = false;\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n    legend: {\n      position: 'top',\n    },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = value.toFixed(2).replace('.', ',');\n          return 'R$' + label;\n        },\n      },\n    }\n  };\n  public pieChartLabels: Label[] = ['ENTRADAS', 'COMISSÕES', 'GASTOS'];\n  public pieChartData: number[] = [0, 0, 0];\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [pluginDataLabels];\n  public pieChartColors = [\n    {\n      backgroundColor: ['rgba(0,192,239,1)', 'rgba(221,75,57,0.5)', 'rgba(221,75,57,1)'],\n    },\n  ];\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{ticks: {max: 5000, min: 0, stepSize: 1000}}] },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = value.toFixed(2).replace('.', ',');\n          return 'R$' + label;\n        },\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = ['RESULTADO'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartPlugins = [pluginDataLabels];\n\n  public barChartData: ChartDataSets[] = [\n    { data: [0], label: 'Entradas', backgroundColor: 'rgba(0,192,239,1)', hoverBackgroundColor: 'rgba(0,192,239,1)'},\n    { data: [0], label: 'Saídas', backgroundColor: 'rgba(221,75,57,1)', hoverBackgroundColor: 'rgba(221,75,57,1)'}\n  ];\n\n  constructor(private toastr: ToastrService,\n              private router: ActivatedRoute,\n              private vendaService: VendaService,\n              private pessoaService: PessoaService,\n              public dataService: DataService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.idVenda = +this.router.snapshot.paramMap.get('id');\n    this.carregarVenda();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  verificarMaiorZero(valor: number) {\n    if (valor >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  somarValores(valores: any): number {\n    let valorTotal = 0;\n    if (valores) {\n        if (valores.length > 0) {\n      valores.forEach(item => {\n          valorTotal = valorTotal + item.valor;\n        });\n      }\n    }\n    return valorTotal;\n  }\n\n  calcularDiferenca(valorRealizado: number, valorPrevisto: number): number {\n    return valorPrevisto - valorRealizado;\n  }\n\n  calcularResultado(): number {\n    const valorTotalSaida = this.valorTotalSaidasComissaoRealizado + this.valorTotalSaidasGastoRealizado;\n    return this.valorTotalEntradasRealizado - valorTotalSaida;\n  }\n\n  somar(): any {\n    if (this.verificarSoma === false) {\n      this.valorTotalEntradasRealizado = this.somarValores(this.realizadoEntradaValores);\n      this.valorTotalEntradasPrevisto = this.somarValores(this.previstoEntradaValores);\n      this.valorTotalSaidasComissaoPrevisto = this.somarValores(this.previstoSaidaComissaoValores);\n      this.valorTotalSaidasComissaoRealizado = this.somarValores(this.realizadoSaidaComissaoValores);\n      this.valorTotalSaidasGastoRealizado = this.somarValores(this.realizadoSaidaGastoValores);\n      this.valorTotalSaidasGastoPrevisto = this.somarValores(this.previstoSaidaGastoValores);\n      this.pieChartData = [this.valorTotalEntradasRealizado, this.valorTotalSaidasComissaoRealizado, this.valorTotalSaidasGastoRealizado];\n      this.barChartData[0].data = [this.valorTotalEntradasRealizado];\n      this.barChartData[1].data = [this.valorTotalSaidasComissaoRealizado + this.valorTotalSaidasGastoRealizado];\n      this.verificarSoma = true;\n    }\n    return '';\n  }\n\n  carregarVenda() {\n    this.vendaService.getVendaById(this.idVenda).subscribe((_VENDA: Venda) => {\n      this.venda = Object.assign({}, _VENDA);\n\n      this.vendaItensEntrada = this.venda.vendaProdutos[0].produtos.itens.filter(item => item.tipoItem === 'ENTRADA');\n      this.vendaItensEntrada.map(itemEntrada => {\n\n        this.vendaService.getVendaValoresRealizadosByProdIdVendId(itemEntrada.id, this.idVenda)\n          .subscribe((_VALORREALIZADO: VendaValorRealizado) => {\n           if (_VALORREALIZADO) {\n             this.realizadoEntradaValores = _VALORREALIZADO.vendaValorRealizadoValores;\n             this.verificarSoma = false;\n          }\n        });\n\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemEntrada.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n          if (_VALORPREVISTO) {\n            this.previstoEntradaValores.push(_VALORPREVISTO);\n            this.verificarSoma = false;\n          }\n        });\n      });\n\n      this.vendaItensSaidaComissao = this.venda.vendaProdutos[0].produtos.itens.filter(\n        item => item.tipoItem === 'SAIDA' && item.subTipoItem === 'COMISSÃO');\n      this.vendaItensSaidaComissao.map(itemComissao => {\n\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemComissao.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n           if (_VALORPREVISTO) {\n             this.previstoSaidaComissaoValores.push(_VALORPREVISTO);\n             this.verificarSoma = false;\n            }\n        });\n\n        this.vendaService.getVendaValoresRealizadosByProdIdVendId(itemComissao.id, this.idVenda)\n          .subscribe((_VALORREALIZADO: VendaValorRealizado) => {\n            if (_VALORREALIZADO) {\n              _VALORREALIZADO.vendaValorRealizadoValores.map(_VALOR => {\n                this.realizadoSaidaComissaoValores.push(_VALOR);\n                this.verificarSoma = false;\n              });\n            }\n        });\n\n      });\n\n      this.vendaItensSaidaGasto = this.venda.vendaProdutos[0].produtos.itens.filter(\n        item => item.tipoItem === 'SAIDA' && item.subTipoItem === 'GASTO');\n      this.vendaItensSaidaGasto.map(itemGasto => {\n\n        this.vendaService.getVendaValoresRealizadosByProdIdVendId(itemGasto.id, this.idVenda)\n          .subscribe((_VALORREALIZADO: VendaValorRealizado) => {\n            if (_VALORREALIZADO) {\n              _VALORREALIZADO.vendaValorRealizadoValores.map(_VALOR => {\n                this.realizadoSaidaGastoValores.push(_VALOR);\n                this.verificarSoma = false;\n              });\n            }\n        });\n\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemGasto.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n           if (_VALORPREVISTO) {\n             this.previstoSaidaGastoValores.push(_VALORPREVISTO);\n             this.verificarSoma = false;\n          }\n        });\n\n      });\n\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Venda: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n}\n","module.exports = \"<h2>Novo Venda</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Cliente:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clientesId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Produto:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"produtos\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"produtoIdSelecionado\\\" formControlName=\\\"produtoId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n</div>\\n\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarVenda()\\\" tooltip=\\\"Novo Venda\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { VendaProduto } from 'src/app/_models/Movimentos/Venda/VendaProduto';\n@Component({\n  selector: 'app-novo-venda',\n  templateUrl: './novoVenda.component.html'\n})\nexport class NovoVendaComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  produtos: Produto[];\n  produtoIdSelecionado: any;\n\n  produtoVenda: VendaProduto[];\n  venda: Venda;\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: Router,\n              private clienteService: ClienteService,\n              private produtoService: ProdutoService,\n              private vendaService: VendaService) { }\n\n  ngOnInit() {\n    this.getClientes();\n    this.getProdutos();\n    this.validarForm();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        produtoId: ['', Validators.required]\n    });\n  }\n\n  cadastrarVenda() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroForm.valid) {\n      this.venda = Object.assign(this.cadastroForm.value, {id: 0, status: 'EM ABERTO', dataEmissao: dataAtual, dataHoraUltAlt: dataAtual});\n\n      this.vendaService.novoVenda(this.venda).subscribe(\n        () => {\n          this.vendaService.getIdUltimaVenda().subscribe(\n            (_VENDA: Venda) => {\n              const IdUltimaVenda = _VENDA.id;\n\n              this.produtoVenda = [];\n              this.produtoVenda.push(Object.assign({vendaId: IdUltimaVenda, produtosId: this.produtoIdSelecionado}));\n\n              this.vendaService.novoProdutoVenda(this.produtoVenda).subscribe(() => {\n                this.toastr.success('Cadastrado com sucesso!');\n                this.router.navigate([`/movimentos/vendas/editar/${IdUltimaVenda}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  getProdutos() {\n    this.produtoService.getAllProduto().subscribe(\n      (_PRODUTOS: Produto[]) => {\n      this.produtos = _PRODUTOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar produtos: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Venda</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  [routerLink]=\\\"['novo']\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Venda\\n        </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Cliente</th>\\n            <th>Data Emissão</th>\\n            <th style=\\\"text-align: center;\\\">Status</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"vendas && vendas.length\\\">\\n          <tr *ngFor=\\\"let venda of vendas | paginate: { itemsPerPage: 5,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td>{{ venda.id }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ venda.clientes.nomeFantasia }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ venda.dataEmissao  | date:'dd/MM/yyyy HH:mm'}}</td>\\n            <td style=\\\"text-align: center;\\\">\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"venda.status == 'EM ABERTO'\\\"  class=\\\"label label-info\\\">\\n                {{ venda.status }}\\n              </span>\\n              <span style=\\\"text-align: center;\\\"*ngIf=\\\"venda.status == 'FINALIZADO'\\\" class=\\\"label label-success\\\">\\n                {{ venda.status }}\\n              </span></td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div *ngIf=\\\"this.editar == true\\\" class=\\\"btn-group\\\">\\n                <a  [routerLink]=\\\"['/movimentos/vendas','editar', venda.id]\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!vendas\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhum produto encontrado!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { FormGroup } from '@angular/forms';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-venda',\n  templateUrl: './venda.component.html'\n})\nexport class VendaComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  vendaFiltrados: Venda[];\n  vendas: Venda[];\n  vendaId: number;\n\n  cadastroForm: FormGroup;\n\n  paginaAtual = 1;\n  totalRegistros: number;\n\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              public vendaService: VendaService) { }\n\n  ngOnInit() {\n    this.getVendas();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getVendas() {\n    this.vendaService.getAllVenda().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_VENDAS: Venda[]) => {\n      this.vendas = _VENDAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaS: ${error.error}`);\n    });\n}\n\n}\n","module.exports = \"<h2>Permissões</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <label>Formulário: </label>\\n        <ng-select [items]=\\\"formularios\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" bindValue=\\\"nome\\\"\\n          [(ngModel)]=\\\"formularioSelecionado\\\" (change)=\\\"getPermissoesFormularios()\\\" name=\\\"cidadeId\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"table\\\"> \\n      <thead>\\n        <tr>\\n          <th>Ação</th>\\n          <th>Níveis Permitidos</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"formularioSelecionado !== ''\\\" >\\n        <tr *ngFor=\\\"let permissao of permissoesFormulario\\\">\\n          \\n          <td *ngIf=\\\"permissao.objeto == null\\\">{{permissao.acao}}</td>\\n          <td *ngIf=\\\"permissao.objeto !== null\\\">{{permissao.acao}} {{permissao.objeto}} </td>\\n          <td>\\n            <ng-select style=\\\"max-height:35px;\\\" [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" \\n            [ngModel]=\\\"getNiveisPermissao(permissao.id)\\\"\\n            \\n            (change)=\\\"setNiveisPermissao(permissao.id, $event)\\\"\\n            required [multiple]=\\\"true\\\">\\n            </ng-select>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n   \\n  </div>\\n\\n</div>\\n\\n<button style=\\\"position:relative;\\\" (click)=\\\"salvarAlteracao()\\\" tooltip=\\\"Salvar\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../_services/Cadastros/Usuarios/usuario.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder } from '@angular/forms';\nimport { Nivel } from '../_models/Cadastros/Usuarios/Nivel';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\nimport { Permissao } from '../_models/Permissoes/permissao';\nimport { NiveisPermissao } from '../_models/Permissoes/niveisPermissao';\nimport { PermissaoNivel } from '../_models/Permissoes/permissaoNivel';\n\n@Component({\n  selector: 'app-permissao',\n  templateUrl: './permissao.component.html'\n})\nexport class PermissaoComponent implements OnInit {\n\n  formularios: any =\n  [\n    {\n      nome: 'USUARIOS'\n    },\n    {\n      nome: 'CLIENTES'\n    },\n    {\n      nome: 'PESSOAS'\n    },\n    {\n      nome: 'PRODUTOS'\n    },\n    {\n      nome: 'VENDA'\n    },\n    {\n      nome: 'PERMISSOES'\n    }\n  ];\n\n  niveis: Nivel[];\n\n  formularioSelecionado: any;\n  permissoesFormulario: Permissao[];\n  niveisPermissao: NiveisPermissao[] = [];\n  controllerPermissaoNivel: PermissaoNivel[] = [];\n  constructor(private usuarioService: UsuarioService,\n              private toastr: ToastrService,\n              private permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getNiveis();\n  }\n\n  getPermissoesFormularios() {\n    this.niveisPermissao = [];\n    let niveisConst;\n    this.permissaoService.getPermissoesByFormulario(this.formularioSelecionado)\n    .subscribe((_PERMISSOES: Permissao[]) => {\n      this.permissoesFormulario = _PERMISSOES;\n      _PERMISSOES.forEach(permissao => {\n        niveisConst = [];\n        permissao.permissaoNiveis.forEach(nivel => {\n          niveisConst.push(nivel.nivelId);\n        });\n        this.niveisPermissao.push(Object.assign({permissaoId: permissao.id, niveis: niveisConst}));\n      });\n    });\n  }\n\n  setNiveisPermissao(idPermissao: number, niveis: any) {\n    let niveisConst: any;\n    if (niveis) {\n      niveisConst = [];\n      niveis.forEach(nivel => {\n        niveisConst.push(nivel.id);\n      });\n      if (this.niveisPermissao.filter(c => c.permissaoId === idPermissao)[0]) {\n        this.niveisPermissao.forEach(np => {\n          if (np.permissaoId === idPermissao) {\n            if (niveisConst !== np.niveis) {\n              np.niveis = niveisConst;\n            }\n          }\n        });\n      } else {\n        this.niveisPermissao.push(Object.assign({permissaoId: idPermissao, niveis: niveisConst}));\n      }\n    }\n  }\n\n  getNiveisPermissao(idPermissao: number) {\n    if (this.niveisPermissao.filter(c => c.permissaoId === idPermissao).length > 0) {\n      return this.niveisPermissao.filter(c => c.permissaoId === idPermissao)[0].niveis;\n    } else {\n      return null;\n    }\n  }\n\n  salvarAlteracao() {\n    let verificaErro = false;\n    this.controllerPermissaoNivel = [];\n    this.niveisPermissao.forEach(np => {\n\n      if (np.niveis.length > 0) {\n        np.niveis.forEach(nivel => {\n          const obj = Object.assign({permissaoId: np.permissaoId, nivelId: nivel});\n          this.controllerPermissaoNivel.push(obj);\n        });\n\n        if (np.niveis.filter(c => c === 1).length === 0) {\n          const obj = Object.assign({permissaoId: np.permissaoId, nivelId: 1});\n          this.controllerPermissaoNivel.push(obj);\n        }\n      } else {\n        const obj = Object.assign({permissaoId: np.permissaoId, nivelId: 1});\n        this.controllerPermissaoNivel.push(obj);\n      }\n\n      this.permissaoService.editarNiveisPermissoes(this.formularioSelecionado, this.controllerPermissaoNivel)\n      .subscribe( () => {\n      }, error => {\n        verificaErro = true;\n        this.toastr.error(`Erro ao tentar alterar Permissões: ${error.error}`);\n        console.log(error.error);\n      });\n      this.controllerPermissaoNivel = [];\n    });\n    if (verificaErro === false) {\n      this.toastr.success(`Permissões alteradas com Sucesso!`);\n    }\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {telefoneFixoPattern, telefoneCelularPattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'celularPipePipe'\n})\n\nexport class CelularPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n\n    if (value.length > 13) {\n      return vanillaMasker.toPattern(value, telefoneCelularPattern);\n    }\n\n    return vanillaMasker.toPattern(value, telefoneFixoPattern);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {cepPattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'cepPipePipe'\n})\nexport class CepPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    return vanillaMasker.toPattern(value, cepPattern);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {cnpjPattern, cpfPattern} from './commons/constants';\nimport { removeNonDigitValues, validarCPF } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\nconst CPF_LENGTH = 14;\n@Pipe({\n  name: 'cnpjCpfPipePipe'\n})\n\n\nexport class CnpjCpfPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n\n    if (value.length > CPF_LENGTH) {\n      return vanillaMasker.toPattern(value, cnpjPattern);\n    }\n\n    return vanillaMasker.toPattern(value, cpfPattern);\n  }\n\n}\n","export const telefoneFixoPattern = '(99)9999-9999';\nexport const telefoneCelularPattern = '(99)99999-9999';\nexport const horaPattern = '99:99';\nexport const cpfPattern = '999.999.999-99';\nexport const cnpjPattern = '99.999.999/9999-99';\nexport const cepPattern = '99999-999';\nexport const iePattern = '999.999.999/9999';\n\nexport const cepPlaceholder = '00000-000';\nexport const cnpjPlaceholder = '00.000.000/0000-00';\nexport const cpfPlaceholder = '000.000.000-00';\nexport const pesoPlaceholder = '0,00 kg';\nexport const dinheiroPlaceholder = 'R$ 0,00';\nexport const percentualPlaceholder = '0%';\nexport const horaPlaceholder = 'HH:MM';\n\nexport const dinheiroPatternConfig = {\n  precision: 2,\n  separator: ',',\n  delimiter: '.',\n  unit: 'R$',\n  zeroCents: false,\n};\n\nexport const percentualPatternConfig = {\n  precision: 1,\n  separator: ',',\n  delimiter: ',',\n  suffixUnit: '%',\n  zeroCents: false,\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {iePattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'iePipePipe'\n})\nexport class IePipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    \n    return vanillaMasker.toPattern(value, iePattern);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}