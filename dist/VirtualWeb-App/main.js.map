{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/Cadastros/Produtos/produtoItem.ts","webpack:///./src/app/_models/Cadastros/Usuarios/Usuario.ts","webpack:///./src/app/_models/Financeiro/Pagamentos/Pagamentos.ts","webpack:///./src/app/_models/Financeiro/Recebimentos/Recebimentos.ts","webpack:///./src/app/_models/Info/infoAPI.ts","webpack:///./src/app/_services/Atendimentos/Retornos/retorno.service.ts","webpack:///./src/app/_services/Autorizacoes/autorizacao.service.ts","webpack:///./src/app/_services/Cadastros/CentroDespesa/centroDespesa.service.ts","webpack:///./src/app/_services/Cadastros/CentroReceita/centroReceita.service.ts","webpack:///./src/app/_services/Cadastros/ChequePre/chequePre.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/cliente.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/grupoCliente.service.ts","webpack:///./src/app/_services/Cadastros/Clientes/sistemaCliente.service.ts","webpack:///./src/app/_services/Cadastros/Empresas/empresa.service.ts","webpack:///./src/app/_services/Cadastros/FormaPagamento/formaPagamento.service.ts","webpack:///./src/app/_services/Cadastros/Ideias/ideia.service.ts","webpack:///./src/app/_services/Cadastros/Login/auth.service.ts","webpack:///./src/app/_services/Cadastros/Pessoas/pessoa.service.ts","webpack:///./src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service.ts","webpack:///./src/app/_services/Cadastros/PlanosConta/planoConta.service.ts","webpack:///./src/app/_services/Cadastros/Produtos/produto.service.ts","webpack:///./src/app/_services/Cadastros/Usuarios/usuario.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/cidade.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/data.service.ts","webpack:///./src/app/_services/Cadastros/Uteis/estado.service.ts","webpack:///./src/app/_services/Email/email.service.ts","webpack:///./src/app/_services/Financeiro/Pagamentos/pagamento.service.ts","webpack:///./src/app/_services/Financeiro/Recebimentos/recebimento.service.ts","webpack:///./src/app/_services/Movimentos/Lancamentos/lancamento.service.ts","webpack:///./src/app/_services/Movimentos/Venda/venda.service.ts","webpack:///./src/app/_services/Notificacoes/notificacao.service.ts","webpack:///./src/app/_services/Permissoes/permissao.service.ts","webpack:///./src/app/_services/WebSocket/Socket.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/atendimento/atendimento.component.html","webpack:///./src/app/atendimento/atendimento.component.ts","webpack:///./src/app/atendimento/retorno/editarRetorno/editarRetorno.component.html","webpack:///./src/app/atendimento/retorno/editarRetorno/editarRetorno.component.ts","webpack:///./src/app/atendimento/retorno/novoRetorno/novoRetorno.component.html","webpack:///./src/app/atendimento/retorno/novoRetorno/novoRetorno.component.ts","webpack:///./src/app/atendimento/retorno/retorno.component.html","webpack:///./src/app/atendimento/retorno/retorno.component.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/autorizacao/autorizacao.component.css","webpack:///./src/app/autorizacao/autorizacao.component.html","webpack:///./src/app/autorizacao/autorizacao.component.ts","webpack:///./src/app/autorizacao/autorizacaoTemplate/autorizacaoTemplate.component.css","webpack:///./src/app/autorizacao/autorizacaoTemplate/autorizacaoTemplate.component.html","webpack:///./src/app/autorizacao/autorizacaoTemplate/autorizacaoTemplate.component.ts","webpack:///./src/app/cadastros/centroDespesa/centroDespesa.component.html","webpack:///./src/app/cadastros/centroDespesa/centroDespesa.component.ts","webpack:///./src/app/cadastros/centroReceita/centroReceita.component.html","webpack:///./src/app/cadastros/centroReceita/centroReceita.component.ts","webpack:///./src/app/cadastros/chequePre/chequePre.component.html","webpack:///./src/app/cadastros/chequePre/chequePre.component.ts","webpack:///./src/app/cadastros/chequePre/chequePreTemplate/chequePreTemplate.component.css","webpack:///./src/app/cadastros/chequePre/chequePreTemplate/chequePreTemplate.component.html","webpack:///./src/app/cadastros/chequePre/chequePreTemplate/chequePreTemplate.component.ts","webpack:///./src/app/cadastros/cliente/cliente.component.html","webpack:///./src/app/cadastros/cliente/cliente.component.ts","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.css","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.html","webpack:///./src/app/cadastros/cliente/editarCliente/editarCliente.component.ts","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.css","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.html","webpack:///./src/app/cadastros/cliente/novoCliente/novoCliente.component.ts","webpack:///./src/app/cadastros/empresa/empresa.component.html","webpack:///./src/app/cadastros/empresa/empresa.component.ts","webpack:///./src/app/cadastros/empresa/empresaTemplate/empresaTemplate.component.css","webpack:///./src/app/cadastros/empresa/empresaTemplate/empresaTemplate.component.html","webpack:///./src/app/cadastros/empresa/empresaTemplate/empresaTemplate.component.ts","webpack:///./src/app/cadastros/formaPagamento/formaPagamento.component.html","webpack:///./src/app/cadastros/formaPagamento/formaPagamento.component.ts","webpack:///./src/app/cadastros/pessoa/editarPessoa/editarPessoa.component.html","webpack:///./src/app/cadastros/pessoa/editarPessoa/editarPessoa.component.ts","webpack:///./src/app/cadastros/pessoa/novoPessoa/novoPessoa.component.html","webpack:///./src/app/cadastros/pessoa/novoPessoa/novoPessoa.component.ts","webpack:///./src/app/cadastros/pessoa/pessoa.component.html","webpack:///./src/app/cadastros/pessoa/pessoa.component.ts","webpack:///./src/app/cadastros/planoConta/planoConta.component.html","webpack:///./src/app/cadastros/planoConta/planoConta.component.ts","webpack:///./src/app/cadastros/planoPagamento/planoPagamento.component.css","webpack:///./src/app/cadastros/planoPagamento/planoPagamento.component.html","webpack:///./src/app/cadastros/planoPagamento/planoPagamento.component.ts","webpack:///./src/app/cadastros/produto/editarProduto/editarProduto.component.html","webpack:///./src/app/cadastros/produto/editarProduto/editarProduto.component.ts","webpack:///./src/app/cadastros/produto/novoProduto/novoProduto.component.html","webpack:///./src/app/cadastros/produto/novoProduto/novoProduto.component.ts","webpack:///./src/app/cadastros/produto/produto.component.html","webpack:///./src/app/cadastros/produto/produto.component.ts","webpack:///./src/app/cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component.html","webpack:///./src/app/cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component.ts","webpack:///./src/app/cadastros/usuario/editarUsuario/editarUsuario.component.html","webpack:///./src/app/cadastros/usuario/editarUsuario/editarUsuario.component.ts","webpack:///./src/app/cadastros/usuario/login/login.component.css","webpack:///./src/app/cadastros/usuario/login/login.component.html","webpack:///./src/app/cadastros/usuario/login/login.component.ts","webpack:///./src/app/cadastros/usuario/novoUsuario/novoUsuario.component.html","webpack:///./src/app/cadastros/usuario/novoUsuario/novoUsuario.component.ts","webpack:///./src/app/cadastros/usuario/usuario.component.html","webpack:///./src/app/cadastros/usuario/usuario.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/financeiro/lancamento/lancamento.component.html","webpack:///./src/app/financeiro/lancamento/lancamento.component.ts","webpack:///./src/app/financeiro/lancamento/lancamentoTemplate/lancamentoTemplate.component.css","webpack:///./src/app/financeiro/lancamento/lancamentoTemplate/lancamentoTemplate.component.html","webpack:///./src/app/financeiro/lancamento/lancamentoTemplate/lancamentoTemplate.component.ts","webpack:///./src/app/financeiro/lancamento/relatorioLancamento/relatorioLancamento.component.css","webpack:///./src/app/financeiro/lancamento/relatorioLancamento/relatorioLancamento.component.html","webpack:///./src/app/financeiro/lancamento/relatorioLancamento/relatorioLancamento.component.ts","webpack:///./src/app/financeiro/pagamento/detalharPagamento/detalharPagamento.component.css","webpack:///./src/app/financeiro/pagamento/detalharPagamento/detalharPagamento.component.html","webpack:///./src/app/financeiro/pagamento/detalharPagamento/detalharPagamento.component.ts","webpack:///./src/app/financeiro/pagamento/pagamento.component.html","webpack:///./src/app/financeiro/pagamento/pagamento.component.ts","webpack:///./src/app/financeiro/pagamento/templatePagamento/templatePagamento.component.css","webpack:///./src/app/financeiro/pagamento/templatePagamento/templatePagamento.component.html","webpack:///./src/app/financeiro/pagamento/templatePagamento/templatePagamento.component.ts","webpack:///./src/app/financeiro/recebimento/detalharRecebimento/detalharRecebimento.component.css","webpack:///./src/app/financeiro/recebimento/detalharRecebimento/detalharRecebimento.component.html","webpack:///./src/app/financeiro/recebimento/detalharRecebimento/detalharRecebimento.component.ts","webpack:///./src/app/financeiro/recebimento/recebimento.component.html","webpack:///./src/app/financeiro/recebimento/recebimento.component.ts","webpack:///./src/app/financeiro/recebimento/templateRecebimento/templateRecebimento.component.css","webpack:///./src/app/financeiro/recebimento/templateRecebimento/templateRecebimento.component.html","webpack:///./src/app/financeiro/recebimento/templateRecebimento/templateRecebimento.component.ts","webpack:///./src/app/movimentos/venda/configVenda/configVenda.component.css","webpack:///./src/app/movimentos/venda/configVenda/configVenda.component.html","webpack:///./src/app/movimentos/venda/configVenda/configVenda.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/editarVenda.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/pagamentosVenda/pagamentosVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/pagamentosVenda/pagamentosVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/pagamentosVenda/pagamentosVenda.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/recebimentosVenda/recebimentosVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/recebimentosVenda/recebimentosVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/recebimentosVenda/recebimentosVenda.component.ts","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.css","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.html","webpack:///./src/app/movimentos/venda/editarVenda/resumoVenda/resumoVenda.component.ts","webpack:///./src/app/movimentos/venda/novoVenda/novoVenda.component.html","webpack:///./src/app/movimentos/venda/novoVenda/novoVenda.component.ts","webpack:///./src/app/movimentos/venda/relatorioVenda/relatorioVenda.component.css","webpack:///./src/app/movimentos/venda/relatorioVenda/relatorioVenda.component.html","webpack:///./src/app/movimentos/venda/relatorioVenda/relatorioVenda.component.ts","webpack:///./src/app/movimentos/venda/venda.component.html","webpack:///./src/app/movimentos/venda/venda.component.ts","webpack:///./src/app/permissao/permissao.component.html","webpack:///./src/app/permissao/permissao.component.ts","webpack:///./src/app/pipes/celular.pipe.ts","webpack:///./src/app/pipes/cep.pipe.ts","webpack:///./src/app/pipes/cnpjCpf.pipe.ts","webpack:///./src/app/pipes/commons/constants.ts","webpack:///./src/app/pipes/ie.pipe.ts","webpack:///./src/app/sidebar/sidebar.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { VendaValorRealizado } from '../../Movimentos/Venda/VendaValorRealizado';\nimport { VendaValorPrevisto } from '../../Movimentos/Venda/VendaValorPrevisto';\n\nexport class ProdutoItem {\n    id: number;\n    produtosId: number;\n    tipoItem: string;\n    subTipoItem: string;\n    descricao: string;\n    centroDespesaId: number;\n    centroReceitaId: number;\n    planoContasId: number;\n    vendaValorRealizado: VendaValorRealizado[];\n    vendaValorPrevisto: VendaValorPrevisto;\n}\n","import { UsuarioOcorrencia } from 'src/app/_models/Cadastros/Usuarios/UsuarioOcorrencia';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\nexport class Usuario {\n    id: number;\n    userName: string;\n    email: string;\n    password: string;\n    nomeCompleto: string;\n    dataNascimento: Date;\n    usuarioOcorrencias: UsuarioOcorrencia[];\n    usuarioNivel: UsuarioNivel[];\n}\n","import { PagamentoParcelas } from './PagamentoParcelas';\nimport { PlanoContas } from '../../Cadastros/PlanoContas/planoContas';\nimport { Pessoa } from '../../Cadastros/Pessoas/Pessoa';\n\nexport class Pagamentos {\n    id: number;\n    vendaId: number;\n    pessoasId: number;\n    pessoas: Pessoa;\n    dataEmissao: Date;\n    dataCompetencia: Date;\n    qtdParcelas: number;\n    valorTotal: number;\n    produtosItensId: number;\n    planoPagamentoId: number;\n    centroDespesaId: number;\n    planoContasId: number;\n    planoContas: PlanoContas;\n    parcelas: PagamentoParcelas[];\n}\n","import { RecebimentoParcelas } from './RecebimentoParcelas';\nimport { Cliente } from '../../Cadastros/Clientes/Cliente';\nimport { PlanoPagamento } from '../../Cadastros/PlanoPagamento/PlanoPagamento';\n\nexport class Recebimentos {\n    id: number;\n    vendaId: number;\n    clientesId: number;\n    clientes: Cliente;\n    dataEmissao: Date;\n    dataCompetencia: Date;\n    qtdParcelas: number;\n    valorTotal: number;\n    produtosItensId: number;\n    planoPagamentoId: number;\n    planoPagamento: PlanoPagamento;\n    centroReceitaId: number;\n    planoContasId: number;\n    parcelas: RecebimentoParcelas[];\n}\n","export const InfoAPI = {\r\n      URL: 'https://www.vmsweb.com.br:3050'\r\n     // URL: 'http://localhost:5000'\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Retorno } from './../../../_models/Atendimentos/Retornos/retorno';\nimport { RetornoLog } from './../../../_models/Atendimentos/Retornos/retornoLog';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RetornoService {\n\n  baseURL = InfoAPI.URL + '/api/atendimentos/retornos';\n  constructor(private http: HttpClient) { }\n\ngetAllRetornos(): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(this.baseURL);\n}\n\ngetRetornosNaoFinalizados(): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(`${this.baseURL}/NaoFinalizados`);\n}\n\ngetRetornosByPeriodo(datas: DataPeriodo): Observable<Retorno[]> {\n  return this.http.post<Retorno[]>(`${this.baseURL}/Periodo`, datas);\n}\n\ngetRetornoByClienteId(clienteId: number): Observable<Retorno[]> {\n  return this.http.get<Retorno[]>(`${this.baseURL}/cliente/${clienteId}`);\n}\n\ngetAllLogsByRetornoId(retornoId: number): Observable<RetornoLog[]> {\n  return this.http.get<RetornoLog[]>(`${this.baseURL}/logs/${retornoId}`);\n}\n\ngetAllObservacoesByRetornoId(retornoId: number): Observable<RetornoObservacao[]> {\n  return this.http.get<RetornoObservacao[]>(`${this.baseURL}/observacoes/${retornoId}`);\n}\n\ngetCountRetornos(): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/count`);\n}\n\ngetIdUltimoRetorno(): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/ultimoid`);\n}\n\ngetIdUsuarioUltimoLogByRetornoId(retornoId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/idUsuarioUltimoLog/${retornoId}`);\n}\n\ngetCountLogsAguardandoByRetornoId(retornoId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/logs/count/${retornoId}`);\n}\n\nnovoRetorno(retorno: Retorno) {\n  return this.http.post(`${this.baseURL}/novo`, retorno);\n}\n\nnovoLog(retornoLog: RetornoLog) {\n  return this.http.post(`${this.baseURL}/logs`, retornoLog);\n}\n\nnovaObservacao(retornoObservacao: RetornoObservacao) {\n  return this.http.post(`${this.baseURL}/novaObservacao`, retornoObservacao);\n}\n\neditarRetorno(retorno: Retorno) {\n  return this.http.put(`${this.baseURL}/editar/${retorno.id}`, retorno);\n}\n\ndeletarRetorno(id: number) {\n  return this.http.delete(`${this.baseURL}/${id}`);\n}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Observable } from 'rxjs';\nimport { Autorizacao } from 'src/app/_models/Autorizacoes/Autorizacao';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutorizacaoService {\n\n  baseURL = InfoAPI.URL + '/api/autorizacoes';\n  autorizacaoTemplate = false;\n\n  atualizaAutorizacoes = new EventEmitter<boolean>();\n\n  constructor(private http: HttpClient) { }\n\n  atualizarAutorizacoes() {\n    this.atualizaAutorizacoes.emit(true);\n  }\n\n  getAutorizacaoTemplateStatus() {\n    return this.autorizacaoTemplate;\n  }\n  setAutorizacaoTemplateStatus(val: boolean) {\n    this.autorizacaoTemplate = val;\n  }\n  getAllAutorizacoes(): Observable<Autorizacao[]> {\n    return this.http.get<Autorizacao[]>(this.baseURL);\n  }\n\n  getAutorizacaoById(id: number): Observable<Autorizacao> {\n    return this.http.get<Autorizacao>(`${this.baseURL}/${id}`);\n  }\n\n  getAutorizacaoFormularioById(id: number): Observable<Autorizacao[]> {\n    return this.http.get<Autorizacao[]>(`${this.baseURL}/formulario/${id}`);\n  }\n\n  novaAutorizacao(autorizacao: Autorizacao) {\n    return this.http.post(`${this.baseURL}/novo`, autorizacao);\n  }\n\n  editarAutorizacao(autorizacao: Autorizacao) {\n    return this.http.put(`${this.baseURL}/editar/${autorizacao.id}`, autorizacao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CentroDespesaService {\n\n  baseURL = InfoAPI.URL + '/api/centrodespesa';\n  constructor(private http: HttpClient) { }\n\n  getAllCentroDespesa(): Observable<CentroDespesa[]> {\n    return this.http.get<CentroDespesa[]>(this.baseURL);\n  }\n\n  getCentroDespesaById(id: number): Observable<CentroDespesa> {\n    return this.http.get<CentroDespesa>(`${this.baseURL}/${id}`);\n  }\n  novoCentroDespesa(centroDespesa: CentroDespesa) {\n    return this.http.post(`${this.baseURL}/novo`, centroDespesa);\n  }\n\n  editarCentroDespesa(centroDespesa: CentroDespesa) {\n    return this.http.put(`${this.baseURL}/editar/${centroDespesa.id}`, centroDespesa);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { CentroReceita } from 'src/app/_models/Cadastros/CentroReceita/CentroReceita';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CentroReceitaService {\n\n  baseURL = InfoAPI.URL + '/api/centroreceita';\n  constructor(private http: HttpClient) { }\n\n  getAllCentroReceita(): Observable<CentroReceita[]> {\n    return this.http.get<CentroReceita[]>(this.baseURL);\n  }\n\n  getCentroReceitaById(id: number): Observable<CentroReceita> {\n    return this.http.get<CentroReceita>(`${this.baseURL}/${id}`);\n  }\n  novoCentroReceita(centroReceita: CentroReceita) {\n    return this.http.post(`${this.baseURL}/novo`, centroReceita);\n  }\n\n  editarCentroReceita(centroReceita: CentroReceita) {\n    return this.http.put(`${this.baseURL}/editar/${centroReceita.id}`, centroReceita);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { ChequePre } from 'src/app/_models/Cadastros/ChequePre/ChequePre';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChequePreService {\n\n  baseURL = InfoAPI.URL + '/api/chequepre';\n  chequePreTemplate = false;\n  constructor(private http: HttpClient) { }\n\n  getChequePreTemplateStatus() {\n    return this.chequePreTemplate;\n  }\n  setChequePreTemplateStatus(val: boolean) {\n    this.chequePreTemplate = val;\n  }\n\n  getAllChequePre(): Observable<ChequePre[]> {\n    return this.http.get<ChequePre[]>(this.baseURL);\n  }\n\n  getChequePreById(id: number): Observable<ChequePre> {\n    return this.http.get<ChequePre>(`${this.baseURL}/${id}`);\n  }\n  novoChequePre(chequepre: ChequePre) {\n    return this.http.post(`${this.baseURL}/novo`, chequepre);\n  }\n\n  editarChequePre(chequepre: ChequePre) {\n    return this.http.put(`${this.baseURL}/editar/${chequepre.id}`, chequepre);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cliente } from './../../../_models/Cadastros/Clientes/Cliente';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  baseURL = InfoAPI.URL + '/api/clientes';\nconstructor(private http: HttpClient) { }\n\ngetAllCliente(): Observable<Cliente[]> {\n  return this.http.get<Cliente[]>(this.baseURL);\n}\n\ngetClienteByName(name: string): Observable<Cliente[]> {\n  return this.http.get<Cliente[]>(`${this.baseURL}/getByName/${name}`);\n}\ngetClienteById(id: number): Observable<Cliente> {\n  return this.http.get<Cliente>(`${this.baseURL}/${id}`);\n}\n\ngetIdUltimoCliente(): Observable<Cliente> {\n  return this.http.get<Cliente>(`${this.baseURL}/idultimocliente`);\n}\n\nnovoCliente(cliente: Cliente) {\n  return this.http.post(`${this.baseURL}/novo`, cliente);\n}\n\neditarCliente(cliente: Cliente) {\n  return this.http.put(`${this.baseURL}/editar/${cliente.id}`, cliente);\n}\n\nexcluirCliente(id: number) {\n  return this.http.delete(`${this.baseURL}/excluir/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClienteGrupos } from './../../../_models/Cadastros/Clientes/ClienteGrupos';\nimport { Cliente } from './../../../_models/Cadastros/Clientes/Cliente';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupoClienteService {\n\n  baseURL = InfoAPI.URL + '/api/grupocliente';\nconstructor(private http: HttpClient) { }\n  getAllGrupos(): Observable<ClienteGrupos[]> {\n    return this.http.get<ClienteGrupos[]>(`${this.baseURL}/grupos`);\n  }\n\n  getClientesByGrupoId(GrupoId: number): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(`${this.baseURL}/clientes/grupo/${GrupoId}`);\n  }\n\n  novoGrupo(grupo: ClienteGrupos) {\n    return this.http.post(`${this.baseURL}/novo`, grupo);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Geracao } from '../../../_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from '../../../_models/Cadastros/Sistemas/Versao';\nimport { ClienteVersoes } from '../../../_models/Cadastros/Clientes/ClienteVersoes';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SistemaClienteService {\n  baseURL = InfoAPI.URL + '/api/sistemacliente';\n  constructor(private http: HttpClient) { }\n\n  getAllSistema(): Observable<Sistema[]> {\n    return this.http.get<Sistema[]>(`${this.baseURL}/sistemas`);\n  }\n\n  getAllGeracao(SistemasId: number): Observable<Geracao[]> {\n    return this.http.get<Geracao[]>(`${this.baseURL}/geracoes/${SistemasId}`);\n  }\n\n  getAllClienteVersoes(ClienteId: number): Observable<ClienteVersoes[]> {\n    return this.http.get<ClienteVersoes[]>(`${this.baseURL}/cliente/versoes/${ClienteId}`);\n  }\n\n  getAllGeracaoVersoes(GeracaoId: number): Observable<Versao[]> {\n    return this.http.get<Versao[]>(`${this.baseURL}/geracao/versoes/${GeracaoId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Empresa } from 'src/app/_models/Cadastros/Empresas/Empresa';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  baseURL = InfoAPI.URL + '/api/empresas';\n  empresaTemplate = false;\n  constructor(private http: HttpClient) { }\n\n  getEmpresaTemplateStatus() {\n    return this.empresaTemplate;\n  }\n  setEmpresaTemplateStatus(val: boolean) {\n    this.empresaTemplate = val;\n  }\n  getAllEmpresa(): Observable<Empresa[]> {\n    return this.http.get<Empresa[]>(this.baseURL);\n  }\n\n  getEmpresaByName(name: string): Observable<Empresa[]> {\n    return this.http.get<Empresa[]>(`${this.baseURL}/getByName/${name}`);\n  }\n  getEmpresaById(id: number): Observable<Empresa> {\n    return this.http.get<Empresa>(`${this.baseURL}/${id}`);\n  }\n\n  getIdUltimaEmpresa(): Observable<Empresa> {\n    return this.http.get<Empresa>(`${this.baseURL}/idultimaempresa`);\n  }\n\n  novaEmpresa(empresa: Empresa) {\n    return this.http.post(`${this.baseURL}/novo`, empresa);\n  }\n\n  editarEmpresa(empresa: Empresa) {\n    return this.http.put(`${this.baseURL}/editar/${empresa.id}`, empresa);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormaPagamentoService {\n\n  baseURL = InfoAPI.URL + '/api/formapagamento';\n  constructor(private http: HttpClient) { }\n\n  getAllFormaPagamento(): Observable<FormaPagamento[]> {\n    return this.http.get<FormaPagamento[]>(this.baseURL);\n  }\n\n  getFormaPagamentoById(id: number): Observable<FormaPagamento> {\n    return this.http.get<FormaPagamento>(`${this.baseURL}/${id}`);\n  }\n  novoFormaPagamento(formaPagamento: FormaPagamento) {\n    return this.http.post(`${this.baseURL}/novo`, formaPagamento);\n  }\n\n  editarFormaPagamento(formaPagamento: FormaPagamento) {\n    return this.http.put(`${this.baseURL}/editar/${formaPagamento.id}`, formaPagamento);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Observable } from 'rxjs';\nimport { Ideia } from 'src/app/_models/Cadastros/Ideias/ideia';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdeiaService {\n\n  baseURL = InfoAPI.URL + '/api/ideias';\n\n  constructor(private http: HttpClient) {}\n\ngetAllIdeias(): Observable<Ideia[]> {\n  return this.http.get<Ideia[]>(`${this.baseURL}`);\n}\n\ngetIdeiasByUsuarioId(usuarioId: number): Observable<Ideia[]> {\n  return this.http.get<Ideia[]>(`${this.baseURL}/${usuarioId}`);\n}\n\nnovaIdeia(ideia: Ideia) {\n  return this.http.post(`${this.baseURL}/novo`, ideia);\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseURL = InfoAPI.URL + '/api/usuarios/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient,\n              private router: Router) { }\n\n  login(model: any) {\n    return this.http.post(`${this.baseURL}login`, model).pipe(\n        map((response: any) => {\n          const usuario = response;\n          if (usuario) {\n            localStorage.setItem('token', usuario.token);\n\n            this.decodedToken = this.jwtHelper.decodeToken(usuario.token);\n          }\n        })\n      );\n  }\n\n  loggerIn() {\n    const token = localStorage.getItem('token');\n    if (token !== null && !this.jwtHelper.isTokenExpired(token)) {\n      return true;\n    } else {\n      if (this.router.url !== '/usuarios/login') {\n        this.router.navigate(['/usuarios/login']);\n      }\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Observable } from 'rxjs';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PessoaService {\n  baseURL = InfoAPI.URL + '/api/pessoas';\n  constructor(private http: HttpClient) { }\n\n  getAllPessoa(): Observable<Pessoa[]> {\n    return this.http.get<Pessoa[]>(this.baseURL);\n  }\n\n  getAllTiposPessoa(): Observable<TiposPessoa[]> {\n    return this.http.get<TiposPessoa[]>(`${this.baseURL}/tipos`);\n  }\n\n  getPessoaByNome(nome: string): Observable<Pessoa[]> {\n    return this.http.get<Pessoa[]>(`${this.baseURL}/getByNome/${nome}`);\n  }\n  getPessoaById(id: number): Observable<Pessoa> {\n    return this.http.get<Pessoa>(`${this.baseURL}/${id}`);\n  }\n\n  getIdUltimaPessoa(): Observable<Pessoa> {\n    return this.http.get<Pessoa>(`${this.baseURL}/idUltimaPessoa`);\n  }\n\n  novoPessoa(pessoa: Pessoa) {\n    return this.http.post(`${this.baseURL}/novo`, pessoa);\n  }\n\n  editarPessoa(pessoa: Pessoa) {\n    return this.http.put(`${this.baseURL}/editar/${pessoa.id}`, pessoa);\n  }\n\n  excluirPessoa(id: number) {\n    return this.http.delete(`${this.baseURL}/excluir/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoPagamentoService {\n\nbaseURL = InfoAPI.URL + '/api/planopagamento';\nconstructor(private http: HttpClient) { }\n\ngetAllPlanoPagamento(): Observable<PlanoPagamento[]> {\n  return this.http.get<PlanoPagamento[]>(this.baseURL);\n}\n\ngetPlanoPagamentoById(id: number): Observable<PlanoPagamento> {\n  return this.http.get<PlanoPagamento>(`${this.baseURL}/${id}`);\n}\nnovoPlanoPagamento(planoPagamento: PlanoPagamento) {\n  return this.http.post(`${this.baseURL}/novo`, planoPagamento);\n}\n\neditarPlanoPagamento(planoPagamento: PlanoPagamento) {\n  return this.http.put(`${this.baseURL}/editar/${planoPagamento.id}`, planoPagamento);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoContaService {\n\n  baseURL = InfoAPI.URL + '/api/planoconta';\n  constructor(private http: HttpClient) { }\n\n  getAllPlanosConta(): Observable<PlanoContas[]> {\n    return this.http.get<PlanoContas[]>(this.baseURL);\n  }\n\n  getPlanoContasById(id: number): Observable<PlanoContas> {\n    return this.http.get<PlanoContas>(`${this.baseURL}/${id}`);\n  }\n\n  getPlanoContasFilhosById(id: number): Observable<PlanoContas> {\n    return this.http.get<PlanoContas>(`${this.baseURL}/${id}/filhos`);\n  }\n\n  novoPlanoConta(planoConta: PlanoContas) {\n    return this.http.post(`${this.baseURL}/novo`, planoConta);\n  }\n\n  editarPlanoConta(planoConta: PlanoContas) {\n    return this.http.put(`${this.baseURL}/editar/${planoConta.id}`, planoConta);\n  }\n\n  editarPlanoContaFilhos(superiorId, planoConta: PlanoContas[]) {\n    return this.http.put(`${this.baseURL}/editar/${superiorId}/filhos`, planoConta);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  baseURL = InfoAPI.URL + '/api/produtos';\n  retornoPermissao = false;\nconstructor(private http: HttpClient) { }\n\ngetAllProduto(): Observable<Produto[]> {\n  return this.http.get<Produto[]>(this.baseURL);\n}\n\ngetProdutoByDescricao(descricao: string): Observable<Produto[]> {\n  return this.http.get<Produto[]>(`${this.baseURL}/getByDescricao/${descricao}`);\n}\n\ngetProdutoById(id: number): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/${id}`);\n}\n\ngetVendaProdutoById(id: number): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/vendas/${id}`);\n}\n\ngetIdUltimoProduto(): Observable<Produto> {\n  return this.http.get<Produto>(`${this.baseURL}/idUltimoProduto`);\n}\n\nnovoProduto(produto: Produto) {\n  return this.http.post(`${this.baseURL}/novo`, produto);\n}\n\nnovoItem(Item: ProdutoItem[]) {\n  return this.http.post(`${this.baseURL}/item/novo`, Item);\n}\n\neditarItem(Item: ProdutoItem[], id: number) {\n  return this.http.put(`${this.baseURL}/item/editar/${id}`, Item);\n}\n\neditarProduto(produto: Produto) {\n  return this.http.put(`${this.baseURL}/editar/${produto.id}`, produto);\n}\n\nexcluirProduto(id: number) {\n  return this.http.delete(`${this.baseURL}/excluir/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Usuario } from '../../../_models/Cadastros/Usuarios/Usuario';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Nivel } from '../../../_models/Cadastros/Usuarios/Nivel';\nimport { InfoAPI } from '../../../_models/Info/infoAPI';\nimport { UsuarioSenha } from 'src/app/_models/Cadastros/Usuarios/UsuarioSenha';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  baseURL = InfoAPI.URL + '/api/usuarios';\n  retornoPermissao = false;\nconstructor(private http: HttpClient) { }\n\ngetAllUsuario(): Observable<Usuario[]> {\n  return this.http.get<Usuario[]>(this.baseURL);\n}\n\ngetUsuarioByName(name: string): Observable<Usuario[]> {\n  return this.http.get<Usuario[]>(`${this.baseURL}/getByName/${name}`);\n}\ngetUsuarioById(id: number): Observable<Usuario> {\n  return this.http.get<Usuario>(`${this.baseURL}/${id}`);\n}\n\ngetAllNiveis(): Observable<Nivel[]> {\n  return this.http.get<Nivel[]>(`${this.baseURL}/niveis`);\n}\n\ngetIdUltimoUsuario(): Observable<Usuario> {\n  return this.http.get<Usuario>(`${this.baseURL}/idultimousuario`);\n}\n\n\nnovoUsuario(usuario: Usuario) {\n  return this.http.post(`${this.baseURL}/novo`, usuario);\n}\n\neditarUsuario(usuario: Usuario) {\n  return this.http.put(`${this.baseURL}/editar/${usuario.id}`, usuario);\n}\n\neditarSenhaUsuario(usuarioId: number, senhas: UsuarioSenha) {\n  return this.http.put(`${this.baseURL}/editarSenha/${usuarioId}`, senhas);\n}\n\ndeletarUsuario(id: number) {\n  return this.http.delete(`${this.baseURL}/${id}`);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cidade } from './../../../_models/Cadastros/Uteis/Cidade';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CidadeService {\n  baseURL = InfoAPI.URL + '/api/cidades';\nconstructor(private http: HttpClient) { }\n\ngetAllCidades(): Observable<Cidade[]> {\n  return this.http.get<Cidade[]>(this.baseURL);\n}\n\ngetCidadeByEstadoId(EstadoId: number): Observable<Cidade[]> {\n  return this.http.get<Cidade[]>(`${this.baseURL}/${EstadoId}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  novaData: any;\nconstructor() { }\n\n  getDataPTBR(data: any) {\n    if (data && data !== null && data.toString().length > 0) {\n      if (data.includes('T')) {\n        this.novaData = data.split('T')[0].split('-');\n      } else {\n        this.novaData = data.split('-');\n      }\n      const dia = this.novaData[2];\n      const mes = this.novaData[1];\n      const ano = this.novaData[0];\n      return dia + '/' + mes + '/' + ano;\n    } else {\n      return '';\n    }\n  }\n\n  getDataSQL(data: any) {\n    if (data && data !== null && data.toString().length > 0) {\n      if (data.includes(' ')) {\n        this.novaData = data.split(' ')[0].split('/');\n      } else {\n        this.novaData = data.split('/');\n      }\n      const dia = this.novaData[0];\n      const mes = this.novaData[1];\n      const ano = this.novaData[2];\n      return ano + '-' + mes + '-' + dia;\n    } else {\n      return null;\n    }\n  }\n\n  calculaDiferencaDataHora(dataInicial: any) {\n    const dataHoraAtual  = moment(new Date(), 'DD/MM/YYYY HH:mm:ss');\n\n    const ms = moment(dataHoraAtual, 'DD/MM/YYYY HH:mm:ss').diff(moment(dataInicial, 'DD/MM/YYYY HH:mm:ss'));\n    const d = moment.duration(ms);\n\n    if (d.asHours() > 23) {\n      return Number(d.asHours() / 24).toFixed(0) + ' dia(s)';\n    } else {\n      return Math.floor(d.asHours()) + moment.utc(ms).format(':mm:ss');\n    }\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Estado } from './../../../_models/Cadastros/Uteis/Estado';\nimport { InfoAPI } from './../../../_models/Info/infoAPI';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstadoService {\n  baseURL = InfoAPI.URL + '/api/estados';\nconstructor(private http: HttpClient) { }\n\ngetAllEstados(): Observable<Estado[]> {\n  return this.http.get<Estado[]>(this.baseURL);\n}\n\ngetEstadoById(EstadoId: number): Observable<Estado> {\n  return this.http.get<Estado>(`${this.baseURL}/${EstadoId}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport * as emailjs from 'emailjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\nserver: any;\n\nconstructor() {\n  this.server = emailjs.server.connect({\n      user:    'xandinhoavilatp.67@gmail.com',\n      password: 'Xandinho1379258//',\n      host:    'smtp.gmail.com',\n      ssl:     true\n  });\n }\n\nenviarEmail() {\nconst options = {\n  from : 'xandinhoavilatp.67@gmail.com',\n  to : 'alexandre_avila@virtualloja.com.br',\n  subject : 'Hello',\n  text: 'Testando'\n};\n\nthis.server.send( options, (error, info) => {\n  if (error) {\n    return console.log(`error: ${error}`);\n  }\n  console.log(`E-mail enviado com sucesso. | ${info.response}`);\n});\n}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Pagamentos } from 'src/app/_models/Financeiro/Pagamentos/Pagamentos';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { PagamentoParcelas } from 'src/app/_models/Financeiro/Pagamentos/PagamentoParcelas';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagamentoService {\n\n  baseURL = InfoAPI.URL + '/api/pagamentos';\n  detalharPagamento = false;\n  templatePagamento = false;\n\n  constructor(private http: HttpClient) { }\n\n  getDetalharPagamentoStatus() {\n    return this.detalharPagamento;\n  }\n  setDetalharPagamentoStatus(val: boolean) {\n    this.detalharPagamento = val;\n  }\n\n  getTemplatePagamentoStatus() {\n    return this.templatePagamento;\n  }\n  setTemplatePagamentoStatus(val: boolean) {\n    this.templatePagamento = val;\n  }\n\n  getAllPagamentos(): Observable<Pagamentos[]> {\n    return this.http.get<Pagamentos[]>(this.baseURL);\n  }\n  getPagamentosById(id: number): Observable<Pagamentos> {\n    return this.http.get<Pagamentos>(`${this.baseURL}/${id}`);\n  }\n  novoPagamento(pagamento: Pagamentos) {\n    return this.http.post(`${this.baseURL}/novo`, pagamento);\n  }\n  editarPagamento(pagamento: Pagamentos) {\n    return this.http.put(`${this.baseURL}/editar/${pagamento.id}`, pagamento);\n  }\n  novoPagamentoParcelas(pagamentoParcelas: PagamentoParcelas[]) {\n    return this.http.post(`${this.baseURL}/parcelas/novo`, pagamentoParcelas);\n  }\n\n  editarPagamentoParcelas(pagamentoParcelas: PagamentoParcelas[]) {\n    return this.http.put(`${this.baseURL}/parcelas/editar/`, pagamentoParcelas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Recebimentos } from 'src/app/_models/Financeiro/Recebimentos/Recebimentos';\nimport { Observable } from 'rxjs';\nimport { RecebimentoParcelas } from 'src/app/_models/Financeiro/Recebimentos/RecebimentoParcelas';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecebimentoService {\n\n  baseURL = InfoAPI.URL + '/api/recebimentos';\n  detalharRecebimento = false;\n  templateRecebimento = false;\n  constructor(private http: HttpClient) { }\n\n  getDetalharRecebimentoStatus() {\n    return this.detalharRecebimento;\n  }\n  setDetalharRecebimentoStatus(val: boolean) {\n    this.detalharRecebimento = val;\n  }\n\n  getTemplateRecebimentoStatus() {\n    return this.templateRecebimento;\n  }\n  setTemplateRecebimentoStatus(val: boolean) {\n    this.templateRecebimento = val;\n  }\n\n  getAllRecebimentos(): Observable<Recebimentos[]> {\n    return this.http.get<Recebimentos[]>(this.baseURL);\n  }\n  getRecebimentosById(id: number): Observable<Recebimentos> {\n    return this.http.get<Recebimentos>(`${this.baseURL}/${id}`);\n  }\n  novoRecebimentos(recebimentos: Recebimentos) {\n    return this.http.post(`${this.baseURL}/novo`, recebimentos);\n  }\n  novoRecebimentoParcelas(recebimentoParcelas: RecebimentoParcelas[]) {\n    return this.http.post(`${this.baseURL}/parcelas/novo`, recebimentoParcelas);\n  }\n  editarRecebimentos(recebimentos: Recebimentos) {\n    return this.http.put(`${this.baseURL}/editar/${recebimentos.id}`, recebimentos);\n  }\n\n  editarRecebimentoParcelas(recebimentoParcelas: RecebimentoParcelas[]) {\n    return this.http.put(`${this.baseURL}/parcelas/editar/`, recebimentoParcelas);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LancamentoService {\n  baseURL = InfoAPI.URL + '/api/movimentos/lancamentos';\n  lancamentoTemplate = false;\n  constructor(private http: HttpClient) { }\n\n  getLancamentoTemplateStatus() {\n    return this.lancamentoTemplate;\n  }\n  setLancamentoTemplateStatus(val: boolean) {\n    this.lancamentoTemplate = val;\n  }\n\n  getAllLancamentos(): Observable<Lancamentos[]> {\n    return this.http.get<Lancamentos[]>(this.baseURL);\n  }\n\n  getLancamentoById(id: number): Observable<Lancamentos> {\n    return this.http.get<Lancamentos>(`${this.baseURL}/${id}`);\n  }\n\n  getIdUltimoLancamento(): Observable<Lancamentos> {\n    return this.http.get<Lancamentos>(`${this.baseURL}/idUltimoLancamento`);\n  }\n\n  novoLancamento(lancamento: Lancamentos) {\n    return this.http.post(`${this.baseURL}/novo`, lancamento);\n  }\n\n  novosLancamentos(lancamento: Lancamentos[]) {\n    return this.http.post(`${this.baseURL}/novos`, lancamento);\n  }\n\n\n  editarLancamento(lancamento: Lancamentos) {\n    return this.http.put(`${this.baseURL}/editar/${lancamento.id}`, lancamento);\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { VendaProduto } from 'src/app/_models/Movimentos/Venda/VendaProduto';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { VendaConfig } from 'src/app/_models/Movimentos/Venda/VendaConfig';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendaService {\n\nbaseURL = InfoAPI.URL + '/api/movimentos/vendas';\natualizaVenda = new EventEmitter<boolean>();\natualizaRecebimentos = new EventEmitter<boolean>();\natualizaPagamentos = new EventEmitter<boolean>();\natualizaResumoVenda = new EventEmitter<boolean>();\n\npagamentosVenda = false;\nrecebimentosVenda = false;\nconfigVenda = false;\n\nconstructor(private http: HttpClient) { }\n\ngetConfigVendaStatus() {\n  return this.configVenda;\n}\n\nsetConfigVendaStatus(val: boolean) {\n  this.configVenda = val;\n}\n\ngetPagamentosVendaStatus() {\n  return this.pagamentosVenda;\n}\n\nsetPagamentosVendaStatus(val: boolean) {\n  this.pagamentosVenda = val;\n}\n\ngetRecebimentosVendaStatus() {\n  return this.recebimentosVenda;\n}\n\nsetRecebimentosVendaStatus(val: boolean) {\n  this.recebimentosVenda = val;\n}\n\ngetAllVenda(): Observable<Venda[]> {\n  return this.http.get<Venda[]>(this.baseURL);\n}\n\ngetAllVendaRelatorio(datas: DataPeriodo): Observable<Venda[]> {\n  return this.http.post<Venda[]>(`${this.baseURL}/relatorios`, datas);\n}\n\ngetVendaByClienteId(clienteId: number): Observable<Venda[]> {\n  return this.http.get<Venda[]>(`${this.baseURL}/getByClienteId/${clienteId}`);\n}\n\natualizarVenda() {\n  this.atualizaVenda.emit(true);\n}\natualizarRecebimentos() {\n  this.atualizaRecebimentos.emit(true);\n}\natualizarPagamentos() {\n  this.atualizaPagamentos.emit(true);\n}\natualizarResumoVenda() {\n  this.atualizaResumoVenda.emit(true);\n}\n\ngetVendaById(id: number): Observable<Venda> {\n  return this.http.get<Venda>(`${this.baseURL}/${id}`);\n}\n\ngetVendaConfig(): Observable<VendaConfig> {\n  return this.http.get<VendaConfig>(`${this.baseURL}/config`);\n}\n\nnovoVendaConfig(vendaConfig: VendaConfig) {\n  return this.http.post(`${this.baseURL}/config/novo`, vendaConfig);\n}\n\neditarVendaConfig(vendaConfig: VendaConfig) {\n  return this.http.put(`${this.baseURL}/config/editar/${vendaConfig.id}`, vendaConfig);\n}\n\ngetIdUltimaVenda(): Observable<Venda> {\n  return this.http.get<Venda>(`${this.baseURL}/idUltimaVenda`);\n}\n\nnovoProdutoVenda(produtos: VendaProduto[]) {\n  return this.http.post(`${this.baseURL}/produtos/novo`, produtos);\n}\n\ngetVendaValorPrevistoByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<VendaValorPrevisto> {\n  return this.http.get<VendaValorPrevisto>(`${this.baseURL}/valorprevisto/${idProdutoItem}/${idVenda}`);\n}\n\ngetVendaValoresRealizadosByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<VendaValorRealizado> {\n  return this.http.get<VendaValorRealizado>(`${this.baseURL}/valorrealizado/${idProdutoItem}/${idVenda}`);\n}\n\ngetVerificaPagamentoByProdIdVendId(idProdutoItem: number, idVenda: number): Observable<boolean> {\n  return this.http.get<boolean>(`${this.baseURL}/valorrealizado/pago/${idProdutoItem}/${idVenda}`);\n}\n\n\nnovoVendaValorPrevisto(vendaValorPrevisto: VendaValorPrevisto) {\n  return this.http.post(`${this.baseURL}/valorprevisto/novo`, vendaValorPrevisto);\n}\n\nnovoVendaValorRealizado(vendaValorRealizado: VendaValorRealizado) {\n  return this.http.post(`${this.baseURL}/valorrealizado/novo`, vendaValorRealizado);\n}\n\ngetIdUltimoValorRealizado(): Observable<VendaValorRealizado> {\n  return this.http.get<VendaValorRealizado>(`${this.baseURL}/valorrealizado/idUltimo`);\n}\n\nnovoVenda(venda: Venda) {\n  return this.http.post(`${this.baseURL}/novo`, venda);\n}\n\neditarVenda(venda: Venda) {\n  return this.http.put(`${this.baseURL}/editar/${venda.id}`, venda);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { Observable } from 'rxjs';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacaoService {\n\n  baseURL = InfoAPI.URL + '/api/notificacoes';\n\n  constructor(private http: HttpClient) {}\n\ngetAllNotificacoesByUsuarioId(usuarioId: number): Observable<Notificacao[]> {\n  return this.http.get<Notificacao[]>(`${this.baseURL}/usuario/${usuarioId}`);\n}\n\ngetCountNotificacoesByUsuarioId(usuarioId: number): Observable<number> {\n  return this.http.get<number>(`${this.baseURL}/usuario/count/${usuarioId}`);\n}\n\nnovaNotificacao(notificacao: Notificacao) {\n  return this.http.post(`${this.baseURL}/nova`, notificacao);\n}\n\nnovasNotificacoes(notificacoes: Notificacao[]) {\n  return this.http.post(`${this.baseURL}/novas`, notificacoes);\n}\n\n\neditarVistoNotificacao(notificacao: any) {\n  return this.http.put(`${this.baseURL}/editar/visto`, notificacao);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { InfoAPI } from 'src/app/_models/Info/infoAPI';\nimport { HttpClient } from '@angular/common/http';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { Observable } from 'rxjs';\nimport { PermissaoNivel } from 'src/app/_models/Permissoes/permissaoNivel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissaoService {\n\n  private jwtHelper = new JwtHelperService();\n  private token = localStorage.getItem('token');\n  private decodedToken = this.jwtHelper.decodeToken(this.token);\n  baseURL = InfoAPI.URL + '/api/permissoes';\n\n  retornoAutorizacao: any;\n  constructor(private http: HttpClient) {\n  }\n\n  getPermissoesByFormularioAcaoObjeto(formulario: string, acao: string, objeto = 'NULL'): Observable<Permissao> {\n    return this.http.get<Permissao>(`${this.baseURL}/${formulario}/${acao}/${objeto}`);\n  }\n\n  getPermissoesByFormulario(formulario: string): Observable<Permissao[]> {\n    return this.http.get<Permissao[]>(`${this.baseURL}/${formulario}`);\n  }\n\n  editarNiveisPermissoes(formulario: string, permissaoNivel: PermissaoNivel[]): Observable<PermissaoNivel[]> {\n    return this.http.put<PermissaoNivel[]>(`${this.baseURL}/editar/${formulario}`, permissaoNivel);\n  }\n\n  getUsuarioId() {\n    this.token = localStorage.getItem('token');\n    this.decodedToken = this.jwtHelper.decodeToken(this.token);\n    return (this.decodedToken) ? this.decodedToken.nameid : '';\n  }\n\n  getUsuario() {\n    this.token = localStorage.getItem('token');\n    this.decodedToken = this.jwtHelper.decodeToken(this.token);\n    return (this.decodedToken) ? this.decodedToken.unique_name : '';\n  }\n\n  getUsuarioNiveis() {\n    this.token = localStorage.getItem('token');\n    this.decodedToken = this.jwtHelper.decodeToken(this.token);\n    return (this.decodedToken) ? this.decodedToken.role : [];\n  }\n\n  verificarPermissao(_PERMISSAO: any): any {\n    let retorno = false;\n    _PERMISSAO.permissaoNiveis.forEach(pn => {\n      this.getUsuarioNiveis().forEach(nivelUsuario => {\n        if (pn.nivelId.toString() === nivelUsuario) {\n          retorno = true;\n        }\n      });\n    });\n    return retorno;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport * as io from 'socket.io-client';\n\nexport interface Dados {\n    info: any;\n}\n\n@Injectable()\nexport class SocketService {\n\n    private url = location.protocol + '//' + location.hostname + '';\n    private socket;\n\n    constructor() {\n        this.socket = io(this.url);\n    }\n\n    public sendSocket(evento: string, dados: any) {\n        this.socket.emit(evento, dados);\n    }\n\n    public getSocket(evento: string) {\n    // tslint:disable-next-line: deprecation\n        return Observable.create((observer) => {\n            this.socket.on(evento, (dados) => {\n                observer.next(dados);\n            });\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { UsuarioComponent } from './cadastros/usuario/usuario.component';\nimport { LoginComponent } from './cadastros/usuario/login/login.component';\nimport { NovoUsuarioComponent } from './cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditarUsuarioComponent } from './cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { ClienteComponent } from './cadastros/cliente/cliente.component';\nimport { NovoClienteComponent } from './cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarClienteComponent } from './cadastros/cliente/editarCliente/editarCliente.component';\nimport { AtendimentoComponent } from './atendimento/atendimento.component';\nimport { RetornoComponent } from './atendimento/retorno/retorno.component';\nimport { NovoRetornoComponent } from './atendimento/retorno/novoRetorno/novoRetorno.component';\nimport { EditarRetornoComponent } from './atendimento/retorno/editarRetorno/editarRetorno.component';\nimport { EditarSenhaUsuarioComponent } from './cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component';\nimport { PermissaoComponent } from './permissao/permissao.component';\nimport { VendaComponent } from './movimentos/venda/venda.component';\nimport { NovoVendaComponent } from './movimentos/venda/novoVenda/novoVenda.component';\nimport { EditarVendaComponent } from './movimentos/venda/editarVenda/editarVenda.component';\nimport { RelatorioVendaComponent } from './movimentos/venda/relatorioVenda/relatorioVenda.component';\nimport { ProdutoComponent } from './cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from './cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from './cadastros/produto/editarProduto/editarProduto.component';\nimport { PessoaComponent } from './cadastros/pessoa/pessoa.component';\nimport { EditarPessoaComponent } from './cadastros/pessoa/editarPessoa/editarPessoa.component';\nimport { NovoPessoaComponent } from './cadastros/pessoa/novoPessoa/novoPessoa.component';\nimport { PlanoContaComponent } from './cadastros/planoConta/planoConta.component';\nimport { CentroReceitaComponent } from './cadastros/centroReceita/centroReceita.component';\nimport { CentroDespesaComponent } from './cadastros/centroDespesa/centroDespesa.component';\nimport { FormaPagamentoComponent } from './cadastros/formaPagamento/formaPagamento.component';\nimport { PlanoPagamentoComponent } from './cadastros/planoPagamento/planoPagamento.component';\nimport { RecebimentoComponent } from './financeiro/recebimento/recebimento.component';\nimport { LancamentoComponent } from './financeiro/lancamento/lancamento.component';\nimport { ChequePreComponent } from './cadastros/chequePre/chequePre.component';\nimport { RelatorioLancamentoComponent } from './financeiro/lancamento/relatorioLancamento/relatorioLancamento.component';\nimport { PagamentoComponent } from './financeiro/pagamento/pagamento.component';\nimport { EmpresaComponent } from './cadastros/empresa/empresa.component';\nimport { AutorizacaoComponent } from './autorizacao/autorizacao.component';\n\nconst routes: Routes = [\n  { path: 'usuarios', component: UsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/login', component: LoginComponent},\n  { path: 'usuarios/novo', component: NovoUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/editar/:id', component: EditarUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'usuarios/editar/senha/:id', component: EditarSenhaUsuarioComponent, canActivate: [AuthGuard]},\n  { path: 'clientes', component: ClienteComponent, canActivate: [AuthGuard]},\n  { path: 'clientes/novo', component: NovoClienteComponent, canActivate: [AuthGuard]},\n  { path: 'clientes/editar/:id', component: EditarClienteComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/novo', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/editar/:id', component: AtendimentoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos', component: RetornoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos/novo', component: NovoRetornoComponent, canActivate: [AuthGuard]},\n  { path: 'atendimentos/retornos/editar/:id', component: EditarRetornoComponent, canActivate: [AuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  { path: 'permissoes', component: PermissaoComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas', component: VendaComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas/novo', component: NovoVendaComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas/editar/:id', component: EditarVendaComponent, canActivate: [AuthGuard]},\n  { path: 'movimentos/vendas/relatorios', component: RelatorioVendaComponent, canActivate: [AuthGuard]},\n  { path: 'produtos', component: ProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'produtos/novo', component: NovoProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'produtos/editar/:id', component: EditarProdutoComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas', component: PessoaComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas/novo', component: NovoPessoaComponent, canActivate: [AuthGuard]},\n  { path: 'pessoas/editar/:id', component: EditarPessoaComponent, canActivate: [AuthGuard]},\n  { path: 'plano-conta', component: PlanoContaComponent, canActivate: [AuthGuard]},\n  { path: 'centro-receita', component: CentroReceitaComponent, canActivate: [AuthGuard]},\n  { path: 'centro-despesa', component: CentroDespesaComponent, canActivate: [AuthGuard]},\n  { path: 'forma-pagamento', component: FormaPagamentoComponent, canActivate: [AuthGuard]},\n  { path: 'plano-pagamento', component: PlanoPagamentoComponent, canActivate: [AuthGuard]},\n  { path: 'financeiro/recebimentos', component: RecebimentoComponent, canActivate: [AuthGuard]},\n  { path: 'financeiro/pagamentos', component: PagamentoComponent, canActivate: [AuthGuard]},\n  { path: 'financeiro/lancamentos', component: LancamentoComponent, canActivate: [AuthGuard]},\n  { path: 'financeiro/lancamentos/relatorios', component: RelatorioLancamentoComponent, canActivate: [AuthGuard]},\n  { path: 'cheque-pre', component: ChequePreComponent, canActivate: [AuthGuard]},\n  { path: 'empresas', component: EmpresaComponent, canActivate: [AuthGuard]},\n  { path: 'autorizacoes', component: AutorizacaoComponent, canActivate: [AuthGuard]},\n\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n  { path: '**', redirectTo: 'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n   imports: [RouterModule.forRoot(routes)],\n   exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<html>\\n\\n<body class='hold-transition skin-blue sidebar-mini {{sidebar}}'>\\n  <div class=\\\"wrapper\\\">\\n    <header class=\\\"main-header \\\">\\n\\n      <!-- Logo -->\\n      <a routerlink=\\\"dashboard\\\" class=\\\"logo\\\">\\n        <!-- mini logo for sidebar mini 50x50 pixels -->\\n        <span class=\\\"logo-mini\\\"><b></b>VMS</span>\\n        <!-- logo for regular state and mobile devices -->\\n        <span class=\\\"logo-lg\\\"><b>Virtual</b>Web</span>\\n      </a>\\n\\n      <!-- Header Navbar: style can be found in header.less -->\\n      <nav class=\\\"navbar navbar-static-top\\\">\\n\\n        <a class=\\\"sidebar-toggle\\\" (click)=\\\"alterarSidebar()\\\" role=\\\"button\\\">\\n          <span class=\\\"sr-only\\\"></span>\\n        </a>\\n        <!-- Navbar Right Menu <div *dropdownMenu class=\\\"dropdown-menu\\\" style=\\\"position: absolute; width: 255px;\\\" aria-labelledby=\\\"navbarDropdownMenuLink2\\\">-->\\n        <div class=\\\"navbar-custom-menu\\\">\\n          <ul *ngIf=\\\"verificarLogIn()\\\" class=\\\"nav navbar-nav\\\">\\n\\n            <li class=\\\"dropdown messages-menu\\\" dropdown>\\n              <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                <i class=\\\"fa fa-bell-o\\\"></i>\\n                <span *ngIf=\\\"getQtdNotificacoes() > 0\\\" class=\\\"label label-warning\\\">{{getQtdNotificacoes()}}</span>\\n              </a>\\n              <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li class=\\\"header\\\">Você tem {{getQtdNotificacoes()}} Notificações</li>\\n            <li>\\n\\n              <ul class=\\\"menu\\\">\\n\\n                <div *ngFor=\\\"let notificacao of notificacoes\\\">\\n                  <div *ngIf=\\\"notificacao.visto == 0\\\">\\n                    <li (click)=\\\"setarVistoNotificacao(notificacao)\\\" style=\\\"cursor:pointer;\\\">\\n                      <a>\\n                        <h4 style=\\\"margin-left:5px;\\\">{{notificacao.tipo}}<small style=\\\"margin-right:5px;\\\"class=\\\"pull-right\\\">\\n                            <i class=\\\"fa fa-clock-o \\\"></i>\\n                            [{{notificacao.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}]</small>\\n                        </h4>\\n                        <p style=\\\"margin-left:10px;\\\">Você tem um novo(a) {{notificacao.tipo}}.</p>\\n                      </a>\\n                    </li>\\n                  </div>\\n                  <div *ngIf=\\\"notificacao.visto == 1\\\">\\n                    <li class=\\\"bg-gray\\\"\\n                      style=\\\"border-width: thin;border-style: solid;border-color: rgb(0, 0, 0);cursor:default;\\\">\\n                      <a>\\n                        <h4 style=\\\"margin-left:5px;\\\">{{notificacao.tipo}}\\n                          <small style=\\\"margin-right:5px;\\\"class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o \\\"></i>\\n                            [{{notificacao.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}]</small>\\n                        </h4>\\n                        <p style=\\\"margin-left:10px;\\\">Você tem um novo(a) {{notificacao.tipo}}.</p>\\n                      </a>\\n                    </li>\\n                  </div>\\n                </div>\\n\\n              </ul>\\n            </li>\\n            <li class=\\\"footer\\\"><a></a></li>\\n        </div>\\n        </li>\\n\\n        <!-- Tasks: style can be found in dropdown.less -->\\n\\n        <!-- User Account: style can be found in dropdown.less -->\\n        <li class=\\\"dropdown user user-menu\\\" dropdown>\\n          <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\">\\n            <span class=\\\"hidden-xs\\\">{{usuarioNome()}} </span>\\n          </a>\\n          <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <!-- User image -->\\n        <li class=\\\"user-header\\\">\\n          <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n\\n          <p>\\n            {{usuarioNome()}}\\n            <small></small>\\n          </p>\\n        </li>\\n        <li class=\\\"user-footer\\\">\\n          <div class=\\\"footer\\\">\\n            <a [routerLink]=\\\"['/usuarios','editar', usuarioId()]\\\" class=\\\"btn btn-default btn-flat\\\">Perfil</a>\\n            <a [routerLink]=\\\"['/usuarios','editar','senha', usuarioId()]\\\" class=\\\"btn btn-default btn-flat\\\">Alterar\\n              Senha</a>\\n            <a (click)=\\\"logout()\\\" class=\\\"btn btn-default btn-flat\\\">Sair</a>\\n          </div>\\n        </li>\\n  </div>\\n  </li>\\n  <!-- Control Sidebar Toggle Button -->\\n  <li>\\n    <a data-toggle=\\\"control-sidebar\\\"><i></i></a>\\n  </li>\\n  </ul>\\n  </div>\\n  </nav>\\n  </header>\\n  <!-- Left side column. contains the logo and sidebar -->\\n  <aside *ngIf=\\\"verificarLogIn()\\\" class=\\\"main-sidebar\\\">\\n    <!-- sidebar: style can be found in sidebar.less -->\\n    <section class=\\\"sidebar\\\">\\n      <!-- Sidebar user panel -->\\n      <div class=\\\"user-panel\\\">\\n        <div class=\\\"pull-left image\\\">\\n          <img src=\\\"./../assets/img/user-default.png\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\n        </div>\\n        <div class=\\\"pull-left info\\\">\\n          <p>{{usuarioNome()}}</p>\\n          <a href=\\\"#\\\"><i class=\\\"fa fa-circle text-success\\\"></i> Online</a>\\n        </div>\\n      </div>\\n      <!-- /.search form -->\\n      <!-- sidebar menu: : style can be found in sidebar.less \\n        <li class=\\\"dropdown messages-menu\\\" dropdown>\\n              <a dropdownToggle class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                <i class=\\\"fa fa-bell-o\\\"></i>\\n                <span class=\\\"label label-warning\\\">10</span>\\n              </a>\\n              <body *dropdownMenu class=\\\"dropdown-menu\\\">\\n        \\n        -->\\n      <nav id=\\\"sidebar\\\" class=\\\"sidebar\\\">\\n        <div class=\\\"sidebar-content\\\">\\n\\n          <perfect-scrollbar>\\n\\n            <div class=\\\"sidebar-menu\\\">\\n              <ul>\\n                <li *ngFor=\\\"let menu of menus\\\"\\n                  [ngClass]=\\\"{'active': menu.active , 'sidebar-dropdown':menu.type === 'dropdown' , 'header-menu':menu.type === 'header'}\\\">\\n                  <span *ngIf=\\\"menu.type === 'header'\\\">{{menu.title}}</span>\\n                  <a *ngIf=\\\"menu.type !== 'header' && verificarPermissao(menu.title) == true\\\" [routerLink]=\\\"menu.link\\\" (click)='toggle(menu)'>\\n                    <i class=\\\"{{menu.icon}}\\\" ></i>\\n                    <span>{{menu.title}}</span>\\n                    <span *ngIf=\\\"menu.badge\\\" class=\\\"badge badge-pill\\\"\\n                      [ngClass]=\\\"menu.badge.class\\\">{{menu.badge.text}}</span>\\n                  </a>\\n                  <div *ngIf=\\\"menu.type === 'dropdown'\\\" class=\\\"sidebar-submenu\\\" [@slide]=\\\"getState(menu)\\\">\\n                    <ul>\\n                      <li *ngFor=\\\"let submenu of menu.submenus\\\">\\n                        <a *ngIf=\\\"verificarPermissao(submenu.title) == true\\\"\\n                         [routerLink]=\\\"submenu.link\\\"> <i class=\\\"{{submenu.icon}}\\\"></i>{{submenu.title}}\\n                          <span *ngIf=\\\"submenu.badge\\\" class=\\\"badge badge-pill\\\"\\n                            [ngClass]=\\\"submenu.badge.class\\\">{{submenu.badge.text}}</span>\\n                        </a>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </li>\\n              </ul>\\n            </div>\\n          </perfect-scrollbar>\\n        </div>\\n      </nav>\\n    </section>\\n\\n    <!-- /.sidebar -->\\n  </aside>\\n\\n  <div class=\\\"content-wrapper\\\">\\n    <!-- Content Header (Page header) -->\\n    <section class=\\\"content-header\\\">\\n      <router-outlet></router-outlet>\\n    </section>\\n  </div>\\n\\n  <footer class=\\\"main-footer\\\">\\n    <div class=\\\"pull-right hidden-xs\\\">\\n      <b>Versão</b> BETA\\n    </div>\\n    <strong>Copyright &copy; 2019 <a>VMS Ltda</a>.</strong>\\n  </footer>\\n  </div>\\n</body>\\n\\n</html>\\n<!--\\n<button type=\\\"button\\\" style=\\\"position:fixed;bottom:10%;left:2%;\\\" \\ntooltip=\\\"Novas ideias!\\\" (click)=\\\"templateIdeia.show()\\\" class=\\\"btn btn-warning btn-circle btn-xl\\\"><i class=\\\"fa fa-lightbulb\\\"></i>\\n</button>\\n\\n<div bsModal #templateIdeia=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateIdeia.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form class=\\\"container\\\" [formGroup]=\\\"cadastroIdeiaForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\"  />\\n\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n                <label>Ideia: (*)</label>\\n                <textarea class=\\\"form-control\\\"\\n                  [ngClass]=\\\"{'is-invalid':cadastroIdeiaForm.get('ideia').errors &&cadastroIdeiaForm.get('ideia').touched}\\\"\\n                  formControlName=\\\"ideia\\\" rows=\\\"4\\\"></textarea>\\n                <div\\n                  *ngIf=\\\"cadastroIdeiaForm.get('ideia').hasError('required') &&cadastroIdeiaForm.get('ideia').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Campo é obrigatório.\\n                </div>\\n              </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateIdeia.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroIdeiaForm.valid\\\" (click)=\\\"cadastrarIdeia(templateIdeia)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n-->\"","module.exports = \"@-webkit-keyframes swing {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  10% {\\n    -webkit-transform: rotate(10deg);\\n            transform: rotate(10deg); }\\n  30% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  40% {\\n    -webkit-transform: rotate(-10deg);\\n            transform: rotate(-10deg); }\\n  50% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  60% {\\n    -webkit-transform: rotate(5deg);\\n            transform: rotate(5deg); }\\n  70% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  80% {\\n    -webkit-transform: rotate(-5deg);\\n            transform: rotate(-5deg); }\\n  100% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); } }\\n\\n@keyframes swing {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  10% {\\n    -webkit-transform: rotate(10deg);\\n            transform: rotate(10deg); }\\n  30% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  40% {\\n    -webkit-transform: rotate(-10deg);\\n            transform: rotate(-10deg); }\\n  50% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  60% {\\n    -webkit-transform: rotate(5deg);\\n            transform: rotate(5deg); }\\n  70% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  80% {\\n    -webkit-transform: rotate(-5deg);\\n            transform: rotate(-5deg); }\\n  100% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); } }\\n\\n@-webkit-keyframes sonar {\\n  0% {\\n    -webkit-transform: scale(0.9);\\n            transform: scale(0.9);\\n    opacity: 1; }\\n  100% {\\n    -webkit-transform: scale(2);\\n            transform: scale(2);\\n    opacity: 0; } }\\n\\n@keyframes sonar {\\n  0% {\\n    -webkit-transform: scale(0.9);\\n            transform: scale(0.9);\\n    opacity: 1; }\\n  100% {\\n    -webkit-transform: scale(2);\\n            transform: scale(2);\\n    opacity: 0; } }\\n\\n.sidebar {\\n  width: 230px;\\n  height: 100%;\\n  max-height: 100%;\\n  position: relative;\\n  top: 0;\\n  left: 0px;\\n  z-index: 999;\\n  transition: left .3s ease; }\\n\\n.sidebar a {\\n    text-decoration: none;\\n    transition: color .3s ease; }\\n\\n.sidebar .sidebar-content {\\n    max-height: calc(100% - 30px);\\n    height: calc(100% - 30px);\\n    overflow-y: auto;\\n    position: relative; }\\n\\n.sidebar .sidebar-content .sidebar-header {\\n      padding: 10px 20px;\\n      display: flex;\\n      align-items: center; }\\n\\n.sidebar .sidebar-content .sidebar-header > a {\\n        text-transform: uppercase;\\n        font-weight: bold;\\n        flex-grow: 1;\\n        text-decoration: none; }\\n\\n.sidebar .sidebar-content .sidebar-header #close-sidebar {\\n        cursor: pointer;\\n        font-size: 20px;\\n        transition: color .3s ease; }\\n\\n.sidebar .sidebar-content .sidebar-profile {\\n      padding: 20px;\\n      overflow: hidden; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-pic {\\n        float: left;\\n        width: 60px;\\n        padding: 2px;\\n        border-radius: 12px;\\n        margin-right: 15px;\\n        overflow: hidden; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-pic img {\\n          -o-object-fit: cover;\\n             object-fit: cover;\\n          height: 100%;\\n          width: 100%; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-info {\\n        float: left; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-info > span {\\n          display: block; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-info .user-role {\\n          font-size: 12px; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-info .user-status {\\n          font-size: 11px;\\n          margin-top: 4px; }\\n\\n.sidebar .sidebar-content .sidebar-profile .user-info .user-status i {\\n            font-size: 8px;\\n            margin-right: 4px;\\n            color: #5cb85c; }\\n\\n.sidebar .sidebar-content .sidebar-search > div {\\n      padding: 10px 20px; }\\n\\n.sidebar .sidebar-content .sidebar-search .input-group-append .input-group-text {\\n      border-left: 0; }\\n\\n.sidebar .sidebar-content .sidebar-menu {\\n      padding-bottom: 10px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .header-menu span {\\n        font-weight: bold;\\n        font-size: 14px;\\n        padding: 15px 20px 5px 20px;\\n        display: inline-block; }\\n\\n.sidebar .sidebar-content .sidebar-menu ul {\\n        list-style-type: none;\\n        padding: 0;\\n        margin: 0; }\\n\\n.sidebar .sidebar-content .sidebar-menu ul li a {\\n          display: inline-block;\\n          width: 100%;\\n          text-decoration: none;\\n          position: relative;\\n          padding: 8px 30px 8px 20px; }\\n\\n.sidebar .sidebar-content .sidebar-menu ul li a i {\\n            margin-right: 10px;\\n            font-size: 12px;\\n            width: 30px;\\n            height: 30px;\\n            line-height: 30px;\\n            text-align: center;\\n            border-radius: 4px; }\\n\\n.sidebar .sidebar-content .sidebar-menu ul li a:hover > i::before {\\n            display: inline-block;\\n            -webkit-animation: swing ease-in-out .5s 1 alternate;\\n                    animation: swing ease-in-out .5s 1 alternate; }\\n\\n.sidebar .sidebar-content .sidebar-menu ul li a span.label,\\n          .sidebar .sidebar-content .sidebar-menu ul li a span.badge {\\n            float: right;\\n            margin-top: 8px;\\n            margin-left: 5px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown > a:after {\\n        font-family: \\\"Font Awesome 5 Free\\\";\\n        font-weight: 900;\\n        content: \\\"\\\\f105\\\";\\n        display: inline-block;\\n        font-style: normal;\\n        font-variant: normal;\\n        text-rendering: auto;\\n        -webkit-font-smoothing: antialiased;\\n        -moz-osx-font-smoothing: grayscale;\\n        text-align: center;\\n        background: 0 0;\\n        position: absolute;\\n        right: 15px;\\n        top: 14px;\\n        transition: -webkit-transform .3s ease;\\n        transition: transform .3s ease;\\n        transition: transform .3s ease, -webkit-transform .3s ease; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu {\\n        overflow: hidden; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu ul {\\n          padding: 5px 0; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li {\\n          padding-left: 25px;\\n          font-size: 13px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li a:before {\\n            font-family: \\\"Font Awesome 5 Free\\\";\\n            font-weight: 400;\\n            font-style: normal;\\n            text-align: center;\\n            text-decoration: none;\\n            margin-right: 10px;\\n            font-size: 8px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li a:before i {\\n              margin-right: 10px;\\n              font-size: 8px;\\n              width: 30px;\\n              height: 15px;\\n              line-height: 15px;\\n              text-align: center;\\n              border-radius: 3px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li a:before:hover > i::before {\\n              display: inline-block;\\n              -webkit-animation: swing ease-in-out .5s 1 alternate;\\n                      animation: swing ease-in-out .5s 1 alternate; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li a .badge,\\n          .sidebar .sidebar-content .sidebar-menu .sidebar-dropdown .sidebar-submenu li a .label {\\n            float: right;\\n            margin-top: 0px; }\\n\\n.sidebar .sidebar-content .sidebar-menu .sidebar-dropdown.active > a:after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg);\\n        right: 15px; }\\n\\n.sidebar .sidebar-footer {\\n    position: absolute;\\n    width: 100%;\\n    bottom: 0;\\n    display: flex; }\\n\\n.sidebar .sidebar-footer > div {\\n      flex-grow: 1;\\n      text-align: center;\\n      height: 30px;\\n      line-height: 30px;\\n      position: static;\\n      display: flex; }\\n\\n.sidebar .sidebar-footer > div > a {\\n        flex-grow: 1; }\\n\\n.sidebar .sidebar-footer > div a .notification {\\n        position: absolute;\\n        top: 0; }\\n\\n.sidebar .sidebar-footer .dropdown-menu {\\n      bottom: 31px;\\n      left: 0 !important;\\n      top: initial !important;\\n      right: 0 !important;\\n      -webkit-transform: none !important;\\n              transform: none !important;\\n      border-bottom-left-radius: 0;\\n      border-bottom-right-radius: 0;\\n      font-size: .9rem; }\\n\\n.sidebar .sidebar-footer .messages .dropdown-item {\\n      padding: .25rem 1rem; }\\n\\n.sidebar .sidebar-footer .messages .messages-header {\\n      padding: 0 1rem; }\\n\\n.sidebar .sidebar-footer .messages .message-content {\\n      display: flex; }\\n\\n.sidebar .sidebar-footer .messages .message-content .pic {\\n        width: 40px;\\n        height: 40px;\\n        border-radius: 4px;\\n        overflow: hidden; }\\n\\n.sidebar .sidebar-footer .messages .message-content .pic img {\\n          -o-object-fit: cover;\\n             object-fit: cover;\\n          height: 100%; }\\n\\n.sidebar .sidebar-footer .messages .message-content .content {\\n        line-height: 1.6;\\n        padding-left: 5px;\\n        width: calc(100% - 40px); }\\n\\n.sidebar .sidebar-footer .messages .message-content .content .message-title {\\n          font-size: 13px; }\\n\\n.sidebar .sidebar-footer .messages .message-content .content .message-detail {\\n          font-size: 12px;\\n          white-space: nowrap;\\n          overflow: hidden;\\n          text-overflow: ellipsis; }\\n\\n.sidebar .sidebar-footer .notifications .dropdown-item {\\n      padding: .25rem 1rem; }\\n\\n.sidebar .sidebar-footer .notifications .notifications-header {\\n      padding: 0 1rem; }\\n\\n.sidebar .sidebar-footer .notifications .notification-content {\\n      display: flex; }\\n\\n.sidebar .sidebar-footer .notifications .notification-content .icon {\\n        width: 40px;\\n        height: 40px; }\\n\\n.sidebar .sidebar-footer .notifications .notification-content .icon i {\\n          width: 35px;\\n          height: 35px;\\n          text-align: center;\\n          line-height: 35px;\\n          border-radius: 4px; }\\n\\n.sidebar .sidebar-footer .notifications .notification-content .content {\\n        line-height: 1.6;\\n        padding-left: 5px;\\n        width: calc(100% - 40px); }\\n\\n.sidebar .sidebar-footer .notifications .notification-content .content .notification-time {\\n          font-size: .7rem;\\n          color: #828282; }\\n\\n.sidebar .sidebar-footer .notifications .notification-content .content .notification-detail {\\n          font-size: 12px;\\n          white-space: nowrap;\\n          overflow: hidden;\\n          text-overflow: ellipsis; }\\n\\n.sidebar .sidebar-footer .badge-sonar {\\n      display: inline-block;\\n      background: #980303;\\n      border-radius: 50%;\\n      height: 8px;\\n      width: 8px;\\n      position: absolute;\\n      top: 0; }\\n\\n.sidebar .sidebar-footer .badge-sonar:after {\\n        content: '';\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        border: 2px solid #980303;\\n        opacity: 0;\\n        border-radius: 50%;\\n        width: 100%;\\n        height: 100%;\\n        -webkit-animation: sonar 1.5s infinite;\\n                animation: sonar 1.5s infinite; }\\n\\n/*------------------------------default theme---------------------------------*/\\n\\n.sidebar {\\n  background-color: #1d1d1d; }\\n\\n.sidebar .sidebar-profile,\\n  .sidebar .sidebar-search,\\n  .sidebar .sidebar-menu {\\n    border-top: 1px solid #2b2b2b; }\\n\\n.sidebar .sidebar-search input.search-menu,\\n  .sidebar .sidebar-search .input-group-text {\\n    border-color: #2b2b2b;\\n    box-shadow: none; }\\n\\n.sidebar .sidebar-profile .user-info .user-role,\\n  .sidebar .sidebar-profile .user-info .user-status,\\n  .sidebar .sidebar-search input.search-menu,\\n  .sidebar .sidebar-search .input-group-text,\\n  .sidebar .sidebar-header > a,\\n  .sidebar .sidebar-menu ul li a,\\n  .sidebar .sidebar-footer > div > a,\\n  .sidebar #close-sidebar {\\n    color: #bdbdbd; }\\n\\n.sidebar .sidebar-menu ul li:hover > a,\\n  .sidebar .sidebar-menu .sidebar-dropdown.active > a,\\n  .sidebar .sidebar-profile .user-info,\\n  .sidebar .sidebar-header > a:hover,\\n  .sidebar .sidebar-footer > div > a:hover i,\\n  .sidebar #close-sidebar:hover {\\n    color: #ffffff; }\\n\\n.sidebar ul li:hover a i,\\n  .sidebar .sidebar-dropdown .sidebar-submenu li a:hover:before,\\n  .sidebar .sidebar-search input.search-menu:focus + span,\\n  .sidebar .sidebar-menu .sidebar-dropdown.active a i {\\n    color: #ffffff; }\\n\\n.sidebar .sidebar-menu ul li a i,\\n  .sidebar .sidebar-menu .sidebar-dropdown div,\\n  .sidebar .sidebar-search input.search-menu,\\n  .sidebar .sidebar-search .input-group-text {\\n    background-color: #2b2b2b;\\n    border: none;\\n    margin-left: 1px; }\\n\\n.sidebar .sidebar-menu .header-menu span {\\n    color: #6c7b88; }\\n\\n.sidebar .sidebar-footer {\\n    background-color: #2b2b2b;\\n    box-shadow: 0px -1px 5px #131212;\\n    border-top: 1px solid #3a3a3a; }\\n\\n.sidebar .sidebar-footer > div:first-child {\\n    border-left: none; }\\n\\n.sidebar .sidebar-footer > div:last-child {\\n    border-right: none; }\\n\\n.sidebar.sidebar-bg {\\n    background-image: url(/assets/img/bg1.jpg);\\n    background-size: cover;\\n    background-position: center;\\n    background-repeat: no-repeat; }\\n\\n.sidebar.sidebar-bg:before {\\n      content: '';\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n      background-color: rgba(29, 29, 29, 0.8); }\\n\\n.sidebar.sidebar-bg .sidebar-profile,\\n    .sidebar.sidebar-bg .sidebar-search,\\n    .sidebar.sidebar-bg .sidebar-menu {\\n      border-top: 1px solid rgba(255, 255, 255, 0.1); }\\n\\n.sidebar.sidebar-bg .sidebar-search input.search-menu,\\n    .sidebar.sidebar-bg .sidebar-search .input-group-text {\\n      border-color: rgba(255, 255, 255, 0.1);\\n      box-shadow: none; }\\n\\n.sidebar.sidebar-bg .sidebar-menu ul li a i,\\n    .sidebar.sidebar-bg .sidebar-menu .sidebar-dropdown div,\\n    .sidebar.sidebar-bg .sidebar-search input.search-menu,\\n    .sidebar.sidebar-bg .sidebar-search .input-group-text {\\n      background-color: rgba(255, 255, 255, 0.1); }\\n\\n.sidebar.sidebar-bg .sidebar-footer {\\n      background-color: rgba(43, 43, 43, 0.5);\\n      box-shadow: 0px -1px 5px rgba(43, 43, 43, 0.5);\\n      border-top: 1px solid rgba(255, 255, 255, 0.1); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxTRVJWTVNcXERlc2t0b3BcXFZpcnR1YWxXZWJcXFZpcnR1YWxXZWItQXBwL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0IsRUFBQTtFQUcxQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGlDQUF5QjtZQUF6Qix5QkFBeUIsRUFBQTtFQUczQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0IsRUFBQTtFQUcxQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQSxFQUFBOztBQWxDN0I7RUFDSTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0IsRUFBQTtFQUcxQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGlDQUF5QjtZQUF6Qix5QkFBeUIsRUFBQTtFQUczQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0IsRUFBQTtFQUcxQjtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQSxFQUFBOztBQUkzQjtFQUNFO0lBQ0UsNkJBQW9CO1lBQXBCLHFCQUFvQjtJQUNwQixVQUFVLEVBQUE7RUFHWjtJQUNFLDJCQUFtQjtZQUFuQixtQkFBbUI7SUFDbkIsVUFBVSxFQUFBLEVBQUE7O0FBUmQ7RUFDRTtJQUNFLDZCQUFvQjtZQUFwQixxQkFBb0I7SUFDcEIsVUFBVSxFQUFBO0VBR1o7SUFDRSwyQkFBbUI7WUFBbkIsbUJBQW1CO0lBQ25CLFVBQVUsRUFBQSxFQUFBOztBQUlkO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixTQUFTO0VBQ1QsWUFBWTtFQUNaLHlCQUF5QixFQUFBOztBQVIzQjtJQVdJLHFCQUFxQjtJQUNyQiwwQkFBMEIsRUFBQTs7QUFaOUI7SUFnQkksNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIsa0JBQWtCLEVBQUE7O0FBbkJ0QjtNQXNCTSxrQkFBa0I7TUFDbEIsYUFBYTtNQUNiLG1CQUFtQixFQUFBOztBQXhCekI7UUEyQlEseUJBQXlCO1FBQ3pCLGlCQUFpQjtRQUNqQixZQUFZO1FBQ1oscUJBQXFCLEVBQUE7O0FBOUI3QjtRQWtDUSxlQUFlO1FBQ2YsZUFBZTtRQUNmLDBCQUEwQixFQUFBOztBQXBDbEM7TUF5Q00sYUFBYTtNQUNiLGdCQUFnQixFQUFBOztBQTFDdEI7UUE2Q1EsV0FBVztRQUNYLFdBQVc7UUFDWCxZQUFZO1FBQ1osbUJBQW1CO1FBQ25CLGtCQUFrQjtRQUNsQixnQkFBZ0IsRUFBQTs7QUFsRHhCO1VBcURVLG9CQUFpQjthQUFqQixpQkFBaUI7VUFDakIsWUFBWTtVQUNaLFdBQVcsRUFBQTs7QUF2RHJCO1FBNERRLFdBQVcsRUFBQTs7QUE1RG5CO1VBK0RVLGNBQWMsRUFBQTs7QUEvRHhCO1VBbUVVLGVBQWUsRUFBQTs7QUFuRXpCO1VBdUVVLGVBQWU7VUFDZixlQUFlLEVBQUE7O0FBeEV6QjtZQTJFWSxjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGNBQWMsRUFBQTs7QUE3RTFCO01BdUZRLGtCQUFrQixFQUFBOztBQXZGMUI7TUEyRlEsY0FBYyxFQUFBOztBQTNGdEI7TUFnR00sb0JBQW9CLEVBQUE7O0FBaEcxQjtRQW1HUSxpQkFBaUI7UUFDakIsZUFBZTtRQUNmLDJCQUEyQjtRQUMzQixxQkFBcUIsRUFBQTs7QUF0RzdCO1FBMkdRLHFCQUFxQjtRQUNyQixVQUFVO1FBQ1YsU0FBUyxFQUFBOztBQTdHakI7VUFnSFUscUJBQXFCO1VBQ3JCLFdBQVc7VUFDWCxxQkFBcUI7VUFDckIsa0JBQWtCO1VBQ2xCLDBCQUEwQixFQUFBOztBQXBIcEM7WUF1SFksa0JBQWtCO1lBQ2xCLGVBQWU7WUFDZixXQUFXO1lBQ1gsWUFBWTtZQUNaLGlCQUFpQjtZQUNqQixrQkFBa0I7WUFDbEIsa0JBQWtCLEVBQUE7O0FBN0g5QjtZQWlJWSxxQkFBcUI7WUFDckIsb0RBQTRDO29CQUE1Qyw0Q0FBNEMsRUFBQTs7QUFsSXhEOztZQXVJWSxZQUFZO1lBQ1osZUFBZTtZQUNmLGdCQUFnQixFQUFBOztBQXpJNUI7UUFnSlUsa0NBQWtDO1FBQ2xDLGdCQUFnQjtRQUNoQixnQkFBZ0I7UUFDaEIscUJBQXFCO1FBQ3JCLGtCQUFrQjtRQUNsQixvQkFBb0I7UUFDcEIsb0JBQW9CO1FBQ3BCLG1DQUFtQztRQUNuQyxrQ0FBa0M7UUFDbEMsa0JBQWtCO1FBQ2xCLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIsV0FBVztRQUNYLFNBQVM7UUFDVCxzQ0FBOEI7UUFBOUIsOEJBQThCO1FBQTlCLDBEQUE4QixFQUFBOztBQTlKeEM7UUFvS1UsZ0JBQWdCLEVBQUE7O0FBcEsxQjtVQXVLWSxjQUFjLEVBQUE7O0FBdksxQjtVQTJLWSxrQkFBa0I7VUFDbEIsZUFBZSxFQUFBOztBQTVLM0I7WUFnTGdCLGtDQUFrQztZQUNsQyxnQkFBZ0I7WUFDaEIsa0JBQWtCO1lBQ2xCLGtCQUFrQjtZQUNsQixxQkFBcUI7WUFDckIsa0JBQWtCO1lBQ2xCLGNBQWMsRUFBQTs7QUF0TDlCO2NBeUxrQixrQkFBa0I7Y0FDbEIsY0FBYztjQUNkLFdBQVc7Y0FDWCxZQUFZO2NBQ1osaUJBQWlCO2NBQ2pCLGtCQUFrQjtjQUNsQixrQkFBa0IsRUFBQTs7QUEvTHBDO2NBbU1rQixxQkFBcUI7Y0FDckIsb0RBQTRDO3NCQUE1Qyw0Q0FBNEMsRUFBQTs7QUFwTTlEOztZQXlNZ0IsWUFBWTtZQUNaLGVBQWUsRUFBQTs7QUExTS9CO1FBaU5VLGdDQUF3QjtnQkFBeEIsd0JBQXdCO1FBQ3hCLFdBQVcsRUFBQTs7QUFsTnJCO0lBMk5JLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWEsRUFBQTs7QUE5TmpCO01BaU9NLFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsWUFBWTtNQUNaLGlCQUFpQjtNQUNqQixnQkFBZ0I7TUFDaEIsYUFBYSxFQUFBOztBQXRPbkI7UUF5T1EsWUFBWSxFQUFBOztBQXpPcEI7UUE2T1Esa0JBQWtCO1FBQ2xCLE1BQU0sRUFBQTs7QUE5T2Q7TUFtUE0sWUFBWTtNQUNaLGtCQUFrQjtNQUNsQix1QkFBdUI7TUFDdkIsbUJBQW1CO01BQ25CLGtDQUEwQjtjQUExQiwwQkFBMEI7TUFDMUIsNEJBQTRCO01BQzVCLDZCQUE2QjtNQUM3QixnQkFBZ0IsRUFBQTs7QUExUHRCO01BK1BRLG9CQUFvQixFQUFBOztBQS9QNUI7TUFtUVEsZUFBZSxFQUFBOztBQW5RdkI7TUF1UVEsYUFBYSxFQUFBOztBQXZRckI7UUEwUVUsV0FBVztRQUNYLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsZ0JBQWdCLEVBQUE7O0FBN1ExQjtVQWdSWSxvQkFBaUI7YUFBakIsaUJBQWlCO1VBQ2pCLFlBQVksRUFBQTs7QUFqUnhCO1FBc1JVLGdCQUFnQjtRQUNoQixpQkFBaUI7UUFDakIsd0JBQXdCLEVBQUE7O0FBeFJsQztVQTJSWSxlQUFlLEVBQUE7O0FBM1IzQjtVQStSWSxlQUFlO1VBQ2YsbUJBQW1CO1VBQ25CLGdCQUFnQjtVQUNoQix1QkFBdUIsRUFBQTs7QUFsU25DO01BNFNRLG9CQUFvQixFQUFBOztBQTVTNUI7TUFnVFEsZUFBZSxFQUFBOztBQWhUdkI7TUFvVFEsYUFBYSxFQUFBOztBQXBUckI7UUF1VFUsV0FBVztRQUNYLFlBQVksRUFBQTs7QUF4VHRCO1VBMlRZLFdBQVc7VUFDWCxZQUFZO1VBQ1osa0JBQWtCO1VBQ2xCLGlCQUFpQjtVQUNqQixrQkFBa0IsRUFBQTs7QUEvVDlCO1FBb1VVLGdCQUFnQjtRQUNoQixpQkFBaUI7UUFDakIsd0JBQXdCLEVBQUE7O0FBdFVsQztVQXlVWSxnQkFBZ0I7VUFDaEIsY0FBYyxFQUFBOztBQTFVMUI7VUE4VVksZUFBZTtVQUNmLG1CQUFtQjtVQUNuQixnQkFBZ0I7VUFDaEIsdUJBQXVCLEVBQUE7O0FBalZuQztNQXlWTSxxQkFBcUI7TUFDckIsbUJBQW1CO01BQ25CLGtCQUFrQjtNQUNsQixXQUFXO01BQ1gsVUFBVTtNQUNWLGtCQUFrQjtNQUNsQixNQUFNLEVBQUE7O0FBL1ZaO1FBa1dRLFdBQVc7UUFDWCxrQkFBa0I7UUFDbEIsTUFBTTtRQUNOLE9BQU87UUFDUCx5QkFBeUI7UUFDekIsVUFBVTtRQUNWLGtCQUFrQjtRQUNsQixXQUFXO1FBQ1gsWUFBWTtRQUNaLHNDQUE4QjtnQkFBOUIsOEJBQThCLEVBQUE7O0FBU3RDLCtFQUFBOztBQWtCQTtFQUVFLHlCQW5CMkIsRUFBQTs7QUFpQjdCOzs7SUFPSSw2QkF2Qm1CLEVBQUE7O0FBZ0J2Qjs7SUFZSSxxQkE1Qm1CO0lBNkJuQixnQkFBZ0IsRUFBQTs7QUFicEI7Ozs7Ozs7O0lBd0JJLGNBdENVLEVBQUE7O0FBY2Q7Ozs7OztJQWlDSSxjQTdDZ0IsRUFBQTs7QUFZcEI7Ozs7SUF3Q0ksY0FwRGdCLEVBQUE7O0FBWXBCOzs7O0lBK0NJLHlCQS9EbUI7SUFnRW5CLFlBQVk7SUFDWixnQkFBZ0IsRUFBQTs7QUFqRHBCO0lBcURJLGNBbEV1QixFQUFBOztBQWEzQjtJQXlESSx5QkF6RW1CO0lBMEVuQixnQ0FyRWlCO0lBc0VqQiw2QkExRTZCLEVBQUE7O0FBZWpDO0lBK0RJLGlCQUFpQixFQUFBOztBQS9EckI7SUFtRUksa0JBQWtCLEVBQUE7O0FBbkV0QjtJQXlFSSwwQ0FBMEM7SUFDMUMsc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQiw0QkFBNEIsRUFBQTs7QUE1RWhDO01BK0VNLFdBQVc7TUFDWCxrQkFBa0I7TUFDbEIsTUFBTTtNQUNOLFFBQVE7TUFDUixTQUFTO01BQ1QsT0FBTztNQUNQLHVDQTVGeUMsRUFBQTs7QUFPL0M7OztNQTJGTSw4Q0FqR3NDLEVBQUE7O0FBTTVDOztNQWdHTSxzQ0F0R3NDO01BdUd0QyxnQkFBZ0IsRUFBQTs7QUFqR3RCOzs7O01Bd0dNLDBDQTlHc0MsRUFBQTs7QUFNNUM7TUE2R00sdUNBbEgrQjtNQW1IL0IsOENBbkgrQjtNQW9IL0IsOENBckhzQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGtleWZyYW1lcyBzd2luZyB7XHJcbiAgICAwJSB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgMTAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTBkZWcpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgMzAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICA0MCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTBkZWcpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgNTAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICA2MCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg1ZGVnKTtcclxuICAgIH1cclxuICBcclxuICAgIDcwJSB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgODAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTVkZWcpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgMTAwJSB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIHNvbmFyIHtcclxuICAgIDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSguOSk7XHJcbiAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAxMDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLnNpZGViYXIge1xyXG4gICAgd2lkdGg6IDIzMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWF4LWhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDBweDtcclxuICAgIHotaW5kZXg6IDk5OTtcclxuICAgIHRyYW5zaXRpb246IGxlZnQgLjNzIGVhc2U7XHJcbiAgXHJcbiAgICBhIHtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuM3MgZWFzZTtcclxuICAgIH1cclxuICBcclxuICAgIC5zaWRlYmFyLWNvbnRlbnQge1xyXG4gICAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMCUgLSAzMHB4KTtcclxuICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAzMHB4KTtcclxuICAgICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG4gICAgICAuc2lkZWJhci1oZWFkZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgXHJcbiAgICAgICAgPmEge1xyXG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICAjY2xvc2Utc2lkZWJhciB7XHJcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAuM3MgZWFzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLnNpZGViYXItcHJvZmlsZSB7XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIFxyXG4gICAgICAgIC51c2VyLXBpYyB7XHJcbiAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMnB4O1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgXHJcbiAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgLnVzZXItaW5mbyB7XHJcbiAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICBcclxuICAgICAgICAgID5zcGFuIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAudXNlci1yb2xlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgLnVzZXItc3RhdHVzIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA0cHg7XHJcbiAgXHJcbiAgICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogOHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNHB4O1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjNWNiODVjO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5zaWRlYmFyLXNlYXJjaCB7XHJcbiAgXHJcbiAgICAgICAgPmRpdiB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgIC5pbnB1dC1ncm91cC1hcHBlbmQgLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgICAgICAgYm9yZGVyLWxlZnQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5zaWRlYmFyLW1lbnUge1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIFxyXG4gICAgICAgIC5oZWFkZXItbWVudSBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMTVweCAyMHB4IDVweCAyMHB4O1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH1cclxuICBcclxuICBcclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgbWFyZ2luOiAwO1xyXG4gIFxyXG4gICAgICAgICAgbGkgYSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA4cHggMzBweCA4cHggMjBweDtcclxuICBcclxuICAgICAgICAgICAgaSB7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgICAmOmhvdmVyPmk6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgIGFuaW1hdGlvbjogc3dpbmcgZWFzZS1pbi1vdXQgLjVzIDEgYWx0ZXJuYXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAgIHNwYW4ubGFiZWwsXHJcbiAgICAgICAgICAgIHNwYW4uYmFkZ2Uge1xyXG4gICAgICAgICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICAuc2lkZWJhci1kcm9wZG93biB7XHJcbiAgICAgICAgICA+YTphZnRlciB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkZvbnQgQXdlc29tZSA1IEZyZWVcIjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgICAgICAgICAgY29udGVudDogXCJcXGYxMDVcIjtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtdmFyaWFudDogbm9ybWFsO1xyXG4gICAgICAgICAgICB0ZXh0LXJlbmRlcmluZzogYXV0bztcclxuICAgICAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgICAgICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogMCAwO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxNXB4O1xyXG4gICAgICAgICAgICB0b3A6IDE0cHg7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZTtcclxuICBcclxuICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgIC5zaWRlYmFyLXN1Ym1lbnUge1xyXG4gICAgICAgICAgICAvLyBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgICAgICAgdWwge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA4cHg7ICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICY6aG92ZXI+aTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiBzd2luZyBlYXNlLWluLW91dCAuNXMgMSBhbHRlcm5hdGU7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5iYWRnZSxcclxuICAgICAgICAgICAgICAgIC5sYWJlbCB7XHJcbiAgICAgICAgICAgICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgJi5hY3RpdmU+YTphZnRlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcclxuICAgICAgICAgICAgcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICB9ICBcclxuICAgIH1cclxuICBcclxuICAgIC5zaWRlYmFyLWZvb3RlciB7XHJcbiAgXHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGJvdHRvbTogMDtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICBcclxuICAgICAgPmRpdiB7XHJcbiAgICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIFxyXG4gICAgICAgID5hIHtcclxuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgYSAubm90aWZpY2F0aW9uIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLmRyb3Bkb3duLW1lbnUge1xyXG4gICAgICAgIGJvdHRvbTogMzFweDtcclxuICAgICAgICBsZWZ0OiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgdG9wOiBpbml0aWFsICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgcmlnaHQ6IDAgIWltcG9ydGFudDtcclxuICAgICAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLm1lc3NhZ2VzIHtcclxuICAgICAgICAuZHJvcGRvd24taXRlbSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAuMjVyZW0gMXJlbTtcclxuICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgLm1lc3NhZ2VzLWhlYWRlciB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAwIDFyZW07XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgIC5tZXNzYWdlLWNvbnRlbnQge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICBcclxuICAgICAgICAgIC5waWMge1xyXG4gICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAuY29udGVudCB7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgXHJcbiAgICAgICAgICAgIC5tZXNzYWdlLXRpdGxlIHtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICAgLm1lc3NhZ2UtZGV0YWlsIHtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5ub3RpZmljYXRpb25zIHtcclxuICAgICAgICAuZHJvcGRvd24taXRlbSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAuMjVyZW0gMXJlbTtcclxuICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgLm5vdGlmaWNhdGlvbnMtaGVhZGVyIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDAgMXJlbTtcclxuICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgLm5vdGlmaWNhdGlvbi1jb250ZW50IHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgXHJcbiAgICAgICAgICAuaWNvbiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgXHJcbiAgICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAuY29udGVudCB7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgXHJcbiAgICAgICAgICAgIC5ub3RpZmljYXRpb24tdGltZSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAuN3JlbTtcclxuICAgICAgICAgICAgICBjb2xvcjogIzgyODI4MjtcclxuICAgICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgICAubm90aWZpY2F0aW9uLWRldGFpbCB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gIFxyXG4gIFxyXG4gICAgICAuYmFkZ2Utc29uYXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjOTgwMzAzO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICBoZWlnaHQ6IDhweDtcclxuICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgXHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjOTgwMzAzO1xyXG4gICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgYW5pbWF0aW9uOiBzb25hciAxLjVzIGluZmluaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gIFxyXG4gIFxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBcclxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWRlZmF1bHQgdGhlbWUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICRiZy1zaWRlYmFyLXdyYXBwZXIgOiAjMWQxZDFkO1xyXG4gICRib3JkZXItY29sb3IgOiAjMmIyYjJiO1xyXG4gICRmb290ZXItdG9wLWJvcmRlci1jb2xvciA6IzNhM2EzYTtcclxuICAkY29sb3I6I2JkYmRiZDtcclxuICAkaGVhZGVyLW1lbnUtY29sb3IgOiM2YzdiODg7XHJcbiAgJGhvdmVyLWNvbG9yOiNmZmZmZmY7XHJcbiAgJHNoYWRvdy1jb2xvcjojMTMxMjEyO1xyXG4gICRiZy1zY3JvbGxiYXIgOiM2MzYzNjM7XHJcbiAgXHJcbiAgLy8gY29sb3JzIHdpdGggYmFja2dvdW5kIGltYWdlXHJcbiAgJGltZy1iZy1zaWRlYmFyLXdyYXBwZXIgOiByZ2JhKDI5LCAyOSwgMjksIDAuOCk7XHJcbiAgJGltZy1ib3JkZXItY29sb3IgOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XHJcbiAgJGltZy1iZy1mb290ZXIgOnJnYmEoNDMsIDQzLCA0MywgMC41KTtcclxuICAkaW1nLXNoYWRvdy1jb2xvcjpyZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgLnNpZGViYXIge1xyXG4gIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJnLXNpZGViYXItd3JhcHBlcjtcclxuICBcclxuICAgIC5zaWRlYmFyLXByb2ZpbGUsXHJcbiAgICAuc2lkZWJhci1zZWFyY2gsXHJcbiAgICAuc2lkZWJhci1tZW51IHtcclxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXItY29sb3I7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggaW5wdXQuc2VhcmNoLW1lbnUsXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgICBib3JkZXItY29sb3I6ICRib3JkZXItY29sb3I7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuc2lkZWJhci1wcm9maWxlIC51c2VyLWluZm8gLnVzZXItcm9sZSxcclxuICAgIC5zaWRlYmFyLXByb2ZpbGUgLnVzZXItaW5mbyAudXNlci1zdGF0dXMsXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggaW5wdXQuc2VhcmNoLW1lbnUsXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggLmlucHV0LWdyb3VwLXRleHQsXHJcbiAgICAuc2lkZWJhci1oZWFkZXI+YSxcclxuICAgIC5zaWRlYmFyLW1lbnUgdWwgbGkgYSxcclxuICAgIC5zaWRlYmFyLWZvb3Rlcj5kaXY+YSxcclxuICAgICNjbG9zZS1zaWRlYmFyIHtcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICBcclxuICAgIC5zaWRlYmFyLW1lbnUgdWwgbGk6aG92ZXI+YSxcclxuICAgIC5zaWRlYmFyLW1lbnUgLnNpZGViYXItZHJvcGRvd24uYWN0aXZlPmEsXHJcbiAgICAuc2lkZWJhci1wcm9maWxlIC51c2VyLWluZm8sXHJcbiAgICAuc2lkZWJhci1oZWFkZXI+YTpob3ZlcixcclxuICAgIC5zaWRlYmFyLWZvb3Rlcj5kaXY+YTpob3ZlciBpLFxyXG4gICAgI2Nsb3NlLXNpZGViYXI6aG92ZXIge1xyXG4gICAgICBjb2xvcjogJGhvdmVyLWNvbG9yO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgdWwgbGk6aG92ZXIgYSBpLFxyXG4gICAgLnNpZGViYXItZHJvcGRvd24gLnNpZGViYXItc3VibWVudSBsaSBhOmhvdmVyOmJlZm9yZSxcclxuICAgIC5zaWRlYmFyLXNlYXJjaCBpbnB1dC5zZWFyY2gtbWVudTpmb2N1cytzcGFuLFxyXG4gICAgLnNpZGViYXItbWVudSAuc2lkZWJhci1kcm9wZG93bi5hY3RpdmUgYSBpIHtcclxuICAgICAgY29sb3I6ICRob3Zlci1jb2xvcjtcclxuICAgIH1cclxuICBcclxuICAgIC5zaWRlYmFyLW1lbnUgdWwgbGkgYSBpLFxyXG4gICAgLnNpZGViYXItbWVudSAuc2lkZWJhci1kcm9wZG93biBkaXYsXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggaW5wdXQuc2VhcmNoLW1lbnUsXHJcbiAgICAuc2lkZWJhci1zZWFyY2ggLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9yZGVyLWNvbG9yO1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAxcHg7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuc2lkZWJhci1tZW51IC5oZWFkZXItbWVudSBzcGFuIHtcclxuICAgICAgY29sb3I6ICRoZWFkZXItbWVudS1jb2xvcjtcclxuICAgIH1cclxuICBcclxuICAgIC5zaWRlYmFyLWZvb3RlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRib3JkZXItY29sb3I7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAtMXB4IDVweCAkc2hhZG93LWNvbG9yO1xyXG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGZvb3Rlci10b3AtYm9yZGVyLWNvbG9yO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLnNpZGViYXItZm9vdGVyPmRpdjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLnNpZGViYXItZm9vdGVyPmRpdjpsYXN0LWNoaWxkIHtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLy8gc3R5bGVzIHdpdGggYmFja2dyb3VuZCBpbWFnZVxyXG4gICAgJi5zaWRlYmFyLWJnIHtcclxuICBcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL2JnMS5qcGcpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgXHJcbiAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRpbWctYmctc2lkZWJhci13cmFwcGVyO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5zaWRlYmFyLXByb2ZpbGUsXHJcbiAgICAgIC5zaWRlYmFyLXNlYXJjaCxcclxuICAgICAgLnNpZGViYXItbWVudSB7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRpbWctYm9yZGVyLWNvbG9yO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5zaWRlYmFyLXNlYXJjaCBpbnB1dC5zZWFyY2gtbWVudSxcclxuICAgICAgLnNpZGViYXItc2VhcmNoIC5pbnB1dC1ncm91cC10ZXh0IHtcclxuICAgICAgICBib3JkZXItY29sb3I6ICRpbWctYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLnNpZGViYXItbWVudSB1bCBsaSBhIGksXHJcbiAgICAgIC5zaWRlYmFyLW1lbnUgLnNpZGViYXItZHJvcGRvd24gZGl2LFxyXG4gICAgICAuc2lkZWJhci1zZWFyY2ggaW5wdXQuc2VhcmNoLW1lbnUsXHJcbiAgICAgIC5zaWRlYmFyLXNlYXJjaCAuaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGltZy1ib3JkZXItY29sb3I7XHJcbiAgXHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLnNpZGViYXItZm9vdGVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaW1nLWJnLWZvb3RlcjtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggLTFweCA1cHggJGltZy1iZy1mb290ZXI7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRpbWctYm9yZGVyLWNvbG9yO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICB9XHJcbiAgXHJcbiAgfSJdfQ== */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { IdeiaService } from './_services/Cadastros/Ideias/ideia.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Ideia } from './_models/Cadastros/Ideias/ideia';\nimport * as moment from 'moment';\nimport { SocketService } from './_services/WebSocket/Socket.service';\nimport { PermissaoService } from './_services/Permissoes/permissao.service';\nimport { Notificacao } from './_models/Notificacoes/notificacao';\nimport { NotificacaoService } from './_services/Notificacoes/notificacao.service';\nimport { AuthService } from './_services/Cadastros/Login/auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from './_services/Cadastros/Uteis/data.service';\nimport { Permissao } from './_models/Permissoes/permissao';\nimport { SidebarService } from './sidebar/sidebar.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('slide', [\n      state('up', style({ height: 0 })),\n      state('down', style({ height: '*' })),\n      transition('up <=> down', animate(200))\n    ])\n  ]\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n  title = 'VirtualWeb';\n  ideia: Ideia;\n  cadastroIdeiaForm: FormGroup;\n  notificacoes: Notificacao[];\n  qtdNotificacoes: number;\n  statusLogIn = false;\n  idUsuario: number;\n  paginaNotificacaoAtual = 1;\n  logou = false;\n  sidebar = 'sidebar-open';\n\n  menus = [];\n\n  permissoes = [\n    {\n      component: 'Movimentos',\n      listar: false\n    },\n    {\n      component: 'Autorizações',\n      listar: false\n    },\n    {\n      component: 'Permissões',\n      listar: false\n    },\n    {\n      component: 'Venda',\n      listar: false\n    },\n    {\n      component: 'Relatórios Venda',\n      listar: false\n    },\n    {\n      component: 'Clientes',\n      listar: false\n    },\n    {\n      component: 'Minhas Empresas',\n      listar: false\n    },\n    {\n      component: 'Produtos',\n      listar: false\n    },\n    {\n      component: 'Pessoas',\n      listar: false\n    },\n    {\n      component: 'Plano de Contas',\n      listar: false\n    },\n    {\n      component: 'Centro de Receita',\n      listar: false\n    },\n    {\n      component: 'Centro de Despesa',\n      listar: false\n    },\n    {\n      component: 'Plano de Pagamento',\n      listar: false\n    },\n    {\n      component: 'Forma de Pagamento',\n      listar: false\n    },\n    {\n      component: 'Financeiro',\n      listar: false\n    },\n    {\n      component: 'Recebimentos',\n      listar: false\n    },\n    {\n      component: 'Pagamentos',\n      listar: false\n    },\n    {\n      component: 'Lançamentos',\n      listar: false\n    },\n    {\n      component: 'Relatórios Lançamentos',\n      listar: false\n    },\n    {\n      component: 'Cheques Pré-Datado',\n      listar: false\n    },\n  ];\n\n  constructor(private ideiaService: IdeiaService,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private socketService: SocketService,\n              private permissaoService: PermissaoService,\n              private notificacaoService: NotificacaoService,\n              private authService: AuthService,\n              private router: Router,\n              public dataService: DataService,\n              private sidebarService: SidebarService) {\n    this.localeService.use('pt-br');\n    this.menus = sidebarService.getMenuList();\n  }\n\n  ngOnInit() {\n\n    if (!('Notification' in window)) {\n      alert('This browser does not support system notifications');\n    } else if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n    this.validation();\n    this.idUsuario = this.permissaoService.getUsuarioId();\n    if (this.idUsuario && this.verificarLogIn()) {\n      this.getSocket('NotificacaoUsuarioRetorno');\n      this.getSocket('AutorizacaoVendaGerarPedido');\n      this.getSocket('RespAutorizacaoVendaGerarPedido');\n      this.getSocket('NovaObservacao');\n      this.getNotificacoes();\n    }\n  }\n\n  getSideBarState() {\n    return this.sidebarService.getSidebarState();\n  }\n\n  toggle(currentMenu) {\n    if (currentMenu.type === 'dropdown') {\n      this.menus.forEach(element => {\n        if (element === currentMenu) {\n          currentMenu.active = !currentMenu.active;\n        } else {\n          element.active = false;\n        }\n      });\n    }\n  }\n\n  getState(currentMenu) {\n\n    if (currentMenu.active) {\n      return 'down';\n    } else {\n      return 'up';\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.logou === true) {\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PERMISSOES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Permissões')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Pessoas')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Clientes')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Produtos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE CONTAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Plano de Contas')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE RECEITA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Centro de Receita')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE DESPESA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Centro de Despesa')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE PAGAMENTO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Plano de Pagamento')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('FORMA DE PAGAMENTO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Forma de Pagamento')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('RECEBIMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Recebimentos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('PAGAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Pagamentos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Lançamentos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('RELATÓRIOS LANÇAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        // tslint:disable-next-line:max-line-length\n        this.permissoes.filter(c => c.component === 'Relatórios Lançamentos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Cheques Pré-Datado')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('FINANCEIRO', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Financeiro')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Minhas Empresas')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('AUTORIZACOES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Autorizações')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n        this.permissoes.filter(c => c.component === 'Venda')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n        this.permissoes.filter(c => c.component === 'Movimentos')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('RELATÓRIOS VENDA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n        // tslint:disable-next-line:max-line-length\n        this.permissoes.filter(c => c.component === 'Relatórios Venda')[0].listar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n    }\n  }\n\n  verificarPermissao(component: string) {\n    if (this.permissoes.filter(c => c.component === component).length > 0) {\n      return this.permissoes.filter(c => c.component === component)[0].listar;\n    } else {\n      return true;\n    }\n  }\n\n  alterarSidebar() {\n    if (this.sidebar === '') {\n      this.sidebar = 'sidebar-open';\n    } else {\n      this.sidebar = '';\n    }\n  }\n\n  verificarLogIn() {\n    if (this.authService.loggerIn()) {\n      if (this.logou === false) {\n        this.logou = true;\n        this.sidebar = 'sidebar-open';\n        this.ngAfterViewInit();\n      }\n      return true;\n    } else {\n      this.sidebar = 'sidebar-collapse';\n      this.logou = false;\n      return false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out.');\n    this.router.navigate(['/usuarios/login']);\n  }\n\n  usuarioNome() {\n    return this.permissaoService.getUsuario();\n  }\n\n  usuarioId() {\n    return this.permissaoService.getUsuarioId();\n  }\n\n  getQtdNotificacoes() {\n    if (this.notificacoes) {\n      return this.notificacoes.filter(c => c.visto === 0).length;\n    } else {\n      return 0;\n    }\n  }\n\n  getDiferencaDataHora(dataHora: any) {\n    return this.dataService.calculaDiferencaDataHora(this.dataService.getDataPTBR(dataHora));\n  }\n\n  setarVistoNotificacao(notificacao: any) {\n    this.notificacaoService.editarVistoNotificacao(notificacao).subscribe(\n      () => {\n        this.getNotificacoes();\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar setar notificacoes: ${error}`);\n    });\n  }\n\n  getNotificacoes() {\n    this.notificacaoService.getAllNotificacoesByUsuarioId(this.idUsuario).subscribe(\n      (_NOTIFICACOES: Notificacao[]) => {\n      this.notificacoes = _NOTIFICACOES;\n      this.qtdNotificacoes = _NOTIFICACOES.length;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar notificacoes: ${error}`);\n    });\n  }\n\n  getSocket(evento: string) {\n    this.socketService.getSocket(evento).subscribe((data: any) => {\n      console.log(data);\n      if (data) {\n        if (evento === 'NovaObservacao') {\n          const  notification = new Notification(`Olá, ${this.permissaoService.getUsuario()} !`, {\n            body: `O usuário ${data.usuario} adicionou\\numa nova observação no Retorno ${data.retornoId}.`\n          });\n        } else if (evento === 'NotificacaoUsuarioRetorno') {\n          if (Number(data) === Number(this.idUsuario)) {\n            const  notification = new Notification(`Retorno Específico!`, {\n              body: 'Foi adicionado um Novo Retorno específico para você!'\n            });\n            this.getNotificacoes();\n          }\n        } else if (evento === 'AutorizacaoVendaGerarPedido') {\n          if (Number(data) === Number(this.idUsuario)) {\n            const  notification = new Notification(`Autorização Pedido de Venda!`, {\n              body: 'Um novo Pedido de Venda precisa ser Autorizado!'\n            });\n            this.getNotificacoes();\n          }\n        } else if (evento === 'RespAutorizacaoVendaGerarPedido') {\n          if (Number(data.solicitanteId) === Number(this.idUsuario)) {\n            const  notification = new Notification(`Resposta Autorização Pedido de Venda!`, {\n              body: (data.autorizado === 1) ? `Seu pedido de Venda foi autorizado pelo Usuário: ${data.autorizadorNome}.` :\n                                              `Seu pedido de Venda foi negado pelo Usuário: ${data.autorizadorNome}.`\n            });\n            this.getNotificacoes();\n          }\n        }\n      }\n    });\n  }\n\n  validation() {\n    this.cadastroIdeiaForm = this.fb.group({\n        id:  [''],\n        usuarioId: [''],\n        ideia: ['', Validators.required],\n        dataCadastro: [''],\n        status: ['']\n    });\n  }\n\n  cadastrarIdeia(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.ideia = Object.assign(this.cadastroIdeiaForm.value, {id: 0, usuarioId: this.permissaoService.getUsuarioId(),\n       dataCadastro: dataAtual, status: 'EM ANALISE'});\n    this.ideiaService.novaIdeia(this.ideia).subscribe(\n      () => {\n        this.toastr.success('Ideia enviada com Sucesso!');\n        template.hide();\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ModalModule, TooltipModule, BsDropdownModule, BsDatepickerModule, TabsModule  } from 'ngx-bootstrap';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgxCurrencyModule } from 'ngx-currency';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { NgDatepickerModule } from 'ng2-datepicker';\nimport { ChartsModule } from 'ng2-charts';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport {MatDialogModule} from '@angular/material';\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n\nimport { AppComponent } from './app.component';\n\nimport { UsuarioComponent } from './cadastros/usuario/usuario.component';\nimport { LoginComponent } from './cadastros/usuario/login/login.component';\nimport { EditarUsuarioComponent } from './cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { NovoUsuarioComponent } from './cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { EditarSenhaUsuarioComponent } from './cadastros/usuario/editarSenhaUsuario/editarSenhaUsuario.component';\n\nimport { ClienteComponent } from './cadastros/cliente/cliente.component';\nimport { NovoClienteComponent } from './cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarClienteComponent } from './cadastros/cliente/editarCliente/editarCliente.component';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { AtendimentoComponent } from './atendimento/atendimento.component';\nimport { RetornoComponent } from './atendimento/retorno/retorno.component';\nimport { NovoRetornoComponent } from './atendimento/retorno/novoRetorno/novoRetorno.component';\nimport { EditarRetornoComponent } from './atendimento/retorno/editarRetorno/editarRetorno.component';\n\nimport { VendaComponent } from './movimentos/venda/venda.component';\nimport { NovoVendaComponent } from './movimentos/venda/novoVenda/novoVenda.component';\nimport { EditarVendaComponent } from './movimentos/venda/editarVenda/editarVenda.component';\nimport { ResumoVendaComponent } from './movimentos/venda/editarVenda/resumoVenda/resumoVenda.component';\nimport { PagamentosVendaComponent } from './movimentos/venda/editarVenda/pagamentosVenda/pagamentosVenda.component';\nimport { RecebimentosVendaComponent } from './movimentos/venda/editarVenda/recebimentosVenda/recebimentosVenda.component';\nimport { ConfigVendaComponent } from './movimentos/venda/configVenda/configVenda.component';\nimport { RelatorioVendaComponent } from './movimentos/venda/relatorioVenda/relatorioVenda.component';\n\nimport { ProdutoComponent } from './cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from './cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from './cadastros/produto/editarProduto/editarProduto.component';\n\nimport { PlanoContaComponent } from './cadastros/planoConta/planoConta.component';\n\nimport { CentroDespesaComponent } from './cadastros/centroDespesa/centroDespesa.component';\nimport { CentroReceitaComponent } from './cadastros/centroReceita/centroReceita.component';\n\nimport { FormaPagamentoComponent } from './cadastros/formaPagamento/formaPagamento.component';\nimport { PlanoPagamentoComponent } from './cadastros/planoPagamento/planoPagamento.component';\n\nimport { PessoaComponent } from './cadastros/pessoa/pessoa.component';\nimport { NovoPessoaComponent } from './cadastros/pessoa/novoPessoa/novoPessoa.component';\nimport { EditarPessoaComponent } from './cadastros/pessoa/editarPessoa/editarPessoa.component';\n\nimport { RecebimentoComponent } from './financeiro/recebimento/recebimento.component';\nimport { DetalharRecebimentoComponent } from './financeiro/recebimento/detalharRecebimento/detalharRecebimento.component';\nimport { TemplateRecebimentoComponent } from './financeiro/recebimento/templateRecebimento/templateRecebimento.component';\n\nimport { PagamentoComponent } from './financeiro/pagamento/pagamento.component';\nimport { TemplatePagamentoComponent } from './financeiro/pagamento/templatePagamento/templatePagamento.component';\nimport { DetalharPagamentoComponent } from './financeiro/pagamento/detalharPagamento/detalharPagamento.component';\n\nimport { LancamentoComponent } from './financeiro/lancamento/lancamento.component';\nimport { LancamentoTemplateComponent } from './financeiro/lancamento/lancamentoTemplate/lancamentoTemplate.component';\nimport { RelatorioLancamentoComponent } from './financeiro/lancamento/relatorioLancamento/relatorioLancamento.component';\n\nimport { ChequePreComponent } from './cadastros/chequePre/chequePre.component';\nimport { ChequePreTemplateComponent } from './cadastros/chequePre/chequePreTemplate/chequePreTemplate.component';\n\nimport { PermissaoComponent } from './permissao/permissao.component';\n\nimport { EmpresaComponent } from './cadastros/empresa/empresa.component';\nimport { EmpresaTemplateComponent } from './cadastros/empresa/empresaTemplate/empresaTemplate.component';\n\nimport { AutorizacaoComponent } from './autorizacao/autorizacao.component';\nimport { AutorizacaoTemplateComponent } from './autorizacao/autorizacaoTemplate/autorizacaoTemplate.component';\n\nimport { CnpjCpfPipe } from './pipes/cnpjCpf.pipe';\nimport { CelularPipe } from './pipes/celular.pipe';\nimport { CepPipe } from './pipes/cep.pipe';\nimport { IePipe } from './pipes/ie.pipe';\n\nimport { LOCALE_ID } from '@angular/core';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from '@angular/common';\n\nimport { APP_BASE_HREF } from '@angular/common';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ClienteService } from './_services/Cadastros/Clientes/cliente.service';\nimport { SocketService } from './_services/WebSocket/Socket.service';\n\nconst config: SocketIoConfig = { url: location.protocol + '//' + location.hostname + '', options: {}  };\nregisterLocaleData(localePt, LOCALE_ID);\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      UsuarioComponent,\n      LoginComponent,\n      NovoUsuarioComponent,\n      EditarUsuarioComponent,\n      EditarSenhaUsuarioComponent,\n      DashboardComponent,\n      ClienteComponent,\n      NovoClienteComponent,\n      EditarClienteComponent,\n      AtendimentoComponent,\n      RetornoComponent,\n      NovoRetornoComponent,\n      EditarRetornoComponent,\n      PermissaoComponent,\n      VendaComponent,\n      NovoVendaComponent,\n      EditarVendaComponent,\n      ResumoVendaComponent,\n      ConfigVendaComponent,\n      RelatorioVendaComponent,\n      PagamentosVendaComponent,\n      RecebimentosVendaComponent,\n      ProdutoComponent,\n      NovoProdutoComponent,\n      EditarProdutoComponent,\n      PessoaComponent,\n      NovoPessoaComponent,\n      EditarPessoaComponent,\n      PlanoContaComponent,\n      CentroDespesaComponent,\n      CentroReceitaComponent,\n      FormaPagamentoComponent,\n      PlanoPagamentoComponent,\n      RecebimentoComponent,\n      DetalharRecebimentoComponent,\n      TemplateRecebimentoComponent,\n      PagamentoComponent,\n      TemplatePagamentoComponent,\n      DetalharPagamentoComponent,\n      LancamentoComponent,\n      LancamentoTemplateComponent,\n      RelatorioLancamentoComponent,\n      ChequePreComponent,\n      ChequePreTemplateComponent,\n      EmpresaComponent,\n      EmpresaTemplateComponent,\n      AutorizacaoComponent,\n      AutorizacaoTemplateComponent,\n      CnpjCpfPipe,\n      CelularPipe,\n      CepPipe,\n      IePipe\n   ],\n   imports: [\n      BrowserAnimationsModule,\n      BrowserModule,\n      MatDialogModule,\n      NoopAnimationsModule,\n      SocketIoModule.forRoot(config),\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      TabsModule.forRoot(),\n      ModalModule.forRoot(),\n      NgxMaskModule.forRoot(),\n      NgDatepickerModule,\n      ChartsModule,\n      PerfectScrollbarModule,\n      NgxPaginationModule,\n      NgxCurrencyModule,\n      NgSelectModule,\n      ToastrModule.forRoot(),\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n   ],\n   providers: [\n      {\n         provide: LOCALE_ID,\n         useValue: 'pt-BR'\n      },\n      {\n         provide: APP_BASE_HREF,\n          useValue: '/'\n      },\n      {\n         provide: PERFECT_SCROLLBAR_CONFIG,\n         useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n      },\n      ClienteService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      },\n      SocketService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  atendimento works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-atendimento',\n  templateUrl: './atendimento.component.html'\n})\nexport class AtendimentoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-3\\\">\\n  <div class=\\\"container d-flex col-xs-8\\\">\\n    <h3>Editar Retorno</h3>&nbsp;\\n  </div>\\n</div>\\n\\n<form [formGroup]=\\\"cadastroForm\\\" class=\\\" mt-3\\\">\\n  <div class=\\\"col-md-12 mt-3\\\">\\n      <div class=\\\"form-row mt-4\\\">\\n\\n          <div class=\\\"form-group col-md-3\\\">\\n              <label>Cliente:(*)</label>\\n              <ng-select [items]=\\\"clientes\\\" bindLabel=\\\"codSiga - nomeFantasia\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clienteId\\\">\\n              </ng-select>\\n          </div>\\n\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Nome do Solicitante:(*)</label>\\n          <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"contatoNome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('contatoNome').errors && \\n                                          cadastroForm.get('contatoNome').touched}\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('contatoNome').hasError('required') &&cadastroForm.get('contatoNome').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo Obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n            <label>Telefone:(*)</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                     cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n              (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n  \\n            <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo é obrigatório.\\n            </div>\\n          </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Prioridade:</label>\\n          <ng-select [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"prioridadeSelecionado\\\"\\n            formControlName=\\\"prioridade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"form-group  offset-md-10 mt-3\\\">\\n  <button class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\">Salvar Alterações</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editar-retorno',\n  templateUrl: './editarRetorno.component.html'\n})\nexport class EditarRetornoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  retorno: Retorno;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n  prioridadeSelecionado: string;\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  valueTelefonePipe = '';\n\n  dataHoraAtual: string;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private clienteServices: ClienteService,\n              private retornoServices: RetornoService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  salvarAlteracoes() {\n\n  }\n\n}\n","module.exports = \"<h2>Retorno</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Cliente:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clienteId\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Nome do Solicitante:(*)</label>\\n          <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n            type=\\\"text\\\" formControlName=\\\"contatoNome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('contatoNome').errors && \\n                                          cadastroForm.get('contatoNome').touched}\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('contatoNome').hasError('required') &&cadastroForm.get('contatoNome').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo Obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Telefone:(*)</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                     cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n            (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n          <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n            class=\\\"invalid-feedback\\\">\\n            Campo é obrigatório.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Atendente:</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"usuarios\\\" bindLabel=\\\"userName\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"usuarioIdSelecionado\\\" formControlName=\\\"usuarioId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label>Prioridade:</label>\\n          <ng-select [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"prioridadeSelecionado\\\"\\n            formControlName=\\\"prioridade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row \\\">\\n        <div class=\\\"form-group col-md-7\\\">\\n          <label>Observação</label>\\n          <textarea class=\\\"form-control\\\" formControlName=\\\"observacao\\\" [(ngModel)]=\\\"observacaoTexto\\\" rows=\\\"2\\\"></textarea>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n  </div>\\n\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarRetorno()\\\"\\n  tooltip=\\\"Novo Retorno\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport * as moment from 'moment';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { NotificacaoService } from 'src/app/_services/Notificacoes/notificacao.service';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-retorno',\n  templateUrl: './novoRetorno.component.html'\n\n})\nexport class NovoRetornoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  retorno: Retorno;\n  retornoObservacao: RetornoObservacao;\n  _observacao = '';\n  notificacao: Notificacao;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n  prioridadeSelecionado = 'NORMAL';\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  usuarios: Usuario[];\n  usuarioIdSelecionado: any;\n\n  valueTelefonePipe = '';\n\n  dataHoraAtual = new Date();\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private clienteService: ClienteService,\n              private usuarioService: UsuarioService,\n              private retornoService: RetornoService,\n              private notificacaoService: NotificacaoService,\n              private router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              private socketService: SocketService,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getClientes();\n    this.getUsuarios();\n    this.validarForm();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  get observacaoTexto(): string {\n    return this._observacao;\n  }\n\n  set observacaoTexto(value: string) {\n    this._observacao = value;\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clienteId: ['', Validators.required],\n        contatoNome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        prioridade: ['', Validators.required],\n        usuarioId: ['', Validators.required],\n        dataHora: [''],\n        status: [''],\n        observacao: ['']\n    });\n  }\n\n  getUsuarios() {\n    this.usuarioService.getAllUsuario().subscribe(\n      (_USUARIOS: Usuario[]) => {\n      this.usuarios = _USUARIOS;\n      this.usuarios.push(Object.assign({ id: 0, userName: 'TODOS'}));\n      this.usuarioIdSelecionado = 0;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar usuarios: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status === 'ATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  cadastrarRetorno() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroForm.valid) {\n      this.retorno = Object.assign(this.cadastroForm.value, {id: 0, status: 'AGUARDANDO', dataHora: dataAtual});\n\n      this.retornoService.novoRetorno(this.retorno).subscribe(\n        () => {\n\n          this.retornoService.getIdUltimoRetorno().subscribe((ultimoId: number) => {\n            if (this._observacao !== '') {\n              this.retornoObservacao = Object.assign({id: 0, retornoId: ultimoId,\n              usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, observacao: this._observacao});\n              this.retornoService.novaObservacao(this.retornoObservacao).subscribe();\n            }\n\n            const retornoLog = Object.assign({ id: 0, retornoId: ultimoId,\n              usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: 'AGUARDANDO'});\n\n            this.retornoService.novoLog(retornoLog).subscribe(\n              () => {\n                this.toastr.success(`Retorno Finalizado!`);\n                this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n              }, error => {\n                this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n                console.log(error.error);\n              });\n          });\n\n          if (this.retorno.usuarioId !== 0) {\n            this.notificacao = Object.assign({usuarioId: this.retorno.usuarioId, dataHora: dataAtual, tipo: 'Retorno', visto: 0});\n            this.notificacaoService.novaNotificacao(this.notificacao).subscribe(\n              () => {\n                this.socketService.sendSocket('NotificacaoUsuarioRetorno', this.retorno.usuarioId);\n                this.toastr.success('Cadastrado com sucesso!');\n                this.router.navigate([`/atendimentos/retornos`]);\n              });\n          } else {\n            this.toastr.success('Cadastrado com sucesso!');\n            this.router.navigate([`/atendimentos/retornos`]);\n          }\n\n          this.socketService.sendSocket('NovoRetorno', 'true');\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n\n}\n","module.exports = \"<h2>Retornos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CLIENTE'\\\" class=\\\"form-group col-md-4\\\">\\n        <label>Selecione o Cliente:</label>\\n        <ng-select name=\\\"filtroNome\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n          [(ngModel)]=\\\"filtroLista\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'DATA'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Selecione a Data:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataFiltro\\\" (bsValueChange)=\\\"setDataFiltro($event)\\\"\\n          bsDaterangepicker />\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'PRIORIDADE'\\\" class=\\\"form-group col-md-2\\\">\\n        <label>Selecione a Prioridade:</label>\\n        <ng-select name=\\\"filtroPrioridade\\\" [clearable]=\\\"false\\\" [items]=\\\"prioridades\\\" [(ngModel)]=\\\"filtroLista\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a [routerLink]=\\\"['novo']\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Retorno\\n        </a>\\n      </div>\\n    </div>\\n    <label>Atualizado às: {{horaUltimaAtt}}</label>\\n\\n\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Cliente</th>\\n          <th style=\\\"text-align: center;\\\">Prioridade</th>\\n          <th style=\\\"text-align: center;\\\">Status</th>\\n          <th>Data/Hora</th>\\n          <th>Atendente</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"retornos && retornos.length\\\">\\n        <tr\\n          *ngFor=\\\"let retorno of retornosFiltrados | paginate: { itemsPerPage: 25, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ retorno.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">({{retorno.cliente.codSiga}}) - {{ retorno.cliente.nomeFantasia }}</td>\\n          <td style=\\\"text-align: center;\\\">\\n            <button *ngIf=\\\"retorno.prioridade == 'NORMAL'\\\" type=\\\"button\\\" disabled class=\\\"btn btn-dark btn-sm\\\"><i\\n                class=\\\"fa fa-history\\\"></i></button>\\n            <button *ngIf=\\\"retorno.prioridade == 'URGENTE'\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"><i\\n                class=\\\"fa fa-exclamation-triangle\\\"></i></button>\\n          </td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <button *ngIf=\\\"retorno.status == 'AGUARDANDO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-warning btn-sm\\\">AGUARDANDO</button>\\n\\n            <button *ngIf=\\\"retorno.status == 'FINALIZADO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-danger btn-sm\\\">FINALIZADO</button>\\n\\n            <button style=\\\"white-space: nowrap;\\\" *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" disabled\\n              class=\\\"btn btn-info btn-sm\\\">EM ANDAMENTO</button>\\n          </td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ retorno.dataHora | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ retorno.usuarioId ? retorno.usuario.userName : 'TODOS'}}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n\\n              <button *ngIf=\\\"retorno.status == 'AGUARDANDO'\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n                (click)=\\\"alterarStatus(retorno)\\\" tooltip=\\\"Ligar\\\">\\n                <i class=\\\"fa fa-phone\\\"></i>\\n              </button>\\n\\n              <button *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\n                (click)=\\\"alterarStatus(retorno)\\\" tooltip=\\\"Não Atendeu\\\">\\n                <i class=\\\"fa fa-ban\\\"></i>\\n              </button>\\n              <button *ngIf=\\\"retorno.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\n                (click)=\\\"finalizarRetorno(retorno)\\\" tooltip=\\\"Finalizar\\\">\\n                <i class=\\\"fa fa-check\\\"></i>\\n              </button>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"retornoLog(retorno.id,templateLog)\\\" tooltip=\\\"Log(s)\\\">\\n                <i class=\\\"fa fa-file-alt \\\"></i>\\n              </button>\\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-dark\\\"\\n                (click)=\\\"getRetornoInformacoes(retorno.id, retorno.telefone, retorno.contatoNome,templateInformacoes)\\\"\\n                tooltip=\\\"Informações\\\">\\n                <i class=\\\"fa fa-info\\\"></i>\\n              </button>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n\\n\\n\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!retornos\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum retorno encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n\\n\\n    <div bsModal #templateLog=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n      aria-labelledby=\\\"dialog-sizes-name1\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n              Log(s) do Retorno\\n            </h4>\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateLog.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n\\n          <div class=\\\"modal-body\\\">\\n            <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th>Usuario</th>\\n                  <th>Data/Hora</th>\\n                  <th>Status</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"logRetorno && logRetorno.length\\\">\\n                <tr *ngFor=\\\"let log of logRetorno;\\\">\\n                  <td style=\\\"white-space: nowrap;\\\">{{ log.usuario.userName }}</td>\\n                  <td style=\\\"white-space: nowrap;\\\">{{ log.dataHora  | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <button *ngIf=\\\"log.status == 'AGUARDANDO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-warning\\\">AGUARDANDO</button>\\n\\n                    <button *ngIf=\\\"log.status == 'FINALIZADO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-danger\\\">FINALIZADO</button>\\n\\n                    <button style=\\\"white-space: nowrap;\\\" *ngIf=\\\"log.status == 'EM ANDAMENTO'\\\" type=\\\"button\\\" disabled\\n                      class=\\\"btn btn-info\\\">EM ANDAMENTO</button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n\\n              <tfoot *ngIf=\\\"!logRetorno\\\">\\n                <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n                <h4>\\n                  Nenhum Log encontrado!\\n                </h4>\\n              </tfoot>\\n            </table>\\n          </div>\\n          <div class=\\\"modal-footer d-flex\\\">\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateLog.hide()\\\">\\n              Fechar\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div bsModal #templateInformacoes=\\\"bs-modal\\\" class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog  modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n            Observações do Retorno\\n          </h4>\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateInformacoes.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Telefone:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" name=\\\"retornoTel\\\"\\n                [ngModel]=\\\"retornoTelefone | celularPipePipe\\\" (ngModelChange)=\\\"retornoTelefone=$event\\\" />\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Solicitante:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"retornoSol\\\" [(ngModel)]=\\\"retornoSolicitante\\\" />\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <form [formGroup]=\\\"cadastroObservacaoForm\\\">\\n                <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n                <label>Observação:(*)</label>\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" formControlName=\\\"observacao\\\"\\n                    oninput=\\\"this.value = this.value.toUpperCase()\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                    class=\\\"form-control\\\" name=\\\"nome\\\"\\n                    [ngClass]=\\\"{'is-invalid':cadastroObservacaoForm.get('observacao').errors &&cadastroObservacaoForm.get('observacao').touched}\\\" />\\n                  <span class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!cadastroObservacaoForm.valid\\\"\\n                      (click)=\\\"novaObservacao()\\\" tooltip=\\\"Nova Observação\\\">\\n                      <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                  </span>\\n                </div>\\n                <div\\n                  *ngIf=\\\"cadastroObservacaoForm.get('observacao').hasError('required') && cadastroObservacaoForm.get('observacao').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Campo obrigatório.\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n\\n        <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th>Usuário</th>\\n              <th>Data/Hora</th>\\n              <th>Observação</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"retornoObservacoes && retornoObservacoes.length\\\">\\n            <tr *ngFor=\\\"let observacao of retornoObservacoes;\\\">\\n              <td style=\\\"white-space: nowrap;\\\">{{ observacao.usuario.userName }}</td>\\n              <td style=\\\"white-space: nowrap;\\\">{{ observacao.dataHora  | date:'dd/MM/yyyy HH:mm:ss'}}</td>\\n              <td style=\\\"text-align: center;\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <textarea class=\\\"form-control\\\" rows=\\\"1\\\">{{observacao.observacao}}</textarea>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n\\n          <tfoot *ngIf=\\\"!retornoObservacoes\\\">\\n            <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n            <h4>\\n              Nenhuma observação encontrada!\\n            </h4>\\n          </tfoot>\\n        </table>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateInformacoes.hide()\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Retorno } from 'src/app/_models/Atendimentos/Retornos/retorno';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { BsLocaleService, ModalDirective } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { RetornoService } from 'src/app/_services/Atendimentos/Retornos/retorno.service';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { RetornoLog } from 'src/app/_models/Atendimentos/Retornos/retornoLog';\nimport * as moment from 'moment';\nimport { Subscription, interval } from 'rxjs';\nimport { RetornoObservacao } from 'src/app/_models/Atendimentos/Retornos/retornoObservacao';\nimport { Time } from '@angular/common';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\n\n@Component({\n  selector: 'app-retorno',\n  templateUrl: './retorno.component.html'\n})\nexport class RetornoComponent implements OnInit {\n\n  cadastroObservacaoForm: FormGroup;\n  observacao: RetornoObservacao;\n  observacaoId: number;\n\n  retornosFiltrados: Retorno[];\n  retornos: Retorno[];\n  retornosNaoFinalizados: Retorno[];\n  retorno: Retorno;\n  logRetorno: RetornoLog[];\n  retornoObservacoes: RetornoObservacao[];\n  retornoTelefone: string;\n  retornoSolicitante: string;\n\n  cadastroForm: FormGroup;\n\n  cliente: Cliente;\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  filtrarPor = ['CLIENTE', 'DATA', 'PRIORIDADE'];\n  filtroSelecionado = 'DATA';\n\n  dataFiltro: any;\n  valueDataFiltro: any;\n\n  prioridades = ['NORMAL', 'URGENTE'];\n\n  status = ['AGUARDANDO', 'EM ANDAMENTO', 'FINALIZADO', 'NÃO FINALIZADOS', 'TODOS'];\n\n  statusFiltroSelecionado = 'NÃO FINALIZADOS';\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  countRetornos: number;\n  private updateSubscription: Subscription;\n\n  dataPeriodo: DataPeriodo;\n\n  horaUltimaAtt: any;\n  constructor(public fb: FormBuilder,\n              private clienteServices: ClienteService,\n              private retornoServices: RetornoService,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private socketService: SocketService,\n              public permissaoService: PermissaoService,\n              private dataService: DataService) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getClientes();\n    this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n    this.getRetornosNaoFinalizados();\n    this.validationObservacao();\n    this.getSocket('NovoRetorno');\n    this.getSocket('StatusRetornoAlterado');\n  }\n\n  getSocket(evento: string) {\n    this.socketService.getSocket(evento).subscribe((data: any) => {\n      if (data === 'true') {\n        this.getRetornosNaoFinalizados();\n\n        if (evento === 'NovoRetorno') {\n          const  notification = new Notification(`Olá, ${this.permissaoService.getUsuario()} !`, {\n            body: 'Novo retorno!'\n          });\n        }\n      }\n    });\n  }\n\n  validationObservacao() {\n    this.cadastroObservacaoForm = this.fb.group({\n        id: [''],\n        observacao: ['', Validators.required]\n    });\n  }\n\n  getClientes() {\n    this.clienteServices.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status === 'ATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  alterarStatus(retorno: any) {\n    let newStatus;\n    if (retorno.status === 'AGUARDANDO') {\n      newStatus = 'EM ANDAMENTO';\n    } else if (retorno.status === 'EM ANDAMENTO') {\n      newStatus = 'AGUARDANDO';\n    }\n\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n\n    this.retorno = Object.assign(retorno, { status: newStatus});\n    const retornoLog = Object.assign({ id: 0, retornoId: retorno.id,\n       usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: newStatus});\n\n    this.retornoServices.editarRetorno(this.retorno).subscribe(\n      () => {\n        this.retornoServices.novoLog(retornoLog).subscribe(\n          () => {\n            this.toastr.success(`Status alterado para: ${newStatus}!`);\n            this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n          }, error => {\n            this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n            console.log(error.error);\n          });\n      }, error => {\n        this.toastr.error(`Erro ao tentar alterar status: ${error.error}`);\n      });\n  }\n\n  finalizarRetorno(retorno: any) {\n    const newStatus = 'FINALIZADO';\n    this.retorno = Object.assign(retorno, { status: newStatus});\n\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n\n    const retornoLog = Object.assign({ id: 0, retornoId: retorno.id,\n       usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual, status: newStatus});\n    this.retornoServices.editarRetorno(this.retorno).subscribe(\n      () => {\n        this.retornoServices.novoLog(retornoLog).subscribe(\n          () => {\n            this.toastr.success(`Retorno Finalizado!`);\n            this.socketService.sendSocket('StatusRetornoAlterado', 'true');\n          }, error => {\n            this.toastr.error(`Erro ao tentar criar log: ${error.error}`);\n            console.log(error.error);\n          });\n      }, error => {\n        this.toastr.error(`Erro ao tentar alterar status: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n\n  getCountLogsAguardando(retornoId: number) {\n    this.retornoServices.getCountLogsAguardandoByRetornoId(retornoId).subscribe(\n      (_COUNT: number) => {\n        if (_COUNT > 0) {\n          return `(${_COUNT})`;\n        } else {\n          return '';\n        }\n    });\n  }\n\n  retornoLog(retornoId: number, template: any) {\n    this.retornoServices.getAllLogsByRetornoId(retornoId).subscribe(\n      (_LOGS: RetornoLog[]) => {\n      this.logRetorno = _LOGS;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar retornoLog: ${error.error}`);\n    });\n    template.show();\n  }\n\n  getRetornoInformacoes(retornoId: number, telefone: string, solicitante: string, template: any) {\n    this.observacaoId = retornoId;\n    this.retornoTelefone = telefone;\n    this.retornoSolicitante = solicitante;\n    this.retornoServices.getAllObservacoesByRetornoId(retornoId).subscribe(\n      (_OBSERVACOES: RetornoObservacao[]) => {\n      this.retornoObservacoes = _OBSERVACOES;\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar observacoes: ${error.error}`);\n    });\n    if (template !== null) {\n      template.show();\n    }\n  }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.retornosFiltrados = this.filtroLista ? this.filtrarRetornos(this.filtroLista) : this.retornos;\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setDataFiltro(valor: Date[]) {\n    this.dataPeriodo = Object.assign(\n      {\n        dataInicial: this.dataService.getDataSQL(valor[0].toLocaleString()) + 'T00:00:00',\n        dataFinal: this.dataService.getDataSQL(valor[1].toLocaleString()) + 'T23:59:00'\n      }\n    );\n    this.getRetornosByPeriodo(this.dataPeriodo);\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    if (valor !== 'NÃO FINALIZADOS') {\n      this.getAllRetornos();\n    } else {\n      this.getRetornosNaoFinalizados();\n    }\n    this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n  }\n\n  compararNumeros(a, b) {\n    return a - b;\n  }\n\n  filtrarRetornos(filtrarPor: any): Retorno[] {\n    if (this.statusFiltroSelecionado !== 'TODOS' && this.statusFiltroSelecionado !== 'NÃO FINALIZADOS') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.retornos;\n    }\n\n    if (this.statusFiltroSelecionado === 'FINALIZADOS') {\n      this.filtroRetorno = this.filtroRetorno.sort(this.compararNumeros);\n    }\n\n    if (this.filtroSelecionado === 'CLIENTE') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.clienteId === filtrarPor);\n    }\n\n    if (this.filtroSelecionado === 'PRIORIDADE') {\n      this.filtroRetorno = this.retornos.filter(_RETORNO => _RETORNO.prioridade === filtrarPor);\n    }\n\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getAllRetornos() {\n      this.retornoServices.getAllRetornos().subscribe(\n        (_RETORNOS: Retorno[]) => {\n        this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n        this.retornos = _RETORNOS;\n        this.countRetornos = _RETORNOS.length;\n        this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n      });\n  }\n\n  getRetornosByPeriodo(datas: DataPeriodo) {\n    this.retornoServices.getRetornosByPeriodo(datas).subscribe(\n      (_RETORNOS: any) => {\n      this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n      this.retornos = _RETORNOS;\n      this.countRetornos = _RETORNOS.length;\n      this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n    });\n}\n\n  getRetornosNaoFinalizados() {\n    this.retornoServices.getRetornosNaoFinalizados().subscribe(\n      (_RETORNOS: Retorno[]) => {\n      this.horaUltimaAtt = moment(new Date(), 'HH:mm:ss').format('HH:mm:ss');\n      this.retornos = _RETORNOS;\n      this.countRetornos = _RETORNOS.length;\n      this.retornosFiltrados = this.filtrarRetornos(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar retornos: ${error.error}`);\n    });\n}\n\n  novaObservacao() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroObservacaoForm.valid) {\n      this.observacao = Object.assign(this.cadastroObservacaoForm.value, {id: 0, retornoId: this.observacaoId,\n      usuarioId: this.permissaoService.getUsuarioId(), dataHora: dataAtual});\n\n      this.retornoServices.novaObservacao(this.observacao).subscribe(\n        () => {\n          this.getRetornoInformacoes(this.observacaoId, this.retornoTelefone, this.retornoSolicitante, null);\n          this.toastr.success('Observação cadastrada com sucesso!');\n          const InfoObs = Object.assign({retornoId: this.observacaoId, usuario: this.permissaoService.getUsuario()});\n          this.socketService.sendSocket('NovaObservacao', InfoObs);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate,  ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { NovoUsuarioComponent } from '../cadastros/usuario/novoUsuario/novoUsuario.component';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\nimport { NovoClienteComponent } from '../cadastros/cliente/novoCliente/novoCliente.component';\nimport { EditarUsuarioComponent } from '../cadastros/usuario/editarUsuario/editarUsuario.component';\nimport { Permissao } from '../_models/Permissoes/permissao';\nimport { EditarClienteComponent } from '../cadastros/cliente/editarCliente/editarCliente.component';\nimport { PermissaoComponent } from '../permissao/permissao.component';\nimport { VendaComponent } from '../movimentos/venda/venda.component';\nimport { EditarVendaComponent } from '../movimentos/venda/editarVenda/editarVenda.component';\nimport { NovoVendaComponent } from '../movimentos/venda/novoVenda/novoVenda.component';\nimport { PessoaComponent } from '../cadastros/pessoa/pessoa.component';\nimport { EditarPessoaComponent } from '../cadastros/pessoa/editarPessoa/editarPessoa.component';\nimport { NovoPessoaComponent } from '../cadastros/pessoa/novoPessoa/novoPessoa.component';\nimport { ProdutoComponent } from '../cadastros/produto/produto.component';\nimport { NovoProdutoComponent } from '../cadastros/produto/novoProduto/novoProduto.component';\nimport { EditarProdutoComponent } from '../cadastros/produto/editarProduto/editarProduto.component';\nimport { PlanoContaComponent } from '../cadastros/planoConta/planoConta.component';\nimport { CentroReceitaComponent } from '../cadastros/centroReceita/centroReceita.component';\nimport { CentroDespesaComponent } from '../cadastros/centroDespesa/centroDespesa.component';\nimport { PlanoPagamentoComponent } from '../cadastros/planoPagamento/planoPagamento.component';\nimport { FormaPagamentoComponent } from '../cadastros/formaPagamento/formaPagamento.component';\nimport { RecebimentoComponent } from '../financeiro/recebimento/recebimento.component';\nimport { PagamentoComponent } from '../financeiro/pagamento/pagamento.component';\nimport { LancamentoComponent } from '../financeiro/lancamento/lancamento.component';\nimport { RelatorioLancamentoComponent } from '../financeiro/lancamento/relatorioLancamento/relatorioLancamento.component';\nimport { ChequePreComponent } from '../cadastros/chequePre/chequePre.component';\nimport { RelatorioVendaComponent } from '../movimentos/venda/relatorioVenda/relatorioVenda.component';\nimport { EmpresaComponent } from '../cadastros/empresa/empresa.component';\nimport { AutorizacaoComponent } from '../autorizacao/autorizacao.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  jwtHelper = new JwtHelperService();\n\n  autorizado = false;\n\n  constructor(private router: Router,\n              private permissaoService: PermissaoService) {}\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\n\n    const token = localStorage.getItem('token');\n    if (token !== null && !this.jwtHelper.isTokenExpired(token) ) {\n      if (next.component === NovoUsuarioComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      } else if (next.component === EditarUsuarioComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n\n      } else if (next.component === NovoClienteComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n\n      } else if (next.component === EditarClienteComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n\n      } else if (next.component === PermissaoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PERMISSOES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarVendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoVendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === VendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === RelatorioVendaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('RELATÓRIOS VENDA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === PessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarPessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoPessoaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === ProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === NovoProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EditarProdutoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === PlanoContaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE CONTAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === CentroReceitaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE RECEITA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === CentroDespesaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE DESPESA', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === PlanoPagamentoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE PAGAMENTO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === FormaPagamentoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('FORMA DE PAGAMENTO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === RecebimentoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('RECEBIMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === PagamentoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('PAGAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === LancamentoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === RelatorioLancamentoComponent) {\n\n        // tslint:disable-next-line:max-line-length\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('RELATÓRIOS LANÇAMENTOS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === ChequePreComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === EmpresaComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      } else if (next.component === AutorizacaoComponent) {\n\n        this.permissaoService.getPermissoesByFormularioAcaoObjeto('AUTORIZACOES', 'LISTAR').subscribe((_PERMISSAO: Permissao) => {\n          this.autorizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n          if (!this.autorizado) {\n              return false;\n            } else {\n              return true;\n            }\n        });\n      }\n\n      return true;\n    } else {\n      this.router.navigate(['/usuarios/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({providedIn: 'root'})\nexport class AuthInterceptor implements HttpInterceptor {\n    jwtHelper = new JwtHelperService();\n\n    constructor(private router: Router) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const token = localStorage.getItem('token');\n        if (token !== null && !this.jwtHelper.isTokenExpired(token)) {\n            const cloneReq = req.clone({\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\n            });\n            return next.handle(cloneReq).pipe(\n                tap(\n                    succ => {},\n                    err => {\n                        if (err.status === 401) {\n                            this.router.navigateByUrl('usuarios/login');\n                        }\n                    }\n                )\n            );\n          } else {\n            this.router.navigate(['/usuarios/login']);\n            return next.handle(req.clone());\n          }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dG9yaXphY2FvL2F1dG9yaXphY2FvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Autorizacões</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Data/Hora Solicitado</th>\\n          <th>Solicitante</th>\\n          <th>Formulário</th>\\n          <th>Ação Solicitada</th>\\n          <th>Autorizador</th>\\n          <th>Data/Hora Autorizado</th>\\n          <th>Autorizado</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"autorizacoes && autorizacoes.length\\\">\\n        <tr\\n          *ngFor=\\\"let autorizacao of autorizacoes | paginate: { itemsPerPage: 30, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ autorizacao.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ autorizacao.dataHoraSolicitado | date:'dd/MM/yyyy HH:mm'}}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ autorizacao.solicitante.nomeCompleto }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ autorizacao.formulario }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ autorizacao.acao }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ (autorizacao.autorizador) ? autorizacao.autorizador.nomeCompleto : ''}}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ autorizacao.dataHoraAutorizado | date:'dd/MM/yyyy HH:mm'}}</td>\\n          <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n              <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"autorizacao.autorizador && autorizacao.autorizado == 0\\\"\\n                class=\\\"label label-danger\\\">NÃO</span>\\n              <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"autorizacao.autorizador && autorizacao.autorizado == 1\\\"\\n                class=\\\"label label-success\\\">SIM</span>\\n              <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"!autorizacao.autorizador && autorizacao.autorizado == 0\\\"\\n                class=\\\"label label-warning\\\">PENDENTE</span>\\n            </td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar\\\" (click)=\\\"abrirTemplateAutorizacao(autorizacao.id)\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!autorizacoes\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum autorizacao encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"autorizacaoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-autorizacao-template [idAutorizacao]=\\\"this.idAutorizacao\\\" *ngIf=\\\"getTemplateAutorizacao() == true\\\"></app-autorizacao-template>\"","import { Component, OnInit } from '@angular/core';\nimport { Autorizacao } from '../_models/Autorizacoes/Autorizacao';\nimport { FormGroup } from '@angular/forms';\nimport { AutorizacaoService } from '../_services/Autorizacoes/autorizacao.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\nimport { Permissao } from '../_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-autorizacao',\n  templateUrl: './autorizacao.component.html',\n  styleUrls: ['./autorizacao.component.css']\n})\nexport class AutorizacaoComponent implements OnInit {\n\n  novo = false;\n  editar = false;\n  visualizar = false;\n\n  autorizacao: Autorizacao;\n  autorizacoes: Autorizacao[];\n\n  modoSalvar = '';\n  cadastroAutorizacao: FormGroup;\n\n  paginaAtual = 1;\n  totalRegistros = 0;\n\n  valueCnpjCpfPipe = '';\n\n  idAutorizacao: number;\n\n  constructor(\n    private autorizacaoService: AutorizacaoService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.autorizacaoService.atualizaAutorizacoes.subscribe(x => {\n        this.getAutorizacoes();\n      });\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getAutorizacoes();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getTemplateAutorizacao() {\n    return this.autorizacaoService.getAutorizacaoTemplateStatus();\n  }\n\n  abrirTemplateAutorizacao(idAutorizacao: number) {\n    this.idAutorizacao = idAutorizacao;\n    this.autorizacaoService.setAutorizacaoTemplateStatus(true);\n  }\n\n\n  getAutorizacoes() {\n    this.autorizacaoService.getAllAutorizacoes().subscribe(\n      (_EMPRESAS: Autorizacao[]) => {\n      this.autorizacoes = _EMPRESAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar autorizacoes: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 20%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0b3JpemFjYW8vYXV0b3JpemFjYW9UZW1wbGF0ZS9hdXRvcml6YWNhb1RlbXBsYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsOEJBQThCO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvYXV0b3JpemFjYW8vYXV0b3JpemFjYW9UZW1wbGF0ZS9hdXRvcml6YWNhb1RlbXBsYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwteGwge1xyXG4gICAgd2lkdGg6IDIwJTtcclxuICAgIC8qIE5ldyB3aWR0aCBmb3IgbGFyZ2UgbW9kYWwgKi9cclxufSJdfQ== */\"","module.exports = \"{{abrirTemplate(templateAutorizacao)}}\\n<div bsModal #templateAutorizacao=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" data-keyboard=\\\"false\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Autorizacão<label></label>\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateAutorizacao)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroAutorizacao\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n                <label>Autorizado</label>\\n                <ng-select [clearable]=\\\"false\\\" [items]=\\\"autorizado\\\" [(ngModel)]=\\\"autorizadoSelecionado\\\"\\n                  formControlName=\\\"autorizado\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': cadastroAutorizacao.get('autorizado').errors &&  cadastroAutorizacao.get('autorizado').touched}\\\" >\\n                </ng-select>\\n                <div *ngIf=\\\"cadastroAutorizacao.get('autorizado').hasError('required') &&cadastroAutorizacao.get('autorizado').touched\\\"\\n                    class=\\\"invalid-feedback\\\">\\n                    Campo Obrigatório.\\n                  </div>\\n              </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateAutorizacao)\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.idAutorizacao != 0 && this.editar == true\\\" [disabled]=\\\"!cadastroAutorizacao.valid\\\"\\n          class=\\\"btn btn-primary\\\" (click)=\\\"salvarAutorizacao(templateAutorizacao)\\\">\\n          Salvar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, Input, AfterViewChecked } from '@angular/core';\nimport { Autorizacao } from 'src/app/_models/Autorizacoes/Autorizacao';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { AutorizacaoService } from 'src/app/_services/Autorizacoes/autorizacao.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport * as moment from 'moment';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\nimport { NotificacaoService } from 'src/app/_services/Notificacoes/notificacao.service';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\n@Component({\n  selector: 'app-autorizacao-template',\n  templateUrl: './autorizacaoTemplate.component.html',\n  styleUrls: ['./autorizacaoTemplate.component.css']\n})\nexport class AutorizacaoTemplateComponent implements OnInit, AfterViewChecked {\n\n  @Input() idAutorizacao: number;\n  @Input() formulario: string;\n  @Input() acao: string;\n  @Input() objeto: string;\n  @ViewChild('templateAutorizacao') templateAutorizacao: any;\n\n  editar = false;\n\n  cadastroAutorizacao: FormGroup;\n  autorizacao: Autorizacao;\n\n  autorizado = ['NÃO', 'SIM'];\n  autorizadoSelecionado: string;\n\n  usuarios: Usuario[];\n\n  templateEnabled = false;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              public dataService: DataService,\n              private permissaoService: PermissaoService,\n              private usuarioService: UsuarioService,\n              private changeDetectionRef: ChangeDetectorRef,\n              private autorizacaoService: AutorizacaoService,\n              private notificacaoService: NotificacaoService,\n              private socketService: SocketService) {\n              }\n\n  ngOnInit() {\n    this.getUsuarios();\n    this.validarAutorizacao();\n    if (this.idAutorizacao !== 0) {\n      this.carregarAutorizacao();\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n\n  carregarAutorizacao() {\n    this.autorizacao = null;\n    this.autorizacaoService.getAutorizacaoById(this.idAutorizacao)\n    .subscribe(\n    (_AUTORIZACAO: Autorizacao) => {\n      this.autorizacao = Object.assign(_AUTORIZACAO);\n\n      let autorizado = '';\n      if (this.autorizacao.autorizado === 0 && this.autorizacao.autorizador) {\n        autorizado = 'NÃO';\n      } else if (this.autorizacao.autorizado === 1 && this.autorizacao.autorizador) {\n        autorizado = 'SIM';\n      }\n      this.cadastroAutorizacao.patchValue(this.autorizacao);\n      this.cadastroAutorizacao.controls.autorizado.setValue(autorizado);\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('AUTORIZACOES', this.autorizacao.acao).subscribe(\n        (_PERMISSAO: Permissao) => {\n        this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Autorizacao: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n  validarAutorizacao() {\n    this.cadastroAutorizacao = this.fb.group({\n      id:  [''],\n      solicitanteId: [''],\n      autorizadorId: [''],\n      formularioId: [''],\n      formulario: [''],\n      acao: [''],\n      objeto: [''],\n      dataHoraSolicitado: [''],\n      dataHoraAutorizado: [''],\n      autorizado: ['', Validators.required],\n      visto: [0]\n    });\n  }\n\n  salvarAutorizacao(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const autorizadoValor = (this.autorizadoSelecionado === 'SIM') ? 1 : 0;\n    this.autorizacao = Object.assign(this.cadastroAutorizacao.value, {\n      autorizadorId: this.permissaoService.getUsuarioId(),\n      dataHoraAutorizado: dataAtual,\n      autorizado: autorizadoValor,\n    });\n\n    this.autorizacaoService.editarAutorizacao(this.autorizacao).subscribe(\n      () => {\n        const idSolicitante = this.cadastroAutorizacao.get('solicitanteId').value;\n        const nomeAutorizador = this.permissaoService.getUsuario();\n        const notificacao = Object.assign({id: 0, usuarioId: idSolicitante, dataHora: dataAtual, tipo: 'Resposta Autorização', visto: 0});\n        const info = {\n          autorizadorNome: nomeAutorizador,\n          solicitanteId: idSolicitante,\n          autorizado: autorizadoValor\n        };\n        this.notificacaoService.novaNotificacao(notificacao).subscribe(\n          () => {\n          this.socketService.sendSocket('RespAutorizacaoVendaGerarPedido', info);\n        });\n        this.autorizacaoService.atualizarAutorizacoes();\n        this.toastr.success(`Editado com Sucesso!`);\n        this.fecharTemplate(this.templateAutorizacao);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.autorizacaoService.setAutorizacaoTemplateStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getUsuarios() {\n    this.usuarioService.getAllUsuario().subscribe(\n      (_USUAIROS: Usuario[]) => {\n      this.usuarios = _USUAIROS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar usuarios: ${error.error}`);\n    });\n  }\n\n\n}\n","module.exports = \"<h2>Centro de Despesas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"abrirTemplateCentroDespesa('NOVO', null, templateCentroDespesa)\\\" tooltip=\\\"Novo\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Status</th>\\n          <th style=\\\"text-align: center;width: 100px;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"centrosDespesa && centrosDespesa.length\\\">\\n        <tr *ngFor=\\\"let centro of centrosDespesa | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td style=\\\"white-space: nowrap;\\\">{{ centro.descricao }}</td>\\n          <td>{{ centro.status }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                (click)=\\\"abrirTemplateCentroDespesa('EDITAR', centro, templateCentroDespesa)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!centrosDespesa || centrosDespesa.length == 0\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum Centro de Despesa encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #templateCentroDespesa=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Centro de Despesa\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateCentroDespesa.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Descrição:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n              class=\\\"form-control\\\" formControlName=\\\"descricao\\\" \\n              [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors &&  cadastroForm.get('descricao').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Status:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ATIVO', 'INATIVO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\" disabled\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('status').errors &&  cadastroForm.get('status').touched}\\\" >\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'EDITAR' && this.editar == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"salvarCentroDespesa(templateCentroDespesa)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'NOVO' && this.novo == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"cadastrarCentroDespesa(templateCentroDespesa)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { CentroDespesaService } from 'src/app/_services/Cadastros/CentroDespesa/centroDespesa.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-centro-despesa',\n  templateUrl: './centroDespesa.component.html'\n})\nexport class CentroDespesaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  novo = true;\n  editar = true;\n  visualizar = true;\n\n  cadastroForm: FormGroup;\n\n  centrosDespesa: CentroDespesa[];\n\n  centroDespesa: CentroDespesa;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  modo = '';\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: Router,\n              private centroDespesaService: CentroDespesaService,\n              private permissaoService: PermissaoService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getCentroDespesa();\n    this.validarForm();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE DESPESA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE DESPESA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE DESPESA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  carregarCentroDespesa(centroDespesa: CentroDespesa) {\n    this.centroDespesa = Object.assign({}, centroDespesa);\n    this.cadastroForm.patchValue(this.centroDespesa);\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  abrirTemplateCentroDespesa(modo: string, centroDespesa: CentroDespesa, template: any) {\n    this.modo = modo;\n    if (modo === 'NOVO') {\n      this.cadastroForm.reset();\n    } else if (modo === 'EDITAR') {\n      this.carregarCentroDespesa(centroDespesa);\n    }\n    template.show();\n  }\n\n  cadastrarCentroDespesa(template: any) {\n    this.centroDespesa = Object.assign(this.cadastroForm.value, {id: 0});\n\n    this.centroDespesaService.novoCentroDespesa(this.centroDespesa).subscribe(\n      () => {\n        this.getCentroDespesa();\n        template.hide();\n        this.toastr.success(`Cadastrado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      });\n  }\n\n  salvarCentroDespesa(template: any) {\n    this.centroDespesa = Object.assign(this.cadastroForm.value);\n    this.centroDespesaService.editarCentroDespesa(this.centroDespesa).subscribe(\n      () => {\n        this.getCentroDespesa();\n        template.hide();\n        this.toastr.success(`Editado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  getCentroDespesa() {\n    this.centroDespesaService.getAllCentroDespesa().subscribe(\n      (_CENTROS: CentroDespesa[]) => {\n      this.centrosDespesa = _CENTROS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Despesa: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Centro de Receitas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"abrirTemplateCentroReceita('NOVO', null, templateCentroReceita)\\\" tooltip=\\\"Novo\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Status</th>\\n          <th style=\\\"text-align: center;width: 100px;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"centrosReceita && centrosReceita.length\\\">\\n        <tr *ngFor=\\\"let centro of centrosReceita | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td style=\\\"white-space: nowrap;\\\">{{ centro.descricao }}</td>\\n          <td>{{ centro.status }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                (click)=\\\"abrirTemplateCentroReceita('EDITAR', centro, templateCentroReceita)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!centrosReceita || centrosReceita.length == 0\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum Centro de Receita encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #templateCentroReceita=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Centro de Receita\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateCentroReceita.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Descrição:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n              class=\\\"form-control\\\" formControlName=\\\"descricao\\\"\\n              [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors &&  cadastroForm.get('descricao').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Status:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ATIVO', 'INATIVO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\" \\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('status').errors && cadastroForm.get('status').touched}\\\" disabled>\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'EDITAR' && this.editar == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"salvarCentroReceita(templateCentroReceita)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'NOVO' && this.novo == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cadastrarCentroReceita(templateCentroReceita)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CentroReceita } from 'src/app/_models/Cadastros/CentroReceita/CentroReceita';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { CentroReceitaService } from 'src/app/_services/Cadastros/CentroReceita/centroReceita.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-centro-receita',\n  templateUrl: './centroReceita.component.html'\n})\nexport class CentroReceitaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  novo = true;\n  editar = true;\n  visualizar = true;\n\n  cadastroForm: FormGroup;\n\n  centrosReceita: CentroReceita[];\n\n  centroReceita: CentroReceita;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  modo = '';\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: Router,\n              private centroReceitaService: CentroReceitaService,\n              private permissaoService: PermissaoService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getCentroReceita();\n    this.validarForm();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE RECEITA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE RECEITA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CENTRO DE RECEITA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  carregarCentroReceita(centroReceita: CentroReceita) {\n    this.centroReceita = Object.assign({}, centroReceita);\n    this.cadastroForm.patchValue(this.centroReceita);\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  abrirTemplateCentroReceita(modo: string, centroReceita: CentroReceita, template: any) {\n    this.modo = modo;\n    if (modo === 'NOVO') {\n      this.cadastroForm.reset();\n    } else if (modo === 'EDITAR') {\n      this.carregarCentroReceita(centroReceita);\n    }\n    template.show();\n  }\n\n  cadastrarCentroReceita(template: any) {\n    this.centroReceita = Object.assign(this.cadastroForm.value, {id: 0});\n    console.log(this.centroReceita);\n    this.centroReceitaService.novoCentroReceita(this.centroReceita).subscribe(\n      () => {\n        this.getCentroReceita();\n        template.hide();\n        this.toastr.success(`Cadastrado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      });\n  }\n\n  salvarCentroReceita(template: any) {\n    this.centroReceita = Object.assign(this.cadastroForm.value);\n    this.centroReceitaService.editarCentroReceita(this.centroReceita).subscribe(\n      () => {\n        this.getCentroReceita();\n        template.hide();\n        this.toastr.success(`Editado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  getCentroReceita() {\n    this.centroReceitaService.getAllCentroReceita().subscribe(\n      (_CENTROS: CentroReceita[]) => {\n      this.centrosReceita = _CENTROS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Receita: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Cheques Pré-Datado</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  (click)=\\\"abrirTemplateChequePre(0)\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Lançamento\\n        </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Cliente</th>\\n            <th style=\\\"text-align: center;\\\">Data Lançamento</th>\\n            <th style=\\\"text-align: center;\\\">N° Cheque</th>\\n            <th style=\\\"text-align: center;\\\">Valor</th>\\n            <th style=\\\"text-align: center;\\\">Data Pré-Datado</th>\\n            <th style=\\\"text-align: center;\\\">Status</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"cheques && cheques.length\\\">\\n          <tr *ngFor=\\\"let cheque of cheques | paginate: { itemsPerPage: 5,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td>{{ cheque.id }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ cheque.clientes.nomeFantasia }}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ cheque.dataLancamento | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"text-align: center;\\\">{{ cheque.numero }}</td>\\n            <td style=\\\"text-align: center;\\\">{{ cheque.valor | currency:' ':false }}</td>\\n            <td style=\\\"text-align: center;\\\">{{ cheque.dataPreDatado | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"text-align: center;\\\">{{ cheque.status }}</td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div *ngIf=\\\"this.editar == true || this.visualizar == true\\\" class=\\\"btn-group\\\">\\n                <a  (click)=\\\"abrirTemplateChequePre(cheque.Id)\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!cheques\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhum Cheque encontrado!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n\\n<app-cheque-pre-template [idChequePre]=\\\"this.idChequePre\\\" *ngIf=\\\"getTemplateChequePre() == true\\\"></app-cheque-pre-template>\\n\\n \"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ChequePre } from 'src/app/_models/Cadastros/ChequePre/ChequePre';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { ChequePreService } from 'src/app/_services/Cadastros/ChequePre/chequePre.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-cheque-pre',\n  templateUrl: './chequePre.component.html'\n})\nexport class ChequePreComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  visualizar = false;\n\n  cheques: ChequePre[];\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  idChequePre: number;\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              public chequePreService: ChequePreService) { }\n\n  ngOnInit() {\n    this.getChequePre();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getTemplateChequePre() {\n    return this.chequePreService.getChequePreTemplateStatus();\n  }\n\n  abrirTemplateChequePre(idLancamento: number) {\n    this.idChequePre = idLancamento;\n    this.chequePreService.setChequePreTemplateStatus(true);\n  }\n\n  getChequePre() {\n    this.chequePreService.getAllChequePre().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_CHEQUES: ChequePre[]) => {\n      this.cheques = _CHEQUES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar ChequePre: ${error.error}`);\n  });\n}\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 55%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2NoZXF1ZVByZS9jaGVxdWVQcmVUZW1wbGF0ZS9jaGVxdWVQcmVUZW1wbGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDhCQUE4QjtBQUNsQyIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy9jaGVxdWVQcmUvY2hlcXVlUHJlVGVtcGxhdGUvY2hlcXVlUHJlVGVtcGxhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC14bCB7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gICAgLyogTmV3IHdpZHRoIGZvciBsYXJnZSBtb2RhbCAqL1xyXG59XHJcbiJdfQ== */\"","module.exports = \"{{abrirTemplate(templateChequePre)}}\\n<div bsModal #templateChequePre=\\\"bs-modal\\\" class=\\\"modal fade\\\"  [config]=\\\"{backdrop: 'static', keyboard: false}\\\"data-keyboard=\\\"false\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\" >\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Cheque Pré-Datado<label></label>\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateChequePre)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroCheque\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Cliente:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clientesId\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('clientesId').errors && cadastroCheque.get('clientesId').touched}\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroCheque.get('clientesId').hasError('required') &&cadastroCheque.get('clientesId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Pre-Datado</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataPreDatado\\\"\\n                [ngModel]=\\\"cadastroCheque.get('dataPreDatado').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\" [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('dataPreDatado').errors && \\n                cadastroCheque.get('dataPreDatado').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroCheque.get('dataPreDatado').hasError('required') &&cadastroCheque.get('dataPreDatado').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('valor').errors && \\n                  cadastroCheque.get('valor').touched}\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div *ngIf=\\\"cadastroCheque.get('valor').hasError('required') && cadastroCheque.get('valor').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroCheque.get('valor').hasError('min') && cadastroCheque.get('valor').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Banco:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"banco\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('banco').errors && cadastroCheque.get('banco').touched}\\\" />\\n              <div *ngIf=\\\"cadastroCheque.get('banco').hasError('required') && cadastroCheque.get('banco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Agência:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"agencia\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('agencia').errors && cadastroCheque.get('agencia').touched}\\\" />\\n              <div *ngIf=\\\"cadastroCheque.get('agencia').hasError('required') && cadastroCheque.get('agencia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Conta:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"conta\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('conta').errors && cadastroCheque.get('conta').touched}\\\" />\\n              <div *ngIf=\\\"cadastroCheque.get('conta').hasError('required') && cadastroCheque.get('conta').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">N° do Cheque:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"numero\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroCheque.get('numero').errors && cadastroCheque.get('numero').touched}\\\" />\\n              <div *ngIf=\\\"cadastroCheque.get('numero').hasError('required') && cadastroCheque.get('numero').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateChequePre)\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.idChequePre != 0 && this.editar == true\\\" [disabled]=\\\"!cadastroCheque.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarChequePre(templateChequePre)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.idChequePre == 0 && this.novo == true\\\" [disabled]=\\\"!cadastroCheque.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarChequePre(templateChequePre)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ChequePre } from 'src/app/_models/Cadastros/ChequePre/ChequePre';\nimport { BsDatepickerConfig, BsModalRef } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { ChequePreService } from 'src/app/_services/Cadastros/ChequePre/chequePre.service';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport * as moment from 'moment';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-cheque-pre-template',\n  templateUrl: './chequePreTemplate.component.html',\n  styleUrls: ['./chequePreTemplate.component.css']\n})\nexport class ChequePreTemplateComponent implements OnInit, AfterViewInit {\n\n  @Input() idChequePre: number;\n  @ViewChild('templateChequePre') templateChequePre: any;\n\n  novo = false;\n  editar = false;\n\n  cadastroCheque: FormGroup;\n  cheque: ChequePre;\n\n  templateEnabled = false;\n\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              public dataService: DataService,\n              private clienteService: ClienteService,\n              private permissaoService: PermissaoService,\n              private chequePreService: ChequePreService) {\n              }\n\n  ngOnInit() {\n    this.getClientes();\n    this.validarChequePre();\n    if (this.idChequePre !== 0) {\n      this.carregarChequePre();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarChequePre() {\n    this.cheque = null;\n    this.chequePreService.getChequePreById(this.idChequePre)\n      .subscribe(\n        (_CHEQUE: ChequePre) => {\n          this.cheque = Object.assign(_CHEQUE, {\n            dataLancamento: this.dataService.getDataPTBR(_CHEQUE.dataLancamento),\n            dataPreDatado: this.dataService.getDataPTBR(_CHEQUE.dataPreDatado)\n          });\n\n          this.cadastroCheque.patchValue(this.cheque);\n\n          console.log(this.cheque);\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar ChequePre: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validarChequePre() {\n    this.cadastroCheque = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        recebimentoParcelasId: [''],\n        banco: ['', Validators.required],\n        agencia: ['', Validators.required],\n        conta: ['', Validators.required],\n        numero: ['', Validators.required],\n        valor: ['', [Validators.required, Validators.min(1)]],\n        usuarioLancamentoid: [''],\n        usuarioBaixaId: [''],\n        status: [''],\n        dataPreDatado: ['', Validators.required],\n        dataLancamento: [''],\n    });\n  }\n\n  salvarChequePre(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.idChequePre === 0) {\n      this.cheque = Object.assign(this.cadastroCheque.value, {id: 0,\n          dataPreDatado: this.dataService.getDataSQL(this.cadastroCheque.get('dataPreDatado').value.toLocaleString()),\n          dataLancamento: dataAtual});\n      this.chequePreService.novoChequePre(this.cheque).subscribe(\n        () => {\n          this.fecharTemplate(template);\n          this.toastr.success(`Cadastrado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        });\n    } else {\n      this.cheque = Object.assign(this.cadastroCheque.value, {\n        dataPreDatado: this.dataService.getDataSQL(this.cadastroCheque.get('dataPreDatado').value),\n        dataLancamento: this.dataService.getDataSQL(this.cadastroCheque.get('dataLancamento').value)});\n      this.chequePreService.editarChequePre(this.cheque).subscribe(\n        () => {\n          this.toastr.success(`Editado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    console.log(true);\n    this.chequePreService.setChequePreTemplateStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status === 'ATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n}\n","module.exports = \"<h2>Clientes</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado != 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <div\\n          *ngIf=\\\"filtroSelecionado == 'NOME FANTASIA' || filtroSelecionado == 'RAZÃO SOCIAL' || filtroSelecionado == 'COD.SIGA'\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'CNPJ/CPF'\\\">\\n          <label>Filtro:</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\"\\n            [ngModel]=\\\"filtroLista | cnpjCpfPipePipe\\\" (ngModelChange)=\\\"filtroLista=$event\\\" />\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-1\\\">\\n        <label>Estado:(*)</label>\\n        <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n          (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" name=\\\"estadoFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Cidade:(*)</label>\\n        <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n          bindValue=\\\"id\\\" [(ngModel)]=\\\"filtroLista\\\" name=\\\"cidadeFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n      <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n        <a *ngIf=\\\"this.novo == true\\\"\\n          [routerLink]=\\\"['/clientes','novo']\\\" tooltip=\\\"Novo Cliente\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Cliente\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Razão Socia</th>\\n          <th>Nome Fantasia</th>\\n          <th>Telefone</th>\\n          <th>Celular</th> \\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"clientes && clientes.length\\\">\\n        <tr\\n          *ngFor=\\\"let cliente of clientesFiltrados | paginate: { itemsPerPage: 30, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ cliente.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.razaoSocial }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.nomeFantasia }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.telefone }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ cliente.celular }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir == true\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                tooltip=\\\"Excluir\\\" (click)=\\\"excluirCliente(cliente, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar == true || this.visualizar\\\" [routerLink]=\\\"['/clientes','editar', cliente.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!clientes\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum cliente encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"clientePagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Cliente\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirCliente}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmarExclusao(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Cliente } from '../../_models/Cadastros/Clientes/Cliente';\nimport { FormGroup } from '@angular/forms';\nimport { ClienteService } from '../../_services/Cadastros/Clientes/cliente.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Estado } from '../../_models/Cadastros/Uteis/Estado';\nimport { Cidade } from '../../_models/Cadastros/Uteis/Cidade';\nimport { CidadeService } from '../../_services/Cadastros/Uteis/cidade.service';\nimport { EstadoService } from '../../_services/Cadastros/Uteis/estado.service';\nimport { PermissaoService } from '../../_services/Permissoes/permissao.service';\nimport { Permissao } from '../../_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html'\n})\nexport class ClienteComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  clientesFiltrados: Cliente[];\n  cliente: Cliente;\n  clientes: Cliente[];\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirCliente = '';\n\n  paginaAtual = 1;\n  totalRegistros = 0;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT', 'TODOS'];\n  statusFiltroSelecionado = 'ATIVO';\n\n  filtrarPor = ['COD.SIGA', 'RAZÃO SOCIAL', 'NOME FANTASIA', 'CNPJ/CPF', 'CIDADE'];\n  filtroSelecionado = 'NOME FANTASIA';\n\n  cidades: Cidade[];\n  cidadeIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  valueCnpjCpfPipe = '';\n\n  constructor(\n    private clienteService: ClienteService,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getEstados();\n    this.estadoIdSelecionado = 11;\n    this.getCidades(this.estadoIdSelecionado);\n    this.getClientes();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CLIENTES', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  excluirCliente(cliente: Cliente, template: any) {\n    this.cliente = cliente;\n    this.bodyExcluirCliente = `Tem certeza que deseja excluir o Cliente: ${cliente.nomeFantasia}, Código: ${cliente.id}?`;\n    template.show();\n  }\n\n  confirmarExclusao(template: any) {\n    this.clienteService.excluirCliente(this.cliente.id).subscribe(\n    () => {\n        template.hide();\n        this.getClientes();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  get filtroLista(): string {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.clientesFiltrados = this.filtrarClientes(this._filtroLista);\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    this.clientesFiltrados = this.filtrarClientes(this.filtroLista);\n  }\n\n  filtrarClientes(filtrarPor: string): Cliente[] {\n    if (this.statusFiltroSelecionado !== 'TODOS') {\n      this.filtroRetorno = this.clientes.filter(_CLIENTE => _CLIENTE.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.clientes;\n    }\n\n    if (filtrarPor) {\n      if (this.filtroSelecionado === 'COD.SIGA') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.codSiga.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'RAZÃO SOCIAL') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.razaoSocial.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'NOME FANTASIA') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.nomeFantasia.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CNPJ/CPF') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.cnpjCpf.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CIDADE') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(cliente => cliente.cidadeId === filtrarPor);\n      }\n    }\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES;\n      this.clientesFiltrados = this.filtrarClientes(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.filtroLista = '';\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.filtroLista = '';\n  }\n\n}\n","module.exports = \"ng-select.ng-invalid.ng-touched .ng-select-container {\\r\\n    background-color: #ffcccc;\\r\\n    border-color: #ff0000;\\r\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvZWRpdGFyQ2xpZW50ZS9lZGl0YXJDbGllbnRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLG1FQUFtRTtBQUN2RSIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy9jbGllbnRlL2VkaXRhckNsaWVudGUvZWRpdGFyQ2xpZW50ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibmctc2VsZWN0Lm5nLWludmFsaWQubmctdG91Y2hlZCAubmctc2VsZWN0LWNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjY2NjO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZmYwMDAwO1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgMCAzcHggI2ZkZTZlODtcclxufSJdfQ== */\"","module.exports = \"<h2>Cliente</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Cod.Siga:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codSiga\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>N° Loja:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nLoja\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                            cadastroForm.get('razaoSocial').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('razaoSocial').hasError('required') &&cadastroForm.get('razaoSocial').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Razão Social é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Nome Fantasia:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nomeFantasia').errors && \\n                                                          cadastroForm.get('nomeFantasia').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('nomeFantasia').hasError('required') &&cadastroForm.get('nomeFantasia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome Fantasia é obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Grupo:</label>\\n              <div class=\\\"input-group\\\">\\n                <ng-select [items]=\\\"grupos\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" (change)=\\\"getGrupos()\\\"\\n                  [(ngModel)]=\\\"grupoIdSelecionado\\\" formControlName=\\\"grupoId\\\">\\n                </ng-select>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"abrirModalNovoGrupo(templateGrupo)\\\" tooltip=\\\"Novo Grupo\\\">\\n                    <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Categoria:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"categorias\\\" [(ngModel)]=\\\"categoriaSelecionado\\\"\\n                formControlName=\\\"categoria\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Proprietário:</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"proprietario\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" formControlName=\\\"ie\\\"\\n                [ngModel]=\\\"valueIePipe | iePipePipe\\\" (ngModelChange)=\\\"valueIePipe=$event\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                      cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n                  cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                    cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                      cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n        </tab>\\n\\n        <tab heading=\\\"Implantação\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Cad.Produto(Inicio de Funcionamento): </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpCadProd\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpCadProd').value\\\" bsDatepicker />\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Frente Loja: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpFrenteLoja\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpFrenteLoja').value\\\" bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Financeiro: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataImpFinanceiro\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataImpFinanceiro').value\\\" bsDatepicker />\\n            </div>\\n          </div>\\n        </tab>\\n\\n        <tab heading=\\\"Sistema\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Sistema:(*)</label>\\n              <ng-select [items]=\\\"sistemas\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparSistema()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getGeracoes(sistemaIdSelecionado)\\\" [(ngModel)]=\\\"sistemaIdSelecionado\\\"\\n                formControlName=\\\"sistemaId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('sistemaId').hasError('required') && cadastroForm.get('sistemaId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Sistema é Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Gerações:(*)</label>\\n              <ng-select [items]=\\\"geracoes\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparGeracao()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getVersoesGeracao(geracaoIdSelecionado)\\\" [(ngModel)]=\\\"geracaoIdSelecionado\\\"\\n                formControlName=\\\"geracaoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('geracaoId').hasError('required') && cadastroForm.get('geracaoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Geração é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Versões:(*)</label>\\n              <ng-select [items]=\\\"versoes\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarClienteVersoes(versoesIdSelecionado)\\\" [(ngModel)]=\\\"versoesIdSelecionado\\\"\\n                formControlName=\\\"clienteVersoes\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('clienteVersoes').hasError('required') && cadastroForm.get('clienteVersoes').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Versão(ões) é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\" style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\"\\n  (click)=\\\"salvarAlteracao()\\\" tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n<div bsModal #templateGrupo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateGrupo.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroGrupoForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Nome:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroGrupoForm.get('nome').errors &&cadastroGrupoForm.get('nome').touched}\\\"\\n                formControlName=\\\"nome\\\" />\\n              <div *ngIf=\\\"cadastroGrupoForm.get('nome').hasError('required') &&cadastroGrupoForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateGrupo.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroGrupoForm.valid\\\" (click)=\\\"cadastrarGrupo(templateGrupo)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\nimport { Geracao } from 'src/app/_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from 'src/app/_models/Cadastros/Sistemas/Versao';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { SistemaClienteService } from 'src/app/_services/Cadastros/Clientes/sistemaCliente.service';\nimport { ClienteVersoes } from 'src/app/_models/Cadastros/Clientes/ClienteVersoes';\nimport { ClienteGrupos } from 'src/app/_models/Cadastros/Clientes/ClienteGrupos';\nimport { GrupoClienteService } from 'src/app/_services/Cadastros/Clientes/grupoCliente.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\n\n@Component({\n  selector: 'app-editar-cliente',\n  templateUrl: './editarCliente.component.html',\n  styleUrls: ['./editarCliente.component.css']\n})\nexport class EditarClienteComponent implements OnInit, AfterViewInit {\n\n  editar = false;\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  cadastroGrupoForm: FormGroup;\n  cliente: Cliente;\n\n  categorias = ['A', 'B', 'C', 'D'];\n  categoriaSelecionado: string;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT'];\n  statusSelecionado: string;\n\n  grupo: ClienteGrupos;\n  grupos: ClienteGrupos[];\n  grupoIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  sistemas: Sistema[];\n  sistemaIdSelecionado: any;\n\n  geracoes: Geracao[];\n  geracaoIdSelecionado: any;\n\n  versoes: Versao[];\n  versoesIdSelecionado: any;\n  versoesCliente: ClienteVersoes[];\n\n  idCliente: number;\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  dataCadProd: any;\n  dataFrenteLoja: any;\n  dataFinanceiro: any;\n\n  constructor(private clienteService: ClienteService,\n              private router: ActivatedRoute,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private clienteGruposService: GrupoClienteService,\n              private sistemaClienteService: SistemaClienteService,\n              private changeDetectionRef: ChangeDetectorRef,\n              public dataService: DataService,\n              public permissaoService: PermissaoService) {\n      this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.idCliente = +this.router.snapshot.paramMap.get('id');\n    this.getEstados();\n    this.getSistemas();\n    this.getGrupos();\n    this.validation();\n    this.validationGrupo();\n    this.carregarCliente();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarCliente() {\n    this.clienteService.getClienteById(this.idCliente)\n      .subscribe(\n        (cliente: Cliente) => {\n          this.cliente = Object.assign({}, cliente);\n          this.dataCadProd = this.dataService.getDataPTBR(this.cliente.dataImpCadProd);\n          this.dataFrenteLoja = this.dataService.getDataPTBR(this.cliente.dataImpFrenteLoja);\n          this.dataFinanceiro = this.dataService.getDataPTBR(this.cliente.dataImpFinanceiro);\n          this.cliente = Object.assign(this.cliente, {\n            dataImpCadProd: this.dataCadProd,\n            dataImpFrenteLoja: this.dataFrenteLoja,\n            dataImpFinanceiro: this.dataFinanceiro\n          });\n\n          this.cadastroForm.patchValue(this.cliente);\n\n          this.estadoIdSelecionado = this.cliente.estadoId;\n          this.getCidades(this.estadoIdSelecionado);\n          this.cidadeIdSelecionado = this.cliente.cidadeId;\n\n          this.sistemaIdSelecionado = this.cliente.sistemaId;\n          this.getGeracoes(this.sistemaIdSelecionado);\n          this.geracaoIdSelecionado = this.cliente.geracaoId;\n          this.getVersoesGeracao(this.geracaoIdSelecionado);\n          this.versoesIdSelecionado = [];\n          this.versoesCliente = [];\n          this.cliente.clienteVersoes.forEach(versoes => {\n            this.versoesCliente.push(versoes);\n            this.versoesIdSelecionado.push(versoes.versaoId);\n          });\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Cliente: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        codSiga: [''],\n        nLoja: [''],\n        razaoSocial: ['', Validators.required],\n        nomeFantasia: ['', Validators.required],\n        grupoId: [0],\n        categoria: [''],\n        proprietario: [''],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        ie: [''],\n        estadoId: ['', Validators.required],\n        cidadeId: ['', Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        sistemaId: ['', Validators.required],\n        geracaoId: ['', Validators.required],\n        dataImpCadProd: [''],\n        dataImpFrenteLoja: [''],\n        dataImpFinanceiro: [''],\n        clienteVersoes: [this.fb.group({\n          clienteId: [''],\n          versaoId: ['']\n        }), Validators.required],\n        status: ['']\n    });\n  }\n\n  adicionarClienteVersoes(versoesSelecionadas: any) {\n    this.versoesCliente = [];\n    versoesSelecionadas.forEach(versoes => {\n      this.versoesCliente.push(Object.assign({ clienteId: this.idCliente, versaoId: versoes}));\n    });\n  }\n\n  validationGrupo() {\n    this.cadastroGrupoForm = this.fb.group({\n        id: [''],\n        nome: ['', Validators.required]\n    });\n  }\n\n  getGrupos() {\n    this.clienteGruposService.getAllGrupos().subscribe(\n      (_GRUPOS: ClienteGrupos[]) => {\n      this.grupos = _GRUPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar grupos: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  getSistemas() {\n    this.sistemaClienteService.getAllSistema().subscribe(\n      (_SISTEMAS: Sistema[]) => {\n      this.sistemas = _SISTEMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar sistemas: ${error.error}`);\n    });\n  }\n\n  getGeracoes(SistemaId: number) {\n      if (SistemaId != null) {\n      this.geracaoIdSelecionado = [];\n      this.versoesIdSelecionado = [];\n      this.sistemaClienteService.getAllGeracao(SistemaId).subscribe(\n        (_GERACOES: Geracao[]) => {\n        this.geracoes = _GERACOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar geracoes: ${error.error}`);\n      });\n    }\n  }\n\n  getVersoesGeracao(GeracaoId: number) {\n    if (GeracaoId != null) {\n      this.sistemaClienteService.getAllGeracaoVersoes(GeracaoId).subscribe(\n        (_VERSOES: Versao[]) => {\n        this.versoes = _VERSOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar versoes geracao: ${error.error}`);\n      });\n    }\n  }\n\n  limparSistema() {\n    this.geracoes = [];\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      sistemaId: '',\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparGeracao() {\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparVersoes() {\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      versao: ''\n    });\n  }\n\n  limparCidade() {\n    this.cidadeIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.cidadeIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  abrirModalNovoGrupo(template: any) {\n    this.cadastroGrupoForm.reset();\n    template.show();\n  }\n\n  cadastrarGrupo(template: any) {\n    if (this.cadastroGrupoForm.valid) {\n      this.grupo = Object.assign(this.cadastroGrupoForm.value, {id: 0});\n      this.clienteGruposService.novoGrupo(this.grupo).subscribe(\n        () => {\n          this.getGrupos();\n          this.toastr.success('Grupo Cadastrado com Sucesso!');\n          template.hide();\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  salvarAlteracao() {\n    this.dataCadProd = null;\n    this.dataFrenteLoja = null;\n    this.dataFinanceiro = null;\n    if (this.cadastroForm.get('dataImpCadProd').value !== null) {\n      this.dataCadProd = this.cadastroForm.get('dataImpCadProd').value.toLocaleString();\n    }\n    if (this.cadastroForm.get('dataImpFrenteLoja').value !== null) {\n      this.dataFrenteLoja = this.cadastroForm.get('dataImpFrenteLoja').value.toLocaleString();\n    }\n    if (this.cadastroForm.get('dataImpFinanceiro').value !== null) {\n      this.dataFinanceiro = this.cadastroForm.get('dataImpFinanceiro').value.toLocaleString();\n    }\n\n    this.cliente = Object.assign(this.cadastroForm.value, { id: this.cliente.id,\n      dataImpCadProd: this.dataService.getDataSQL(this.dataCadProd),\n      dataImpFrenteLoja: this.dataService.getDataSQL(this.dataFrenteLoja),\n      dataImpFinanceiro: this.dataService.getDataSQL(this.dataFinanceiro) });\n\n    this.cliente.clienteVersoes = [];\n    this.versoesCliente.forEach(versoes => {\n      this.cliente.clienteVersoes.push(versoes);\n    });\n    this.clienteService.editarCliente(this.cliente).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarCliente();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n}\n","module.exports = \"ng-select.ng-invalid.ng-touched .ng-select-container {\\r\\n    background-color: #ffcccc;\\r\\n    border-color: #ff0000;\\r\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvbm92b0NsaWVudGUvbm92b0NsaWVudGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsbUVBQW1FO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvY2FkYXN0cm9zL2NsaWVudGUvbm92b0NsaWVudGUvbm92b0NsaWVudGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm5nLXNlbGVjdC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQgLm5nLXNlbGVjdC1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmY2NjYztcclxuICAgIGJvcmRlci1jb2xvcjogI2ZmMDAwMDtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDAgM3B4ICNmZGU2ZTg7XHJcbn0iXX0= */\"","module.exports = \"<h2>Cliente</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Cod.Siga:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codSiga\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>N° Loja:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nLoja\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('razaoSocial').hasError('required') &&cadastroForm.get('razaoSocial').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Razão Social é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Nome Fantasia:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nomeFantasia').errors && \\n                                                      cadastroForm.get('nomeFantasia').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('nomeFantasia').hasError('required') &&cadastroForm.get('nomeFantasia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome Fantasia é obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Grupo:</label>\\n              <div class=\\\"input-group\\\">\\n                <ng-select [items]=\\\"grupos\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" (change)=\\\"getGrupos()\\\"\\n                  [(ngModel)]=\\\"grupoIdSelecionado\\\" formControlName=\\\"grupoId\\\">\\n                </ng-select>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"abrirModalNovoGrupo(templateGrupo)\\\" tooltip=\\\"Novo Grupo\\\">\\n                    <i class=\\\"fa fa-plus-circle\\\"> </i></button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-1\\\">\\n              <label>Categoria:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"categorias\\\" [(ngModel)]=\\\"categoriaSelecionado\\\"\\n                formControlName=\\\"categoria\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Proprietário:</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"proprietario\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                    cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n        </tab>\\n\\n        <tab heading=\\\"Sistema\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Sistema:(*)</label>\\n              <ng-select [items]=\\\"sistemas\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparSistema()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getGeracoes(sistemaIdSelecionado)\\\" [(ngModel)]=\\\"sistemaIdSelecionado\\\"\\n                formControlName=\\\"sistemaId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('sistemaId').hasError('required') && cadastroForm.get('sistemaId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Sistema é Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Gerações:(*)</label>\\n              <ng-select [items]=\\\"geracoes\\\" bindLabel=\\\"nome\\\" required (clear)=\\\"limparGeracao()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getVersoesGeracao(geracaoIdSelecionado)\\\" [(ngModel)]=\\\"geracaoIdSelecionado\\\"\\n                formControlName=\\\"geracaoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('geracaoId').hasError('required') && cadastroForm.get('geracaoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Geração é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Versões:(*)</label>\\n              <ng-select [items]=\\\"versoes\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarClienteVersoes(versoesIdSelecionado)\\\" [(ngModel)]=\\\"versoesIdSelecionado\\\"\\n                formControlName=\\\"clienteVersoes\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('clienteVersoes').hasError('required') && cadastroForm.get('clienteVersoes').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Versão(ões) é Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button \\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarCliente()\\\"\\n  tooltip=\\\"Novo Cliente\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\\n\\n\\n\\n<div bsModal #templateGrupo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Novo Grupo\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateGrupo.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroGrupoForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Nome:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroGrupoForm.get('nome').errors &&cadastroGrupoForm.get('nome').touched}\\\"\\n                formControlName=\\\"nome\\\" />\\n              <div *ngIf=\\\"cadastroGrupoForm.get('nome').hasError('required') &&cadastroGrupoForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateGrupo.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!cadastroGrupoForm.valid\\\" (click)=\\\"cadastrarGrupo(templateGrupo)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { GrupoClienteService } from 'src/app/_services/Cadastros/Clientes/grupoCliente.service';\nimport { ClienteGrupos } from 'src/app/_models/Cadastros/Clientes/ClienteGrupos';\nimport { Sistema } from 'src/app/_models/Cadastros/Sistemas/Sistema';\nimport { Geracao } from 'src/app/_models/Cadastros/Sistemas/Geracao';\nimport { Versao } from 'src/app/_models/Cadastros/Sistemas/Versao';\nimport { ClienteVersoes } from 'src/app/_models/Cadastros/Clientes/ClienteVersoes';\nimport { SistemaClienteService } from 'src/app/_services/Cadastros/Clientes/sistemaCliente.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-cliente',\n  templateUrl: './novoCliente.component.html',\n  styleUrls: ['./novoCliente.component.css']\n})\n\nexport class NovoClienteComponent implements OnInit {\n\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  cadastroGrupoForm: FormGroup;\n  cliente: Cliente;\n\n  categorias = ['A', 'B', 'C', 'D'];\n  categoriaSelecionado: string;\n\n  status = ['ATIVO', 'INATIVO', 'PROSPECT'];\n  statusSelecionado: string;\n\n  grupo: ClienteGrupos;\n  grupos: ClienteGrupos[];\n  grupoIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  sistemas: Sistema[];\n  sistemaIdSelecionado: any;\n\n  geracoes: Geracao[];\n  geracaoIdSelecionado: any;\n\n  versoes: Versao[];\n  versoesIdSelecionado: any;\n  versoesCliente: ClienteVersoes[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private clienteService: ClienteService,\n              private clienteGruposService: GrupoClienteService,\n              private sistemaClienteService: SistemaClienteService,\n              public router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) {\n               }\n\n  ngOnInit() {\n    this.getEstados();\n    this.getGrupos();\n    this.getSistemas();\n    this.validation();\n    this.validationGrupo();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        codSiga: [''],\n        nLoja: [''],\n        razaoSocial: ['', Validators.required],\n        nomeFantasia: ['', Validators.required],\n        grupoId: [0, Validators.required],\n        categoria: [''],\n        proprietario: [''],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        sistemaId: ['', Validators.required],\n        geracaoId: ['', Validators.required],\n        clienteVersoes: [this.fb.group({\n          clienteId: [''],\n          versaoId: ['']\n        }), Validators.required],\n        status: ['']\n    });\n  }\n\n\n  adicionarClienteVersoes(versoesSelecionadas: any) {\n    this.versoesCliente = [];\n    versoesSelecionadas.forEach(versoes => {\n      this.versoesCliente.push(Object.assign({ clienteId: 0, versaoId: versoes}));\n    });\n  }\n\n  validationGrupo() {\n    this.cadastroGrupoForm = this.fb.group({\n        id: [''],\n        nome: ['', Validators.required]\n    });\n  }\n\n  getGrupos() {\n    this.clienteGruposService.getAllGrupos().subscribe(\n      (_GRUPOS: ClienteGrupos[]) => {\n      this.grupos = _GRUPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar grupos: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  getSistemas() {\n    this.sistemaClienteService.getAllSistema().subscribe(\n      (_SISTEMAS: Sistema[]) => {\n      this.sistemas = _SISTEMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar sistemas: ${error.error}`);\n    });\n  }\n\n  getGeracoes(SistemaId: number) {\n      if (SistemaId != null) {\n      this.geracaoIdSelecionado = [];\n      this.versoesIdSelecionado = [];\n      this.sistemaClienteService.getAllGeracao(SistemaId).subscribe(\n        (_GERACOES: Geracao[]) => {\n        this.geracoes = _GERACOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar geracoes: ${error.error}`);\n      });\n    }\n  }\n\n  getVersoesGeracao(GeracaoId: number) {\n    if (GeracaoId != null) {\n      this.sistemaClienteService.getAllGeracaoVersoes(GeracaoId).subscribe(\n        (_VERSOES: Versao[]) => {\n        this.versoes = _VERSOES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar versoes geracao: ${error.error}`);\n      });\n    }\n  }\n\n  limparSistema() {\n    this.geracoes = [];\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      sistemaId: '',\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparGeracao() {\n    this.geracaoIdSelecionado = [];\n    this.versoes = [];\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      geracaoId: '',\n      versao: ''\n    });\n  }\n\n  limparVersoes() {\n    this.versoesIdSelecionado = [];\n    this.cadastroForm.patchValue({\n      versao: ''\n    });\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  abrirModalNovoGrupo(template: any) {\n    this.cadastroGrupoForm.reset();\n    template.show();\n  }\n\n  cadastrarGrupo(template: any) {\n    if (this.cadastroGrupoForm.valid) {\n      this.grupo = Object.assign(this.cadastroGrupoForm.value, {id: 0});\n      this.clienteGruposService.novoGrupo(this.grupo).subscribe(\n        () => {\n          this.getGrupos();\n          this.toastr.success('Grupo Cadastrado com Sucesso!');\n          template.hide();\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  cadastrarCliente() {\n    if (this.cadastroForm.valid) {\n      this.cliente = Object.assign(this.cadastroForm.value, {id: 0, clienteVersoes: null});\n      this.clienteService.novoCliente(this.cliente).subscribe(\n        () => {\n\n          this.clienteService.getIdUltimoCliente().subscribe(\n            (_CLIENTE: Cliente) => {\n              const IdUltimoCliente = _CLIENTE.id;\n              this.cliente = Object.assign(this.cadastroForm.value, {id: IdUltimoCliente});\n\n              this.cliente.clienteVersoes = [];\n              this.versoesCliente.forEach(versoes => {\n                this.cliente.clienteVersoes.push(Object.assign({ clienteId: IdUltimoCliente , versaoId: versoes.versaoId}));\n              });\n\n              this.clienteService.editarCliente(this.cliente).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/clientes/editar/${IdUltimoCliente}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Empresas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div style=\\\"margin-right: 15px;margin-bottom: 15px;\\\"class=\\\"pull-right\\\">\\n        <a *ngIf=\\\"this.novo == true\\\"\\n          (click)=\\\"abrirTemplateEmpresa(0)\\\" tooltip=\\\"Nova Empresa\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Empresa\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Razão Socia</th>\\n          <th>Nome Fantasia</th>\\n          <th>Telefone</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"empresas && empresas.length\\\">\\n        <tr\\n          *ngFor=\\\"let empresa of empresas | paginate: { itemsPerPage: 30, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ empresa.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ empresa.razaoSocial }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ empresa.nomeFantasia }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ empresa.telefone }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar\\\" (click)=\\\"abrirTemplateEmpresa(empresa.id)\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!empresas\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum empresa encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"empresaPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-empresa-template [idEmpresa]=\\\"this.idEmpresa\\\" *ngIf=\\\"getTemplateEmpresa() == true\\\"></app-empresa-template>\"","import { Component, OnInit } from '@angular/core';\nimport { Empresa } from 'src/app/_models/Cadastros/Empresas/Empresa';\nimport { FormGroup } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { EmpresaService } from 'src/app/_services/Cadastros/Empresas/empresa.service';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html'\n})\nexport class EmpresaComponent implements OnInit {\n\n  novo = false;\n  editar = false;\n  visualizar = false;\n\n  empresa: Empresa;\n  empresas: Empresa[];\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n\n  paginaAtual = 1;\n  totalRegistros = 0;\n\n  valueCnpjCpfPipe = '';\n\n  idEmpresa: number;\n\n  constructor(\n    private empresaService: EmpresaService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getEmpresas();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getTemplateEmpresa() {\n    return this.empresaService.getEmpresaTemplateStatus();\n  }\n\n  abrirTemplateEmpresa(idEmpresa: number) {\n    this.idEmpresa = idEmpresa;\n    this.empresaService.setEmpresaTemplateStatus(true);\n  }\n\n\n  getEmpresas() {\n    this.empresaService.getAllEmpresa().subscribe(\n      (_EMPRESAS: Empresa[]) => {\n      this.empresas = _EMPRESAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar empresas: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 55%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL2VtcHJlc2EvZW1wcmVzYVRlbXBsYXRlL2VtcHJlc2FUZW1wbGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDhCQUE4QjtBQUNsQyIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy9lbXByZXNhL2VtcHJlc2FUZW1wbGF0ZS9lbXByZXNhVGVtcGxhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC14bCB7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gICAgLyogTmV3IHdpZHRoIGZvciBsYXJnZSBtb2RhbCAqL1xyXG59XHJcbiJdfQ== */\"","module.exports = \"{{abrirTemplate(templateEmpresa)}}\\n<div bsModal #templateEmpresa=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Empresa<label></label>\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateEmpresa)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroEmpresa\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('razaoSocial').errors && \\n                                            cadastroEmpresa.get('razaoSocial').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('razaoSocial').hasError('required') &&cadastroEmpresa.get('razaoSocial').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Nome Fantasia:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('nomeFantasia').errors && \\n                                                          cadastroEmpresa.get('nomeFantasia').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('nomeFantasia').hasError('required') &&cadastroEmpresa.get('nomeFantasia').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"ie\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('cnpjCpf').errors && \\n                      cadastroEmpresa.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroEmpresa.get('cnpjCpf').hasError('required') &&cadastroEmpresa.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('cep').errors && \\n                  cadastroEmpresa.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroEmpresa.get('cep').hasError('required') &&cadastroEmpresa.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('estadoId').hasError('required') && cadastroEmpresa.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('cidadeId').hasError('required') && cadastroEmpresa.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('endereco').errors && \\n                                                                        cadastroEmpresa.get('endereco').touched}\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('endereco').hasError('required') &&cadastroEmpresa.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('bairro').errors && cadastroEmpresa.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroEmpresa.get('bairro').hasError('required') &&cadastroEmpresa.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroEmpresa.get('telefone').errors && \\n                      cadastroEmpresa.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div\\n                *ngIf=\\\"cadastroEmpresa.get('telefone').hasError('required') &&cadastroEmpresa.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateEmpresa)\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.idEmpresa != 0 && this.editar == true\\\" [disabled]=\\\"!cadastroEmpresa.valid\\\"\\n          class=\\\"btn btn-primary\\\" (click)=\\\"salvarEmpresa(templateEmpresa)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.idEmpresa == 0 && this.novo == true\\\" [disabled]=\\\"!cadastroEmpresa.valid\\\"\\n          class=\\\"btn btn-primary\\\" (click)=\\\"salvarEmpresa(templateEmpresa)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, ViewChild, Input, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Empresa } from 'src/app/_models/Cadastros/Empresas/Empresa';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { EmpresaService } from 'src/app/_services/Cadastros/Empresas/empresa.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\n\n@Component({\n  selector: 'app-empresa-template',\n  templateUrl: './empresaTemplate.component.html',\n  styleUrls: ['./empresaTemplate.component.css']\n})\nexport class EmpresaTemplateComponent implements OnInit, AfterViewChecked {\n\n  @Input() idEmpresa: number;\n  @ViewChild('templateEmpresa') templateEmpresa: any;\n\n  novo = false;\n  editar = false;\n\n  cadastroEmpresa: FormGroup;\n  empresa: Empresa;\n\n  status = ['ATIVO', 'INATIVO'];\n  statusSelecionado: string;\n\n  cidades: Cidade[];\n  cidadeIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  templateEnabled = false;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              public dataService: DataService,\n              private cidadeService: CidadeService,\n              private estadoService: EstadoService,\n              private permissaoService: PermissaoService,\n              private changeDetectionRef: ChangeDetectorRef,\n              private empresaService: EmpresaService) {\n              }\n\n  ngOnInit() {\n    this.getEstados();\n    this.estadoIdSelecionado = 11;\n    this.getCidades(this.estadoIdSelecionado);\n    this.validarEmpresa();\n    if (this.idEmpresa !== 0) {\n      this.carregarEmpresa();\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('EMPRESAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarEmpresa() {\n    this.empresa = null;\n    this.empresaService.getEmpresaById(this.idEmpresa)\n    .subscribe(\n    (_EMPRESA: Empresa) => {\n      this.empresa = Object.assign(_EMPRESA);\n\n      this.cadastroEmpresa.patchValue(this.empresa);\n\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Empresa: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n  validarEmpresa() {\n    this.cadastroEmpresa = this.fb.group({\n      id:  [''],\n      razaoSocial: ['', Validators.required],\n      nomeFantasia: ['', Validators.required],\n      telefone: ['', Validators.required],\n      cnpjCpf: ['', Validators.required],\n      ie: [''],\n      estadoId: [0, Validators.required],\n      cidadeId: [0, Validators.required],\n      cep: ['', Validators.required],\n      endereco: ['', Validators.required],\n      bairro: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n\n  salvarEmpresa(template: any) {\n    if (this.idEmpresa === 0) {\n      this.empresa = Object.assign(this.cadastroEmpresa.value, {id: 0});\n      this.empresaService.novaEmpresa(this.empresa).subscribe(\n        () => {\n          this.fecharTemplate(template);\n          this.toastr.success(`Cadastrado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        });\n    } else {\n      this.empresa = Object.assign(this.cadastroEmpresa.value);\n      this.empresaService.editarEmpresa(this.empresa).subscribe(\n        () => {\n          this.toastr.success(`Editado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.empresaService.setEmpresaTemplateStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n      this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n        (_CIDADES: Cidade[]) => {\n        this.cidades = _CIDADES;\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n      });\n    }\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n  }\n\n}\n","module.exports = \"<h2>Formas de Pagamanento</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"abrirTemplateFormaPagamento('NOVO', null, templateFormaPagamento)\\\" tooltip=\\\"Novo\\\"\\n            class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Status</th>\\n          <th style=\\\"text-align: center;width: 100px;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"formasPagamento && formasPagamento.length\\\">\\n        <tr *ngFor=\\\"let forma of formasPagamento | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td style=\\\"white-space: nowrap;\\\">{{ forma.descricao }}</td>\\n          <td>{{ forma.status }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                (click)=\\\"abrirTemplateFormaPagamento('EDITAR', forma, templateFormaPagamento)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!formasPagamento || formasPagamento.length == 0\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhuma Forma de Pagamento encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #templateFormaPagamento=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Forma de Pagamento\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateFormaPagamento.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Descrição:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" formControlName=\\\"descricao\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors &&  cadastroForm.get('descricao').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Status:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ATIVO', 'INATIVO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('status').errors && cadastroForm.get('status').touched}\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n    </div>\\n    <div class=\\\"modal-footer d-flex\\\">\\n      <button class=\\\"btn btn-secondary\\\">\\n        Fechar\\n      </button>\\n      <button *ngIf=\\\"this.modo == 'EDITAR' && this.editar == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"\\n        (click)=\\\"salvarFormaPagamento(templateFormaPagamento)\\\">\\n        Salvar\\n      </button>\\n      <button *ngIf=\\\"this.modo == 'NOVO' && this.novo == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"\\n        (click)=\\\"cadastrarFormaPagamento(templateFormaPagamento)\\\">\\n        Cadastrar\\n      </button>\\n    </div>\\n  </div>\\n\\n</div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-forma-pagamento',\n  templateUrl: './formaPagamento.component.html'\n})\nexport class FormaPagamentoComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  novo = true;\n  editar = true;\n  visualizar = true;\n\n  cadastroForm: FormGroup;\n\n  formasPagamento: FormaPagamento[];\n\n  formaPagamento: FormaPagamento;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  modo = '';\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private formaPagamentoService: FormaPagamentoService,\n              private permissaoService: PermissaoService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getFormaPagamento();\n    this.validarForm();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('FORMA DE PAGAMENTO', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('FORMA DE PAGAMENTO', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('FORMA DE PAGAMENTO', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  carregarFormaPagamento(formaPagamento: FormaPagamento) {\n    this.formaPagamento = Object.assign({}, formaPagamento);\n    this.cadastroForm.patchValue(this.formaPagamento);\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  abrirTemplateFormaPagamento(modo: string, formaPagamento: FormaPagamento, template: any) {\n    this.modo = modo;\n    if (modo === 'NOVO') {\n      this.cadastroForm.reset();\n    } else if (modo === 'EDITAR') {\n      this.carregarFormaPagamento(formaPagamento);\n    }\n    template.show();\n  }\n\n  cadastrarFormaPagamento(template: any) {\n    this.formaPagamento = Object.assign(this.cadastroForm.value, {id: 0});\n    this.formaPagamentoService.novoFormaPagamento(this.formaPagamento).subscribe(\n      () => {\n        this.getFormaPagamento();\n        template.hide();\n        this.toastr.success(`Cadastrado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      });\n  }\n\n  salvarFormaPagamento(template: any) {\n    this.formaPagamento = Object.assign(this.cadastroForm.value);\n    this.formaPagamentoService.editarFormaPagamento(this.formaPagamento).subscribe(\n      () => {\n        this.getFormaPagamento();\n        template.hide();\n        this.toastr.success(`Editado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamento: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Pessoa</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome :(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nome').errors && \\n                                                        cadastroForm.get('nome').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('nome').hasError('required') &&cadastroForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Tipo(s):(*)</label>\\n              <ng-select [items]=\\\"tiposPessoa\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarPessoaTipos(tiposIdSelecionado)\\\" [(ngModel)]=\\\"tiposIdSelecionado\\\"\\n                formControlName=\\\"pessoaTipos\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('pessoaTipos').hasError('required') && cadastroForm.get('pessoaTipos').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Tipo(s) é Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo Obrigatório.\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\nimport { PessoaTipos } from 'src/app/_models/Cadastros/Pessoas/PessoaTipos';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-editar-pessoa',\n  templateUrl: './editarPessoa.component.html'\n})\nexport class EditarPessoaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  editar = false;\n  cadastroForm: FormGroup;\n  pessoa: Pessoa;\n  idPessoa: number;\n\n  status = ['ATIVO', 'INATIVO'];\n  statusSelecionado: string;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  tiposPessoa: TiposPessoa[];\n  tiposIdSelecionado: any;\n  pessoaTipos: PessoaTipos[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private pessoaService: PessoaService,\n              public router: ActivatedRoute,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.idPessoa = +this.router.snapshot.paramMap.get('id');\n    this.getTipos();\n    this.getEstados();\n    this.carregarPessoa();\n    this.validarForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n\n  carregarPessoa() {\n    this.pessoaService.getPessoaById(this.idPessoa)\n      .subscribe(\n        (_PESSOA: Pessoa) => {\n          this.pessoa = Object.assign({}, _PESSOA);\n          this.cadastroForm.patchValue(this.pessoa);\n\n          this.estadoIdSelecionado = this.pessoa.estadoId;\n          this.getCidades(this.estadoIdSelecionado);\n          this.cidadeIdSelecionado = this.pessoa.cidadeId;\n\n          this.tiposIdSelecionado = [];\n          this.pessoaTipos = [];\n          this.pessoa.pessoaTipos.forEach(tipos => {\n            this.pessoaTipos.push(tipos);\n            this.tiposIdSelecionado.push(tipos.tiposPessoaId);\n          });\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Pessoa: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        razaoSocial: [''],\n        nome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        pessoaTipos: [this.fb.group({\n          pessoasId: [''],\n          tiposPessoaId: ['']\n        }), Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  salvarAlteracoes() {\n    this.pessoa = Object.assign({ id: this.pessoa.id }, this.cadastroForm.value);\n    this.pessoa.pessoaTipos = [];\n    this.pessoaTipos.forEach(tipos => {\n      this.pessoa.pessoaTipos.push(tipos);\n    });\n    this.pessoaService.editarPessoa(this.pessoa).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarPessoa();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n\n  adicionarPessoaTipos(tiposSelecionados: any) {\n    this.pessoaTipos = [];\n    tiposSelecionados.forEach(tipo => {\n      this.pessoaTipos.push(Object.assign({ pessoasId: 0, tiposPessoaId: tipo}));\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n}\n","module.exports = \"<h2>Pessoa</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n          <div class=\\\"row mt-4\\\">\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cnpj/Cpf:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" formControlName=\\\"cnpjCpf\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cnpjCpf').errors && \\n                  cadastroForm.get('cnpjCpf').touched}\\\" [ngModel]=\\\"valueCnpjCpfPipe | cnpjCpfPipePipe\\\"\\n                (ngModelChange)=\\\"valueCnpjCpfPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cnpjCpf').hasError('required') &&cadastroForm.get('cnpjCpf').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Obrigatório o preenchimento.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Inscrição Estadual:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"16\\\" [ngModel]=\\\"valueIePipe | iePipePipe\\\"\\n                (ngModelChange)=\\\"valueIePipe=$event\\\" formControlName=\\\"iE\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome :(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"nome\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('nome').errors && \\n                                                        cadastroForm.get('nome').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('nome').hasError('required') &&cadastroForm.get('nome').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Nome é obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Razão Social:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('razaoSocial').errors && \\n                                        cadastroForm.get('razaoSocial').touched}\\\" />\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Tipo(s):(*)</label>\\n              <ng-select [items]=\\\"tiposPessoa\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarPessoaTipos(tiposIdSelecionado)\\\" [(ngModel)]=\\\"tiposIdSelecionado\\\"\\n                formControlName=\\\"pessoaTipos\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('pessoaTipos').hasError('required') && cadastroForm.get('pessoaTipos').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Tipo(s) é Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Cep:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"cep\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('cep').errors && \\n              cadastroForm.get('cep').touched}\\\" [ngModel]=\\\"valueCepPipe | cepPipePipe\\\"\\n                (ngModelChange)=\\\"valueCepPipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('cep').hasError('required') &&cadastroForm.get('cep').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Estado:(*)</label>\\n              <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" required (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n                (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" formControlName=\\\"estadoId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('estadoId').hasError('required') && cadastroForm.get('estadoId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cidade:(*)</label>\\n              <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"cidadeIdSelecionado\\\" formControlName=\\\"cidadeId\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('cidadeId').hasError('required') && cadastroForm.get('cidadeId').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Endereço:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"endereco\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('endereco').errors && \\n                                                                        cadastroForm.get('endereco').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('endereco').hasError('required') &&cadastroForm.get('endereco').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Bairro:(*)</label>\\n              <input class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" formControlName=\\\"bairro\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('bairro').errors && cadastroForm.get('bairro').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('bairro').hasError('required') &&cadastroForm.get('bairro').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Email:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Telefone:(*)</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"14\\\" formControlName=\\\"telefone\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('telefone').errors && \\n                  cadastroForm.get('telefone').touched}\\\" [ngModel]=\\\"valueTelefonePipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueTelefonePipe=$event\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('telefone').hasError('required') &&cadastroForm.get('telefone').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Celular:</label>\\n              <input telefoneMask class=\\\"form-control\\\" maxlength=\\\"14\\\" [ngModel]=\\\"valueCelularPipe | celularPipePipe\\\"\\n                (ngModelChange)=\\\"valueCelularPipe=$event\\\" type=\\\"tel\\\" formControlName=\\\"celular\\\" />\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" [(ngModel)]=\\\"statusSelecionado\\\" formControlName=\\\"status\\\">\\n              </ng-select>\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Campo Obrigatório.\\n            </div>\\n          </div>\\n\\n        </tab>\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarPessoa()\\\" tooltip=\\\"Novo Pessoa\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { PessoaTipos } from 'src/app/_models/Cadastros/Pessoas/PessoaTipos';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { Router } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-novo-pessoa',\n  templateUrl: './novoPessoa.component.html'\n})\nexport class NovoPessoaComponent implements OnInit, AfterViewChecked {\n\n  cadastroForm: FormGroup;\n  pessoa: Pessoa;\n\n  status = ['ATIVO', 'INATIVO'];\n  statusSelecionado: string;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  cidadeIdSelecionado: any;\n  cidades: Cidade[];\n\n  tiposPessoa: TiposPessoa[];\n  tiposIdSelecionado: any;\n  pessoaTipos: PessoaTipos[];\n\n  valueCnpjCpfPipe = '';\n  valueCepPipe = '';\n  valueCelularPipe = '';\n  valueTelefonePipe = '';\n  valueIePipe = '';\n\n  constructor(public fb: FormBuilder,\n              private estadoService: EstadoService,\n              private cidadeService: CidadeService,\n              private toastr: ToastrService,\n              private pessoaService: PessoaService,\n              public router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getTipos();\n    this.getEstados();\n    this.validarForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        razaoSocial: [''],\n        nome: ['', Validators.required],\n        telefone: ['', Validators.required],\n        celular: [''],\n        cnpjCpf: ['', Validators.required],\n        iE: [''],\n        estadoId: [0, Validators.required],\n        cidadeId: [0, Validators.required],\n        cep: ['', Validators.required],\n        endereco: ['', Validators.required],\n        bairro: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        pessoaTipos: [this.fb.group({\n          pessoasId: [''],\n          tiposPessoaId: ['']\n        }), Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n\n  adicionarPessoaTipos(tiposSelecionados: any) {\n    this.pessoaTipos = [];\n    tiposSelecionados.forEach(tipo => {\n      this.pessoaTipos.push(Object.assign({ pessoasId: 0, tiposPessoaId: tipo}));\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n}\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.cadastroForm.patchValue({\n      cidadeId: ''\n    });\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.cadastroForm.patchValue({\n      estadoId: '',\n      cidadeId: ''\n    });\n  }\n\n  cadastrarPessoa() {\n    if (this.cadastroForm.valid) {\n      this.pessoa = Object.assign(this.cadastroForm.value, {id: 0, pessoaTipos: null});\n      this.pessoaService.novoPessoa(this.pessoa).subscribe(\n        () => {\n\n          this.pessoaService.getIdUltimaPessoa().subscribe(\n            (_PESSOA: Pessoa) => {\n              const IdUltimaPessoa = _PESSOA.id;\n              this.pessoa = Object.assign(this.cadastroForm.value, {id: IdUltimaPessoa});\n\n              this.pessoa.pessoaTipos = [];\n              this.pessoaTipos.forEach(tipos => {\n                this.pessoa.pessoaTipos.push(Object.assign({ pessoasId: IdUltimaPessoa , tiposPessoaId: tipos.tiposPessoaId}));\n              });\n\n              this.pessoaService.editarPessoa(this.pessoa).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/pessoas/editar/${IdUltimaPessoa}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Pessoas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Filtrar por:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n          (change)=\\\"setFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado != 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <div *ngIf=\\\"filtroSelecionado == 'TIPO'\\\">\\n          <label>Tipo:</label>\\n          <ng-select [items]=\\\"tiposPessoa\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"descricao\\\"\\n            [(ngModel)]=\\\"filtroLista\\\" name=\\\"tipoFiltro\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'NOME'\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n\\n        <div *ngIf=\\\"filtroSelecionado == 'CNPJ/CPF'\\\">\\n          <label>Filtro:</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" maxlength=\\\"18\\\" placeholder=\\\"...\\\" name=\\\"filtro\\\"\\n            [ngModel]=\\\"filtroLista | cnpjCpfPipePipe\\\" (ngModelChange)=\\\"filtroLista=$event\\\" />\\n        </div>\\n      </div>\\n\\n\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-1\\\">\\n        <label>Estado:</label>\\n        <ng-select [items]=\\\"estados\\\" bindLabel=\\\"uf\\\" (clear)=\\\"limparEstado()\\\" bindValue=\\\"id\\\"\\n          (change)=\\\"getCidades(estadoIdSelecionado)\\\" [(ngModel)]=\\\"estadoIdSelecionado\\\" name=\\\"estadoFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div *ngIf=\\\"filtroSelecionado == 'CIDADE'\\\" class=\\\"form-group col-md-3\\\">\\n        <label>Cidade:</label>\\n        <ng-select [items]=\\\"cidades\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" (clear)=\\\"limparCidade()\\\"\\n          bindValue=\\\"id\\\" [(ngModel)]=\\\"filtroLista\\\" name=\\\"cidadeFiltro\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label>Status:</label>\\n        <ng-select [clearable]=\\\"false\\\" [items]=\\\"status\\\" name=\\\"statusFiltro\\\" [(ngModel)]=\\\"statusFiltroSelecionado\\\"\\n          (change)=\\\"setStatusFiltroSelecionado($event)\\\">\\n        </ng-select>\\n      </div>\\n      <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/pessoas','novo']\\\" tooltip=\\\"Nova Pessoa\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Pessoa\\n        </a>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"container-fluid table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Nome</th>\\n          <th>Tipo(s)</th>\\n          <th>Telefone</th>\\n          <th>Celular</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"pessoas && pessoas.length\\\">\\n        <tr\\n          *ngFor=\\\"let pessoa of pessoasFiltrados | paginate: { itemsPerPage: 5, currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ pessoa.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.nome }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">\\n            <span style=\\\"margin-right:5px;\\\" class=\\\"label label-primary\\\" *ngFor=\\\"let pTipos of pessoa.pessoaTipos\\\">\\n              {{ pTipos.tiposPessoa.descricao }}\\n            </span>&nbsp;\\n          </td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.telefone }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ pessoa.celular }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir == true\\\" class=\\\"btn btn-sm btn-danger\\\" tooltip=\\\"Excluir\\\"\\n                (click)=\\\"excluirPessoa(pessoa, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\" [routerLink]=\\\"['/pessoas','editar', pessoa.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!pessoas\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum cliente encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"clientePagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Pessoa\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirPessoa}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmarExclusao(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Cidade } from 'src/app/_models/Cadastros/Uteis/Cidade';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { Estado } from 'src/app/_models/Cadastros/Uteis/Estado';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { CidadeService } from 'src/app/_services/Cadastros/Uteis/cidade.service';\nimport { EstadoService } from 'src/app/_services/Cadastros/Uteis/estado.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { TiposPessoa } from 'src/app/_models/Cadastros/Pessoas/TiposPessoa';\n\n@Component({\n  selector: 'app-pessoa',\n  templateUrl: './pessoa.component.html'\n})\nexport class PessoaComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  pessoasFiltrados: Pessoa[];\n  pessoa: Pessoa;\n  pessoas: Pessoa[];\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirPessoa = '';\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  status = ['ATIVO', 'INATIVO', 'TODOS'];\n  statusFiltroSelecionado = 'ATIVO';\n\n  filtrarPor = ['NOME', 'TIPO', 'CNPJ/CPF', 'CIDADE'];\n  filtroSelecionado = 'NOME';\n\n  cidades: Cidade[];\n  cidadeIdSelecionado: any;\n\n  estados: Estado[];\n  estadoIdSelecionado: any;\n\n  tiposPessoa: TiposPessoa[];\n  tipoIdSelecionado: any;\n\n  filtroRetorno: any;\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n\n  valueCnpjCpfPipe = '';\n\n  constructor(\n    private pessoaService: PessoaService,\n    private cidadeService: CidadeService,\n    private estadoService: EstadoService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getEstados();\n    this.estadoIdSelecionado = 11;\n    this.getCidades(this.estadoIdSelecionado);\n    this.getTipos();\n    this.getPessoas();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PESSOAS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getTipos() {\n    this.pessoaService.getAllTiposPessoa().subscribe(\n      (_TIPOS: TiposPessoa[]) => {\n      this.tiposPessoa = _TIPOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Tipos: ${error.error}`);\n    });\n}\n\n  excluirPessoa(pessoa: Pessoa, template: any) {\n    this.pessoa = pessoa;\n    this.bodyExcluirPessoa = `Tem certeza que deseja excluir : ${pessoa.nome}, Código: ${pessoa.id}?`;\n    template.show();\n  }\n\n  confirmarExclusao(template: any) {\n    this.pessoaService.excluirPessoa(this.pessoa.id).subscribe(\n    () => {\n        template.hide();\n        this.getPessoas();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  get filtroLista(): string {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.pessoasFiltrados = this.filtrarPessoas(this._filtroLista);\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n  }\n\n  setStatusFiltroSelecionado(valor: any) {\n    this.statusFiltroSelecionado = valor;\n    this.pessoasFiltrados = this.filtrarPessoas(this.filtroLista);\n  }\n\n  filtrarPessoas(filtrarPor: string): Pessoa[] {\n    if (this.statusFiltroSelecionado !== 'TODOS') {\n      this.filtroRetorno = this.pessoas.filter(_PESSOA => _PESSOA.status === this.statusFiltroSelecionado);\n    } else {\n      this.filtroRetorno = this.pessoas;\n    }\n    if (filtrarPor) {\n      if (this.filtroSelecionado === 'NOME') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.nome.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'TIPO') {\n        this.filtroRetorno = this.filtroRetorno;\n      } else if (this.filtroSelecionado === 'CNPJ/CPF') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.cnpjCpf.toLocaleUpperCase().indexOf(filtrarPor.toLocaleUpperCase()) !== -1);\n      } else if (this.filtroSelecionado === 'CIDADE') {\n        this.filtroRetorno = this.filtroRetorno\n                            .filter(pessoa => pessoa.cidadeId === filtrarPor);\n      }\n    }\n    this.totalRegistros = this.filtroRetorno.length;\n    return this.filtroRetorno;\n  }\n\n  getPessoas() {\n    this.pessoaService.getAllPessoa().subscribe(\n      (_PESSOAS: Pessoa[]) => {\n      this.pessoas = _PESSOAS;\n      this.pessoasFiltrados = this.filtrarPessoas(this.filtroLista);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar pessoas: ${error.error}`);\n    });\n  }\n\n  getEstados() {\n    this.estadoService.getAllEstados().subscribe(\n      (_ESTADOS: Estado[]) => {\n      this.estados = _ESTADOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar estados: ${error.error}`);\n    });\n  }\n\n  getCidades(EstadoId: number) {\n    if (EstadoId != null) {\n    this.cidadeService.getCidadeByEstadoId(EstadoId).subscribe(\n      (_CIDADES: Cidade[]) => {\n      this.cidades = _CIDADES;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar cidades: ${error.error}`);\n    });\n  }\n  }\n\n  limparCidade() {\n    this.filtroLista = '';\n  }\n\n  limparEstado() {\n    this.cidades = [];\n    this.estadoIdSelecionado = [];\n    this.filtroLista = '';\n  }\n\n}\n","module.exports = \"<h2>Plano de Contas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"abrirTemplatePlanoConta('NOVO', null, templatePlanoConta)\\\" tooltip=\\\"Novo\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Conta\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\"class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Nível</th>\\n          <th>Descrição</th>\\n          <th>Tipo</th>\\n          <th>Categoria</th>\\n          <th>Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"listaContasFiltradas && listaContasFiltradas.length\\\">\\n        <tr *ngFor=\\\"let conta of listaContasFiltradas | paginate: { itemsPerPage: 100,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ conta.nivel }}</td>\\n          <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\" style=\\\"white-space: nowrap;\\\">{{ conta.espacamento }}{{ conta.descricao }}</td>\\n          <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\">{{ conta.tipo }}</td>\\n          <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\">{{ conta.categoria }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                (click)=\\\"abrirTemplatePlanoConta('EDITAR', conta, templatePlanoConta)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!planoContas\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum Plano de Conta encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #templatePlanoConta=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Plano de Conta\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templatePlanoConta.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Descrição:(*)</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n              class=\\\"form-control\\\" formControlName=\\\"descricao\\\" \\n              [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors && \\n                cadastroForm.get('descricao').touched}\\\"/>\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Conta Superior:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\" (change)=\\\"setTipoConta($event)\\\" [(ngModel)]=\\\"planoContaIdSuperiorSelecionado\\\" formControlName=\\\"planoContasId\\\">\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Nível:</b> {{item.nivel}}</small> <br>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                  <small><b>Categoria:</b> {{item.categoria}}</small>\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Tipo:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['RECEITA', 'DESPESA', 'MOVIMENTO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('tipo').value\\\" formControlName=\\\"tipo\\\" \\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('tipo').errors && cadastroForm.get('tipo').touched}\\\">\\n              <div *ngIf=\\\"cadastroForm.get('tipo').hasError('required') &&cadastroForm.get('tipo').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Categoria:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ANALÍTICA', 'SINTÉTICA']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('categoria').value\\\" formControlName=\\\"categoria\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('categoria').errors && \\n                cadastroForm.get('categoria').touched}\\\">\\n              <div *ngIf=\\\"cadastroForm.get('categoria').hasError('required') &&cadastroForm.get('categoria').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Status:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ATIVO', 'INATIVO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('status').errors && cadastroForm.get('status').touched}\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button (click)=\\\"templatePlanoConta.hide()\\\" class=\\\"btn btn-secondary\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'EDITAR' && this.editar == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"salvarPlanoConta(templatePlanoConta)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'NOVO' && this.novo == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"cadastrarPlanoConta(templatePlanoConta)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-plano-conta',\n  templateUrl: './planoConta.component.html'\n})\nexport class PlanoContaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  novo = true;\n  editar = true;\n  visualizar = true;\n\n  cadastroForm: FormGroup;\n\n  planoContas: PlanoContas[];\n  listaContasFiltradas: PlanoContas[];\n\n  planoConta: PlanoContas;\n  planoContaIdSuperiorSelecionado = 0;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  disabledTipo = false;\n  modo = '';\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: Router,\n              private permissaoService: PermissaoService,\n              private planoContaService: PlanoContaService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getPlanoContas();\n    this.validarForm();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE CONTAS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE CONTAS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PLANO DE CONTAS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  carregarPlanoConta(planoConta: PlanoContas) {\n    this.planoConta = Object.assign({}, planoConta);\n    this.cadastroForm.patchValue(this.planoConta);\n    this.setTipoConta(this.planoConta);\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required],\n        tipo: ['', Validators.required],\n        categoria: ['', Validators.required],\n        nivel: [''],\n        planoContasId: [''],\n        status: ['', Validators.required]\n    });\n  }\n\n  abrirTemplatePlanoConta(modo: string, planoConta: PlanoContas, template: any) {\n    this.planoContaIdSuperiorSelecionado = 0;\n    this.modo = modo;\n    if (modo === 'NOVO') {\n      this.validarForm();\n    } else if (modo === 'EDITAR') {\n      this.carregarPlanoConta(planoConta);\n    }\n    template.show();\n  }\n\n  setTipoConta(contaSelecionada: any) {\n    if (contaSelecionada) {\n      this.cadastroForm.get('tipo').setValue(contaSelecionada.tipo);\n    } else {\n      this.cadastroForm.get('tipo').setValue(null);\n    }\n  }\n\n  criarNivel(_PLANOFILHOS: any, raiz: boolean): string {\n    let qtdFilhos = 0;\n    const nivelPai = _PLANOFILHOS.nivel;\n    if (raiz === false) {\n      qtdFilhos = _PLANOFILHOS.planoConta.length;\n      const nivelFilho = qtdFilhos + 1;\n      if (nivelPai.length === 7) {\n        return `${nivelPai}.` + (`00${nivelFilho}`).slice(-2);\n      } else if (nivelPai.length === 10) {\n        return `${nivelPai}.` + (`0000${nivelFilho}`).slice(-4);\n      } else {\n        return `${nivelPai}.${nivelFilho}`;\n      }\n    } else {\n      qtdFilhos = _PLANOFILHOS.filter(c => c.planoContasId === null).length;\n      qtdFilhos = qtdFilhos + 1;\n      const nivelFilho = qtdFilhos.toString();\n      return nivelFilho;\n    }\n  }\n\n  cadastrarPlanoConta(template: any) {\n    let nivelFilho = '';\n    if (!this.planoContaIdSuperiorSelecionado) {\n      this.planoContaIdSuperiorSelecionado = 0;\n    }\n    this.planoContaService.getPlanoContasFilhosById(this.planoContaIdSuperiorSelecionado).subscribe(\n      (_PLANOFILHOS: PlanoContas) => {\n      if (_PLANOFILHOS) {\n        nivelFilho = this.criarNivel(_PLANOFILHOS, false);\n      } else {\n        nivelFilho = this.criarNivel(this.planoContas, true);\n        this.planoContaIdSuperiorSelecionado = null;\n      }\n      this.planoConta = Object.assign(this.cadastroForm.value,\n        {id: 0, nivel: nivelFilho, planoContasId: this.planoContaIdSuperiorSelecionado});\n\n      this.planoContaService.novoPlanoConta(this.planoConta).subscribe(\n        () => {\n          this.getPlanoContas();\n          template.hide();\n          this.toastr.success(`Cadastrado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n\n    });\n  }\n\n  salvarPlanoConta(template: any) {\n    this.planoConta = Object.assign(this.cadastroForm.value,\n      {tipo: this.cadastroForm.get('tipo').value, planosContaId: this.planoContaIdSuperiorSelecionado});\n    this.planoContaService.editarPlanoConta(this.planoConta).subscribe(\n      () => {\n        this.getPlanoContas();\n        template.hide();\n        this.toastr.success(`Editado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  async filtrarPlanoContas(conta: PlanoContas) {\n    let espaco = '';\n    for (let index = 0; index < conta.nivel.length; index++) {\n      espaco += '  ';\n      index = index;\n    }\n    conta = Object.assign(conta, { espacamento: espaco,\n      negrito: (conta.categoria === 'SINTÉTICA') ? 'bold' : 'regular'});\n    this.listaContasFiltradas.push(conta);\n    if (conta.planoConta) {\n      conta.planoConta.forEach((contaFilho) => {\n        this.filtrarPlanoContas(contaFilho);\n      });\n    }\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContas = _PLANOS;\n      this.listaContasFiltradas = [];\n      console.log(this.planoContas.filter(c => c.planoContasId === null));\n      this.planoContas.filter(c => c.planoContasId === null).forEach((conta) => {\n        this.filtrarPlanoContas(conta);\n      });\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 45%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL3BsYW5vUGFnYW1lbnRvL3BsYW5vUGFnYW1lbnRvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsOEJBQThCO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvY2FkYXN0cm9zL3BsYW5vUGFnYW1lbnRvL3BsYW5vUGFnYW1lbnRvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwteGwge1xyXG4gICAgd2lkdGg6IDQ1JTtcclxuICAgIC8qIE5ldyB3aWR0aCBmb3IgbGFyZ2UgbW9kYWwgKi9cclxufVxyXG4iXX0= */\"","module.exports = \"<h2>Planos de Pagamanento</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;margin-bottom: 15px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"abrirTemplatePlanoPagamento('NOVO', null, templatePlanoPagamento)\\\" tooltip=\\\"Novo\\\"\\n            class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Status</th>\\n          <th style=\\\"text-align: center;width: 100px;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"planosPagamento && planosPagamento.length\\\">\\n        <tr *ngFor=\\\"let plano of planosPagamento | paginate: { itemsPerPage: 100,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td style=\\\"white-space: nowrap;\\\">{{ plano.descricao }}</td>\\n          <td>{{ plano.status }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                (click)=\\\"abrirTemplatePlanoPagamento('EDITAR', plano, templatePlanoPagamento)\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!planosPagamento || planosPagamento.length == 0\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhuma Plano de Pagamento encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #templatePlanoPagamento=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Plano de Pagamento\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templatePlanoPagamento.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-5\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Forma de Pagamento:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"formasPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"formaPagamentoIdSelecionado\\\" formControlName=\\\"formaPagamentoId\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('formaPagamentoId').errors && cadastroForm.get('formaPagamentoId').touched}\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('formaPagamentoId').hasError('required') &&cadastroForm.get('formaPagamentoId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">N° de Parcelas:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\"\\n                [items]=\\\"['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('qtdParcelas').value\\\" formControlName=\\\"qtdParcelas\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('qtdParcelas').errors && cadastroForm.get('qtdParcelas').touched}\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('qtdParcelas').hasError('required') &&cadastroForm.get('qtdParcelas').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Prazo 1ª Parcela:</label>\\n              <input currencyMask min=\\\"0\\\" max=\\\"120\\\" [options]=\\\"{ prefix: '',thousands: '', precision: 0 }\\\"\\n                class=\\\"form-control\\\" formControlName=\\\"prazoPrimeiraParcela\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('prazoPrimeiraParcela').errors &&  cadastroForm.get('prazoPrimeiraParcela').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroForm.get('prazoPrimeiraParcela').hasError('required') &&cadastroForm.get('prazoPrimeiraParcela').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('prazoPrimeiraParcela').hasError('max') || cadastroForm.get('prazoPrimeiraParcela').hasError('min') && cadastroForm.get('prazoPrimeiraParcela').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0 e menor que 120.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Intervalo Parcelas:</label>\\n              <input currencyMask min=\\\"0\\\" max=\\\"365\\\" [options]=\\\"{ prefix: '',thousands: '', precision: 0 }\\\"\\n                class=\\\"form-control\\\" formControlName=\\\"intervaloParcelas\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('intervaloParcelas').errors &&  cadastroForm.get('intervaloParcelas').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroForm.get('intervaloParcelas').hasError('required') &&cadastroForm.get('intervaloParcelas').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('intervaloParcelas').hasError('max') || cadastroForm.get('intervaloParcelas').hasError('min') && cadastroForm.get('intervaloParcelas').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0 e menor que 365.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Juros:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" min=\\\"0.0\\\" max=\\\"100.0\\\" currencyMask formControlName=\\\"juros\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('juros').errors &&  cadastroForm.get('juros').touched}\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '', precision: 2 }\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-percent\\\"></i></span>\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('juros').hasError('required') &&cadastroForm.get('juros').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('juros').hasError('max') || cadastroForm.get('juros').hasError('min') && cadastroForm.get('juros').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0 e menor que 100.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Desconto:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" min=\\\"0.0\\\" max=\\\"100.0\\\" currencyMask formControlName=\\\"desconto\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('desconto').errors &&  cadastroForm.get('desconto').touched}\\\"\\n                  [options]=\\\"{ prefix: '', precision: 2 }\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-percent\\\"></i></span>\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('desconto').hasError('required') && cadastroForm.get('desconto').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('desconto').hasError('max') || cadastroForm.get('desconto').hasError('min') && cadastroForm.get('desconto').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0 e menor que 100.\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Conta de Recebimentos:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('planoContasId').errors && cadastroForm.get('planoContasId').touched}\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroForm.get('planoContasId').hasError('required') &&cadastroForm.get('planoContasId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Descrição:</label>\\n              <input type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" formControlName=\\\"descricao\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors &&  cadastroForm.get('descricao').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Status:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"['ATIVO', 'INATIVO']\\\" [clearable]=\\\"false\\\"\\n                [ngModel]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('status').errors && cadastroForm.get('status').touched}\\\">\\n              </ng-select>\\n              <div *ngIf=\\\"cadastroForm.get('status').hasError('required') &&cadastroForm.get('status').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templatePlanoPagamento.hide()\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'EDITAR' && this.editar == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarPlanoPagamento(templatePlanoPagamento)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.modo == 'NOVO' && this.novo == true\\\" [disabled]=\\\"!cadastroForm.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"cadastrarPlanoPagamento(templatePlanoPagamento)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { ToastrService } from 'ngx-toastr';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-plano-pagamento',\n  templateUrl: './planoPagamento.component.html',\n  styleUrls: ['./planoPagamento.component.css']\n})\nexport class PlanoPagamentoComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  novo = true;\n  editar = true;\n  visualizar = true;\n\n  cadastroForm: FormGroup;\n\n  planosPagamento: PlanoPagamento[];\n\n  planoPagamento: PlanoPagamento;\n\n  formasPagamento: FormaPagamento[];\n  formaPagamentoIdSelecionado = 0;\n\n  planoContas: PlanoContas[];\n  planoContasIdSelecionado = 0;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  modo = '';\n\n  descricaoSugestao: string;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private planoPagamentoService: PlanoPagamentoService,\n              private formaPagamentoService: FormaPagamentoService,\n              private planoContaService: PlanoContaService,\n              private permissaoService: PermissaoService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getPlanoPagamento();\n    this.getPlanoContas();\n    this.getFormaPagamento();\n    this.validarForm();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('CHEQUES PRE-DATADO', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  carregarPlanoPagamento(planoPagamento: PlanoPagamento) {\n    this.planoPagamento = Object.assign({}, planoPagamento);\n    this.cadastroForm.patchValue(this.planoPagamento);\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        formaPagamentoId: ['', Validators.required],\n        descricao: ['', Validators.required],\n        qtdParcelas: ['', Validators.required],\n        prazoPrimeiraParcela: ['', [Validators.required, Validators.max(120), Validators.min(0)]],\n        intervaloParcelas: ['', [Validators.required, Validators.max(365), Validators.min(0)]],\n        juros: [0, [Validators.required, Validators.max(100), Validators.min(0)]],\n        desconto: [0, [Validators.required, Validators.max(100), Validators.min(0)]],\n        planoContasId: ['', Validators.required],\n        status: ['', Validators.required]\n    });\n  }\n\n  abrirTemplatePlanoPagamento(modo: string, planoPagamento: PlanoPagamento, template: any) {\n    this.modo = modo;\n    if (modo === 'NOVO') {\n      this.cadastroForm.reset();\n    } else if (modo === 'EDITAR') {\n      this.carregarPlanoPagamento(planoPagamento);\n    }\n    template.show();\n  }\n\n  cadastrarPlanoPagamento(template: any) {\n    this.planoPagamento = Object.assign(this.cadastroForm.value, {id: 0,\n       formaPagamentoId: this.formaPagamentoIdSelecionado,\n       planoContasId: this.planoContasIdSelecionado\n      });\n    this.planoPagamentoService.novoPlanoPagamento(this.planoPagamento).subscribe(\n      () => {\n        this.getPlanoPagamento();\n        template.hide();\n        this.toastr.success(`Cadastrado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      });\n  }\n\n  salvarPlanoPagamento(template: any) {\n    this.planoPagamento = Object.assign(this.cadastroForm.value, { formaPagamentoId: this.formaPagamentoIdSelecionado});\n    this.planoPagamentoService.editarPlanoPagamento(this.planoPagamento).subscribe(\n      () => {\n        this.getPlanoPagamento();\n        template.hide();\n        this.toastr.success(`Editado com Sucesso!`);\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_FORMAS: PlanoPagamento[]) => {\n      this.planosPagamento = _FORMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamentos: ${error.error}`);\n    });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContas = _PLANOS.filter(c => c.tipo === 'MOVIMENTO' && c.categoria === 'ANALÍTICA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Plano de Contas: ${error.error}`);\n    });\n  }\n\n\n}\n","module.exports = \"<h2>Produto</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Descrição:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"descricao\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors && \\n                                        cadastroForm.get('descricao').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </tab>\\n\\n      <tab heading=\\\"Produto Itens\\\" style=\\\"margin-top: 20px;\\\">\\n        <div style=\\\"margin-right: 15px;margin-bottom: 10px;\\\" class=\\\"pull-right\\\">\\n          <a (click)=\\\"novoItem(templateItem)\\\" tooltip=\\\"Novo Item\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Item\\n          </a>\\n        </div>\\n\\n        <table class=\\\"table table-striped table-bordered mt-3\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th>Id</th>\\n              <th>Descrição</th>\\n              <th>Tipo</th>\\n              <th style=\\\"text-align: center;\\\">Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"produtoItens && produtoItens.length\\\">\\n            <tr *ngFor=\\\"let Item of produtoItens\\\">\\n              <td>{{ Item.id }}</td>\\n              <td style=\\\"white-space: nowrap;\\\">{{ Item.descricao }}</td>\\n              <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem == 'RECEITA'\\\" class=\\\"label label-info\\\">\\n                  {{ Item.tipoItem }}\\n                </span>\\n                <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem != 'RECEITA'\\\" class=\\\"label label-danger\\\">\\n                  {{ Item.tipoItem }}\\n                </span>\\n                <span style=\\\"margin-left: 5px;margin-top:0px;\\\" *ngIf=\\\"Item.tipoItem != 'RECEITA'\\\"\\n                  class=\\\"label label-warning\\\">\\n                  {{ Item.subTipoItem }}\\n                </span>\\n              </td>\\n              <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                <div class=\\\"btn-group\\\">\\n                  <a (click)=\\\"editarItem(templateItem, Item)\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                  </a>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n\\n          <tfoot *ngIf=\\\"!produtoItens\\\">\\n            <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n            <h4>\\n              Nenhum Item encontrado!\\n            </h4>\\n          </tfoot>\\n        </table>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracoes()\\\" tooltip=\\\"Salvar\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n\\n<div bsModal #templateItem=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog \\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Item\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateItem.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroItemForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>Tipo:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"tipos\\\" [(ngModel)]=\\\"tipoSelecionado\\\" formControlName=\\\"tipoItem\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('tipoItem').hasError('required') &&cadastroItemForm.get('tipoItem').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"tipoSelecionado == 'DESPESA'\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>SubTipo:</label>\\n              <ng-select [clearable]=\\\"false\\\" [items]=\\\"subTipos\\\" [(ngModel)]=\\\"subTipoSelecionado\\\"\\n                formControlName=\\\"subTipoItem\\\">\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('subTipoItem').hasError('required') &&cadastroItemForm.get('subTipoItem').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"tipoSelecionado == 'DESPESA'\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>Centro de Despesa:</label>\\n              <ng-select  [clearable]=\\\"false\\\" [items]=\\\"centrosDespesa\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"centroDespesaIdSelecionado\\\"\\n                formControlName=\\\"centroDespesaId\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"tipoSelecionado == 'RECEITA'\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-8\\\">\\n              <label>Centro de Receita:</label>\\n              <ng-select  [clearable]=\\\"false\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" [items]=\\\"centrosReceita\\\" [(ngModel)]=\\\"centroReceitaIdSelecionado\\\"\\n                formControlName=\\\"centroReceitaId\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"tipoSelecionado == 'RECEITA' || tipoSelecionado == 'DESPESA' \\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-10\\\">\\n              <label>Plano de Conta:</label>\\n\\n              <ng-select  *ngIf=\\\"tipoSelecionado == 'RECEITA'\\\" style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasReceita\\\" bindLabel=\\\"descricao\\\" required\\n                  bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\">\\n                  <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                    <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                    <small><b>Nível:</b> {{item.nivel}}</small> <br>\\n                    <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                    <small><b>Categoria:</b> {{item.categoria}}</small>\\n                  </ng-template>\\n                </ng-select>\\n                <ng-select  *ngIf=\\\"tipoSelecionado != 'RECEITA'\\\" style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasDespesa\\\" bindLabel=\\\"descricao\\\" required\\n                  bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\">\\n                  <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                    <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                    <small><b>Nível:</b> {{item.nivel}}</small> <br>\\n                    <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                    <small><b>Categoria:</b> {{item.categoria}}</small>\\n                  </ng-template>\\n                </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('planoContasId').hasError('required') &&cadastroItemForm.get('planoContasId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label>Descrição:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroItemForm.get('descricao').errors &&cadastroItemForm.get('descricao').touched}\\\"\\n                formControlName=\\\"descricao\\\" />\\n              <div\\n                *ngIf=\\\"cadastroItemForm.get('descricao').hasError('required') &&cadastroItemForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateItem.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary ml-auto\\\" [disabled]=\\\"!cadastroItemForm.valid\\\"\\n          (click)=\\\"adicionarItem(templateItem)\\\">\\n          Salvar Alterações\\n        </button>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { CentroReceita } from 'src/app/_models/Cadastros/CentroReceita/CentroReceita';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { CentroReceitaService } from 'src/app/_services/Cadastros/CentroReceita/centroReceita.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { CentroDespesaService } from 'src/app/_services/Cadastros/CentroDespesa/centroDespesa.service';\n\n@Component({\n  selector: 'app-editar-produto',\n  templateUrl: './editarProduto.component.html'\n})\nexport class EditarProdutoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  cadastroItemForm: FormGroup;\n\n  produto: Produto;\n  idProduto: number;\n\n  tipos = ['RECEITA', 'DESPESA'];\n  tipoSelecionado: string;\n\n  centrosReceita: CentroReceita[];\n  centroReceitaIdSelecionado: string;\n\n  centrosDespesa: CentroDespesa[];\n  centroDespesaIdSelecionado: string;\n\n  planoContasReceita: PlanoContas[];\n  planoContasDespesa: PlanoContas[];\n  planoContasIdSelecionado: string;\n\n  subTipos = ['COMISSÃO', 'GASTO'];\n  subTipoSelecionado: string;\n\n  produtoItens: ProdutoItem[] = [];\n  novosItem: ProdutoItem[] = [];\n  idItemEdit: number;\n\n  modoSalvar = '';\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private produtoService: ProdutoService,\n              public router: ActivatedRoute,\n              private changeDetectionRef: ChangeDetectorRef,\n              private centroReceitaService: CentroReceitaService,\n              private centroDespesaService: CentroDespesaService,\n              private planoContaService: PlanoContaService,\n              public permissaoService: PermissaoService) { }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngOnInit() {\n    this.idProduto = +this.router.snapshot.paramMap.get('id');\n    this.validarForm();\n    this.validarItemForm();\n    this.carregarProduto();\n    this.getCentroDespesa();\n    this.getCentroReceita();\n    this.getPlanoContas();\n  }\n\n  carregarProduto() {\n    this.produtoService.getProdutoById(this.idProduto)\n    .subscribe((produto: Produto) => {\n      this.produto = Object.assign({}, produto);\n      this.cadastroForm.patchValue(this.produto);\n\n      this.produtoItens = [];\n      this.produtoItens = produto.itens;\n\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Produto: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['', Validators.required]\n    });\n  }\n\n  validarItemForm() {\n    this.cadastroItemForm = this.fb.group({\n        id:  [''],\n        produtosId: [''],\n        tipoItem: ['', Validators.required],\n        subTipoItem: [''],\n        descricao: ['', Validators.required],\n        centroDespesaId: ['', ],\n        centroReceitaId: [''],\n        planoContasId: ['', Validators.required]\n    });\n  }\n\n  adicionarItem(template: any) {\n\n    if (this.cadastroItemForm.get('tipoItem').value === 'RECEITA') {\n      this.cadastroItemForm.get('subTipoItem').setValue(null);\n    }\n\n    if (this.modoSalvar === 'novo') {\n      this.novosItem.push(Object.assign(this.cadastroItemForm.value, {id: 0, produtosId: this.idProduto}));\n      if (this.novosItem.length > 0) {\n        this.produtoService.novoItem(this.novosItem).subscribe(() => {\n          this.cadastroItemForm.reset();\n          this.carregarProduto();\n          this.toastr.success('Item Cadastrado com sucesso!');\n        });\n      }\n      this.novosItem = [];\n    } else {\n      const item = Object.assign(this.cadastroItemForm.value);\n\n      this.produtoService.editarItem(item, this.idItemEdit).subscribe(\n        () => {\n          this.cadastroItemForm.reset();\n          this.carregarProduto();\n          this.toastr.success('Editado com sucesso!');\n        });\n    }\n    template.hide();\n  }\n\n  editarItem(template: any, Item: any) {\n    this.modoSalvar = 'editar';\n    this.idItemEdit = Item.id;\n    this.cadastroItemForm.patchValue(Item);\n    this.planoContasIdSelecionado = Item.planoContasId;\n    this.centroDespesaIdSelecionado = Item.centroDespesaId;\n    this.centroReceitaIdSelecionado = Item.centroReceitaId;\n    this.subTipoSelecionado = Item.subTipoItem;\n    template.show();\n  }\n\n  novoItem(template: any) {\n    this.modoSalvar = 'novo';\n    this.cadastroItemForm.reset();\n    this.tipoSelecionado = null;\n    this.subTipoSelecionado = null;\n    template.show();\n  }\n\n  salvarAlteracoes() {\n    this.produto = Object.assign({ id: this.produto.id }, this.cadastroForm.value);\n\n    this.produtoService.editarProduto(this.produto).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarProduto();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error.error);\n      });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContasReceita = _PLANOS.filter(c => c.tipo === 'RECEITA' && c.categoria === 'ANALÍTICA');\n      this.planoContasDespesa = _PLANOS.filter(c => c.tipo === 'DESPESA' && c.categoria === 'ANALÍTICA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getCentroReceita() {\n    this.centroReceitaService.getAllCentroReceita().subscribe(\n      (_CENTROS: CentroReceita[]) => {\n      this.centrosReceita = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Receita: ${error.error}`);\n    });\n  }\n\n  getCentroDespesa() {\n    this.centroDespesaService.getAllCentroDespesa().subscribe(\n      (_CENTROS: CentroDespesa[]) => {\n      this.centrosDespesa = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Despesa: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Produto</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Descrição:(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"descricao\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('descricao').errors && \\n                                        cadastroForm.get('descricao').touched}\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('descricao').hasError('required') &&cadastroForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarProduto()\\\" tooltip=\\\"Novo Produto\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-novo-produto',\n  templateUrl: './novoProduto.component.html'\n})\nexport class NovoProdutoComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  produto: Produto;\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private produtoService: ProdutoService,\n              private router: Router,\n              private changeDetectionRef: ChangeDetectorRef,\n              public permissaoService: PermissaoService) { }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngOnInit() {\n    this.validarForm();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        descricao: ['']\n    });\n  }\n\n  cadastrarProduto() {\n    if (this.cadastroForm.valid) {\n      this.produto = Object.assign(this.cadastroForm.value, {id: 0});\n      this.produtoService.novoProduto(this.produto).subscribe(\n        () => {\n          this.produtoService.getIdUltimoProduto().subscribe(\n            (_PRODUTO: Produto) => {\n              const IdUltimoProduto = _PRODUTO.id;\n\n              this.toastr.success('Cadastrado com sucesso!');\n              this.router.navigate([`/produtos/editar/${IdUltimoProduto}`]);\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<h2>Produtos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n            <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/produtos','novo']\\\"\\n              tooltip=\\\"Novo Produto\\\" class=\\\"btn btn-success\\\"> \\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Produto\\n            </a>\\n          </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Descrição</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"produtos && produtos.length\\\">\\n        <tr *ngFor=\\\"let produto of produtos | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ produto.id }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ produto.descricao }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <a *ngIf=\\\"this.editar == true || this.visualizar == true\\\"\\n                [routerLink]=\\\"['/produtos','editar', produto.id]\\\" tooltip=\\\"Editar/Detalhes\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!produtos\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum produto encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html'\n})\nexport class ProdutoComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  produtosFiltrados: Produto[];\n  produtos: Produto[];\n  produto: Produto;\n  produtoId: number;\n\n  bodyExcluirProduto = '';\n\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n  filtroProdutos: any;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  constructor(private produtoService: ProdutoService,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n  ngOnInit() {\n    this.getProdutos();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n      this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PRODUTOS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getProdutos() {\n      this.produtoService.getAllProduto().subscribe(\n        // tslint:disable-next-line:variable-name\n        (_produtos: Produto[]) => {\n        this.produtos = _produtos;\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar produtos: ${error.error}`);\n      });\n  }\n\n}\n","module.exports = \"<h2>Alterar Senha</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form [formGroup]=\\\"cadastroForm\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label>Senha Atual:</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"senhaAtual\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('senhaAtual').errors &&\\n                                                             cadastroForm.get('senhaAtual').touched}\\\"\\n              placeholder=\\\"Digite sua Senha atual\\\" />\\n            <div *ngIf=\\\"cadastroForm.get('senhaAtual').hasError('minlength') &&\\n                                  cadastroForm.get('senhaAtual').touched\\\" class=\\\"invalid-feedback\\\">\\n              Deve conter no mínimo 4 caracters.\\n            </div>\\n            <div *ngIf=\\\"cadastroForm.get('senhaAtual').hasError('required') &&\\n                                            cadastroForm.get('senhaAtual').touched\\\" class=\\\"invalid-feedback\\\">\\n              Senha Atual é obrigatório.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formGroupName=\\\"passwords\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Senha:</label>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.password').errors &&\\n                                                             cadastroForm.get('passwords.password').touched}\\\"\\n                placeholder=\\\"Digite uma Senha\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('minlength') &&\\n                                  cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                Deve conter no mínimo 4 caracters.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('required') &&\\n                                            cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                Senha é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Confirmar Senha:</label>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.confirmPassword').errors \\n                                               && cadastroForm.get('passwords.confirmPassword').touched \\n                                               ||cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                               && cadastroForm.get('passwords.confirmPassword').touched }\\\"\\n                placeholder=\\\"Confirme a Senha\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('required') &&\\n                                            cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Confirme a senha.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                            && cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Senhas diferentes!\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.idUsuario == permissaoService.getUsuarioId()\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracao()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { UsuarioSenha } from 'src/app/_models/Cadastros/Usuarios/UsuarioSenha';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\n\n@Component({\n  selector: 'app-editar-senha-usuario',\n  templateUrl: './editarSenhaUsuario.component.html'\n})\nexport class EditarSenhaUsuarioComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n  senhas: UsuarioSenha;\n  idUsuario: any;\n  constructor(private usuarioService: UsuarioService,\n              private router: ActivatedRoute,\n              private router2: Router,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.idUsuario = +this.router.snapshot.paramMap.get('id');\n    this.validation();\n  }\n\n  validation()  {\n    this.cadastroForm = this.fb.group({\n      senhaAtual: ['', [Validators.required, Validators.minLength(4)]],\n      passwords: this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required]\n      }, { validator : this.compararSenhas})\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({mismatch: true});\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  salvarAlteracao() {\n    this.senhas = Object.assign({ novaSenha: this.cadastroForm.get('passwords.password').value,\n     senhaAtual: this.cadastroForm.get('senhaAtual').value });\n\n    this.usuarioService.editarSenhaUsuario(this.permissaoService.getUsuarioId(), this.senhas).subscribe(\n      () => {\n        this.toastr.success('Senha alterada com sucesso!');\n        this.router2.navigate([`/usuarios/editar/${this.permissaoService.getUsuarioId()}`]);\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar Senha: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \"<h2>Usuário</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mr-8\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome Completo:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nomeCompleto\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('nomeCompleto').errors &&\\n                                                cadastroForm.get('nomeCompleto').touched }\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('nomeCompleto').hasError('required') &&\\n                                  cadastroForm.get('nomeCompleto').touched\\\" class=\\\"invalid-feedback\\\">\\n                Nome Completo é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Email:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                  cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail é obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Usuario:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"userName\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('userName').errors &&\\n                                                  cadastroForm.get('userName').touched}\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('userName').hasError('required') &&\\n                                  cadastroForm.get('userName').touched\\\" class=\\\"invalid-feedback\\\">\\n                Usuário é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Data de Nascimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNascimento\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataNascimento').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"/>\\n            </div>\\n\\n            <div *ngIf=\\\"this.visualizarNivel\\\" class=\\\"form-group col-md-6\\\">\\n              <label>Nível:(*)</label>\\n              <ng-select [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarUsuarioNivel(niveisIdSelecionado)\\\" [(ngModel)]=\\\"niveisIdSelecionado\\\"\\n                formControlName=\\\"usuarioNivel\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('usuarioNivel').hasError('required') && cadastroForm.get('usuarioNivel').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </tab>\\n\\n      <tab *ngIf=\\\"this.visualizarOcorrencia\\\" heading=\\\"Ocorrências\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"pull-right\\\">\\n          <button (click)=\\\"novaOcorrencia(templateOcorrencia)\\\" class=\\\"btn btn-success\\\">\\n            <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Nova Ocorrência\\n          </button>\\n        </div>\\n\\n        <table class=\\\"table table-striped table-bordered mt-3\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th>Id</th>\\n              <th>Data</th>\\n              <th>Descrição</th>\\n              <th style=\\\"text-align: center;\\\">Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"usuarioOcorrencias && usuarioOcorrencias.length\\\">\\n            <tr *ngFor=\\\"let ocorrencia of usuarioOcorrencias\\\">\\n              <td>{{ ocorrencia.id }}</td>\\n              <td>{{ ocorrencia.data }}</td>\\n              <td>{{ ocorrencia.descricao }}</td>\\n              <td>\\n                <div class=\\\"btn-group\\\">\\n                  <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"removerOcorrencia(ocorrencia)\\\" tooltip=\\\"Excluir\\\">\\n                    <i class=\\\"fa fa-eraser\\\"></i>\\n                  </button>\\n                  <a [routerLink]=\\\"['/usuarioOcorrencias','editar', usuario.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                    class=\\\"btn btn-sm btn-primary\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                  </a>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n\\n          <tfoot *ngIf=\\\"!usuarioOcorrencias\\\">\\n            <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n            <h4>\\n              Nenhuma ocorrência encontrada!\\n            </h4>\\n          </tfoot>\\n        </table>\\n      </tab>\\n \\n    </tabset>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar || this.idUsuario == usuario.id\\\"\\n  style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"salvarAlteracao()\\\"\\n  tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n\\n<div bsModal #templateOcorrencia=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Ocorrência\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateOcorrencia.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroOcorrenciaForm\\\">\\n          <input type=\\\"hidden\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" value=\\\"0\\\" placeholder=\\\"\\\" />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Data:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"data\\\"\\n                [ngModel]=\\\"cadastroOcorrenciaForm.get('data').value\\\" bsDatepicker />\\n\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('data').hasError('required') && cadastroOcorrenciaForm.get('data').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Data é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-10\\\">\\n              <label>Descrição:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                [ngClass]=\\\"{'is-invalid':cadastroOcorrenciaForm.get('descricao').errors &&cadastroOcorrenciaForm.get('descricao').touched}\\\"\\n                formControlName=\\\"descricao\\\" placeholder=\\\"\\\" />\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('required') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição é obrigatória.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('minlength') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição deve ter no mínimo 10 Caracteres.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroOcorrenciaForm.get('descricao').hasError('maxlength') &&cadastroOcorrenciaForm.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Descrição deve ter no máximo 50 Caracteres.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <label>Observação</label>\\n            <textarea class=\\\"form-control\\\"\\n              [ngClass]=\\\"{'is-invalid':cadastroOcorrenciaForm.get('observacao').errors &&cadastroOcorrenciaForm.get('observacao').touched}\\\"\\n              formControlName=\\\"observacao\\\" placeholder=\\\"\\\" rows=\\\"4\\\"></textarea>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('required') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação é obrigatória.\\n            </div>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('minlength') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação deve ter no mínimo 10 Caracteres.\\n            </div>\\n            <div\\n              *ngIf=\\\"cadastroOcorrenciaForm.get('observacao').hasError('maxlength') &&cadastroOcorrenciaForm.get('observacao').touched\\\"\\n              class=\\\"invalid-feedback\\\">\\n              Observação deve ter no máximo 100 Caracteres.\\n            </div>\\n          </div>\\n        </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateOcorrencia.hide()\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary ml-auto\\\" [disabled]=\\\"!cadastroOcorrenciaForm.valid\\\"\\n          (click)=\\\"adicionarOcorrencia(templateOcorrencia)\\\">\\n          Salvar Alterações\\n        </button>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioOcorrencia } from 'src/app/_models/Cadastros/Usuarios/UsuarioOcorrencia';\nimport { Nivel } from 'src/app/_models/Cadastros/Usuarios/Nivel';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport * as moment from 'moment';\nimport { DatepickerOptions } from 'ng2-datepicker';\nimport * as ptLocale from 'date-fns/locale/pt';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n@Component({\n  selector: 'app-editar-usuario',\n  templateUrl: './editarUsuario.component.html'\n})\nexport class EditarUsuarioComponent implements OnInit, AfterViewInit {\n\n  editar = false;\n  visualizarOcorrencia = false;\n  visualizarNivel = false;\n\n  cadastroForm: FormGroup;\n  idUsuario: number;\n  cadastroOcorrenciaForm: FormGroup;\n  usuario: Usuario = new Usuario();\n  usuarioOcorrencias: UsuarioOcorrencia[] = [];\n  dataAtual = '';\n  modoSalvarOcorrencia = '';\n\n  niveis: Nivel[];\n  niveisIdSelecionado: any;\n  niveisUsuario: UsuarioNivel[];\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  dateFormat = '';\n\n  constructor(private usuarioService: UsuarioService,\n              private router: ActivatedRoute,\n              private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              private changeDetectionRef: ChangeDetectorRef,\n              private permissaoService: PermissaoService,\n              private dataService: DataService) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit() {\n    this.idUsuario = +this.router.snapshot.paramMap.get('id');\n    this.getNiveis();\n    this.validation();\n    this.carregarUsuario();\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'VISUALIZAR', 'OCORRENCIA').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarOcorrencia = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'VISUALIZAR', 'NIVEL').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarNivel = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarUsuario() {\n\n  this.usuarioOcorrencias.length = 0;\n  this.usuarioService.getUsuarioById(this.idUsuario)\n    .subscribe(\n    (usuario: Usuario) => {\n        this.usuario = Object.assign({}, usuario);\n        const data = this.usuario.dataNascimento;\n        this.usuario = Object.assign(this.usuario, { dataNascimento: this.dataService.getDataPTBR(data) });\n        this.cadastroForm.patchValue(this.usuario);\n\n        this.usuario.usuarioOcorrencias.forEach(ocorrencia => {\n          ocorrencia = Object.assign(ocorrencia, { data: this.dataService.getDataPTBR(ocorrencia.data) });\n          this.usuarioOcorrencias.push(ocorrencia);\n        });\n\n        this.niveisIdSelecionado = [];\n        this.niveisUsuario = [];\n\n        this.usuario.usuarioNivel.forEach(niveis => {\n          this.niveisUsuario.push(niveis);\n          this.niveisIdSelecionado.push(niveis.roleId);\n        });\n    });\n  }\n\n  validation()  {\n    this.cadastroForm = this.fb.group({\n      id: [],\n      nomeCompleto: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      dataNascimento: ['', Validators.required],\n      usuarioOcorrencias: this.fb.array([]),\n      usuarioNivel: [this.fb.group({\n        userId: [''],\n        roleId: ['']\n      }), Validators.required]\n    });\n\n    this.cadastroOcorrenciaForm = this.fb.group({\n      id: [],\n      data: ['', Validators.required],\n      descricao: ['', Validators.required],\n      observacao: ['', Validators.required]\n    });\n  }\n\n  adicionarUsuarioNivel(niveisSelecionados: any) {\n    this.niveisUsuario = [];\n    niveisSelecionados.forEach(niveis => {\n      this.niveisUsuario.push(Object.assign({ userId: this.idUsuario, roleId: niveis}));\n    });\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n  openModal(template: any) {\n    this.cadastroOcorrenciaForm.reset();\n    template.show(template);\n  }\n\n  novaOcorrencia(template: any)  {\n    this.modoSalvarOcorrencia = 'post';\n    this.openModal(template);\n  }\n\n  criaOcorrencia(ocorrencia: any): FormGroup {\n    return this.fb.group({\n      id: [ocorrencia.id],\n      data: [ocorrencia.data, Validators.required],\n      descricao: [ocorrencia.descricao, [Validators.required]],\n      observacao: [ocorrencia.observacao, Validators.required],\n    });\n  }\n\n  adicionarOcorrencia(template: any) {\n    this.usuarioOcorrencias.push(Object.assign(this.cadastroOcorrenciaForm.value, {id: 0}));\n    template.hide();\n  }\n\n  removerOcorrencia(ocorrencia: any) {\n    this.usuarioOcorrencias.splice(this.usuarioOcorrencias.indexOf(ocorrencia), 1);\n  }\n\n  salvarAlteracao() {\n    const data = this.cadastroForm.get('dataNascimento').value.toLocaleString();\n\n    this.usuario = Object.assign(this.cadastroForm.value, {id: this.usuario.id,\n      dataNascimento: this.dataService.getDataSQL(data)});\n    this.usuario.usuarioOcorrencias = [];\n    this.usuarioOcorrencias.forEach(ocorrencia => {\n      const dataOcorrencia = ocorrencia.data.toLocaleString();\n      ocorrencia = Object.assign(ocorrencia, { usuarioId: this.usuario.id, data: this.dataService.getDataSQL(dataOcorrencia)});\n      this.usuario.usuarioOcorrencias.push(ocorrencia);\n    });\n\n    this.usuario.usuarioNivel = [];\n    this.niveisUsuario.forEach(niveis => {\n      this.usuario.usuarioNivel.push(niveis);\n    });\n\n    this.usuarioService.editarUsuario(this.usuario).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarUsuario();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \".form-signin {\\r\\n    width: 100%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  .form-signin .checkbox {\\r\\n    font-weight: 400;\\r\\n  }\\r\\n  .form-signin .form-control {\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  .form-signin .form-control:focus {\\r\\n    z-index: 2;\\r\\n  }\\r\\n  .form-signin input[type=\\\"email\\\"] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  .form-signin input[type=\\\"password\\\"] {\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n  }\\r\\n  .center {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FkYXN0cm9zL3VzdWFyaW8vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7RUFDakI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7RUFDOUI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsMEJBQTBCO0VBQzVCO0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvcy91c3VhcmlvL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1zaWduaW4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDMzMHB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gLmNoZWNrYm94IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiAuZm9ybS1jb250cm9sIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gIH1cclxuICAuZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbiAgfVxyXG4gIC5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuICB9XHJcblxyXG4gIC5jZW50ZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB9XHJcbiAgIl19 */\"","module.exports = \"<form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <img class=\\\"center\\\" src=\\\"./../../../assets/img/LogoVMS.png\\\" width=\\\"280\\\" style=\\\"float:center;\\\" height=\\\"180\\\">\\n  <h1 class=\\\"text-center h3 mb-3 font-weight-bold\\\">Log In</h1>\\n  <label style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"font-weight-normal\\\"\\n    for=\\\"username\\\">Usuário :</label>\\n  <input type=\\\"email\\\" id=\\\"username\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\" name=\\\"username\\\" required\\n    [(ngModel)]=\\\"model.username\\\">\\n\\n  <label class=\\\"font-weight-normal\\\" for=\\\"password\\\">Password :</label>\\n  <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\">\\n\\n  <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Entrar</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/Cadastros/Login/auth.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  titulo = 'Login';\n  model: any = {};\n  jwtHelper = new JwtHelperService();\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private authService: AuthService,\n              public router: Router) {\n              }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    if (token != null && !this.jwtHelper.isTokenExpired(token)) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n        .subscribe(\n          () => {\n            this.router.navigate(['/dashboard']);\n          },\n          error => {\n            this.toastr.error(`Usuário ou senha incorreto(s).`, '', {\n              positionClass: 'toast-bottom-right',\n            });\n          }\n        );\n  }\n\n}\n","module.exports = \"<h2>Usuário</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" style=\\\"margin-top: 10px;\\\">\\n      <tabset>\\n        <tab heading=\\\"Geral\\\">\\n          <div class=\\\"row mt-4\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Nome Completo:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"text-transform: uppercase\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"nomeCompleto\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('nomeCompleto').errors &&\\n                                              cadastroForm.get('nomeCompleto').touched }\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('nomeCompleto').hasError('required') &&\\n                                cadastroForm.get('nomeCompleto').touched\\\" class=\\\"invalid-feedback\\\">\\n                Nome Completo é obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Email:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('email').errors && \\n                                                cadastroForm.get('email').touched}\\\" />\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('required') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail é obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroForm.get('email').hasError('email') &&cadastroForm.get('email').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                E-mail inválido.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Usuario:</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"userName\\\" [ngClass]=\\\"{'is-invalid': cadastroForm.get('userName').errors &&\\n                                                cadastroForm.get('userName').touched}\\\"\\n                style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n\\n              <div *ngIf=\\\"cadastroForm.get('userName').hasError('required') &&\\n                                cadastroForm.get('userName').touched\\\" class=\\\"invalid-feedback\\\">\\n                Usuário é obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Data de Nascimento:(*)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataNascimento\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'DD/MM/YYYY' }\\\" bsDatepicker />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Nível:(*)</label>\\n              <ng-select [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" required [multiple]=\\\"true\\\"\\n                (change)=\\\"adicionarUsuarioNivel(niveisIdSelecionado)\\\" [(ngModel)]=\\\"niveisIdSelecionado\\\"\\n                formControlName=\\\"usuarioNivel\\\">\\n              </ng-select>\\n\\n              <div\\n                *ngIf=\\\"cadastroForm.get('usuarioNivel').hasError('required') && cadastroForm.get('usuarioNivel').touched\\\"\\n                class=\\\"invalid-feedback d-block ng-invalid ng-touched\\\">\\n                Campo Obrigatório.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div formGroupName=\\\"passwords\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-3\\\">\\n                <label>Senha:</label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.password').errors &&\\n                                                             cadastroForm.get('passwords.password').touched}\\\" />\\n                <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('minlength') &&\\n                                  cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                  Deve conter no mínimo 4 caracters\\n                </div>\\n                <div *ngIf=\\\"cadastroForm.get('passwords.password').hasError('required') &&\\n                                            cadastroForm.get('passwords.password').touched\\\" class=\\\"invalid-feedback\\\">\\n                  Senha é obrigatório.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-3\\\">\\n                <label>Confirmar Senha:</label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': cadastroForm.get('passwords.confirmPassword').errors \\n                                               && cadastroForm.get('passwords.confirmPassword').touched \\n                                               ||cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                               && cadastroForm.get('passwords.confirmPassword').touched }\\\" />\\n                <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('required') &&\\n                                            cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Confirme a senha.\\n                </div>\\n                <div *ngIf=\\\"cadastroForm.get('passwords.confirmPassword').hasError('mismatch') \\n                                            && cadastroForm.get('passwords.confirmPassword').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Senhas diferentes!\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </tab>\\n\\n      </tabset>\\n    </form>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarUsuario()\\\"\\n  tooltip=\\\"Novo Usuário\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { Nivel } from 'src/app/_models/Cadastros/Usuarios/Nivel';\nimport { UsuarioNivel } from 'src/app/_models/Cadastros/Usuarios/UsuarioNivel';\n\n@Component({\n  selector: 'app-novo-usuario',\n  templateUrl: './novoUsuario.component.html'\n})\nexport class NovoUsuarioComponent implements OnInit {\n\n  titulo = 'Cadastrar';\n  cadastroForm: FormGroup;\n  usuario: Usuario;\n\n  niveis: Nivel[];\n  niveisIdSelecionado: any;\n  niveisUsuario: UsuarioNivel[];\n\n  constructor(public fb: FormBuilder,\n              private toastr: ToastrService,\n              private usuarioService: UsuarioService,\n              public router: Router) { }\n\n  ngOnInit() {\n    this.getNiveis();\n    this.validation();\n  }\n\n  validation() {\n    this.cadastroForm = this.fb.group({\n      nomeCompleto: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      dataNascimento: ['', Validators.required],\n      passwords: this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required]\n      }, { validator : this.compararSenhas}),\n      usuarioNivel: [this.fb.group({\n        userId: [''],\n        roleId: ['']\n      }), Validators.required],\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({mismatch: true});\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  adicionarUsuarioNivel(niveisSelecionados: any) {\n    this.niveisUsuario = [];\n    niveisSelecionados.forEach(niveis => {\n      this.niveisUsuario.push(Object.assign({ userId: 0, roleId: niveis}));\n    });\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n  cadastrarUsuario() {\n    if (this.cadastroForm.valid) {\n      this.usuario = Object.assign(this.cadastroForm.value,\n         {password: this.cadastroForm.get('passwords.password').value, usuarioNivel: null});\n      this.usuarioService.novoUsuario(this.usuario).subscribe(\n        () => {\n          this.usuarioService.getIdUltimoUsuario().subscribe(\n            (_USUARIO: Usuario) => {\n              const IdUltimoUsuario = _USUARIO.id;\n              this.usuario = Object.assign(this.cadastroForm.value, {id: IdUltimoUsuario});\n\n              this.usuario.usuarioNivel = [];\n              this.niveisUsuario.forEach(niveis => {\n                this.usuario.usuarioNivel.push(Object.assign({ userId: IdUltimoUsuario , roleId: niveis.roleId}));\n              });\n\n              this.usuarioService.editarUsuario(this.usuario).subscribe(\n                () => {\n                  this.toastr.success('Cadastrado com sucesso!');\n                  this.router.navigate([`/usuarios/editar/${IdUltimoUsuario}`]);\n              });\n          });\n        }, error => {\n          const erro = error.error;\n          console.log(erro);\n          erro.forEach(element => {\n            switch (element.code) {\n            case 'DuplicateUserName':\n              this.toastr.error('Usuario já existente.');\n              break;\n            default:\n              this.toastr.error(`Erro no Cadastro! CODE: ${element.code}`);\n              break;\n            }\n          });\n        }\n      );\n    }\n  }\n}\n","module.exports = \"<h2>Usuários</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <div class=\\\"d-flex\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-4\\\">\\n          <label>Filtro:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pesquisar...\\\" [(ngModel)]=\\\"filtroLista\\\" />\\n        </div>\\n        <div style=\\\"margin-right: 15px;\\\"class=\\\"pull-right\\\">\\n            <a *ngIf=\\\"this.novo == true\\\" [routerLink]=\\\"['/usuarios','novo']\\\"\\n              tooltip=\\\"Novo Usuario\\\" class=\\\"btn btn-success\\\"> \\n              <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Usuário\\n            </a>\\n          </div>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-striped table-bordered mt-4\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Usuário {{this.novo}}</th>\\n          <th>Nome</th>\\n          <th>E-mail</th>\\n          <th style=\\\"text-align: center;\\\">Ações</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"usuarios && usuarios.length\\\">\\n        <tr *ngFor=\\\"let usuario of usuariosFiltrados | paginate: { itemsPerPage: 5,\\n         currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n          <td>{{ usuario.id }}</td>\\n          <td>{{ usuario.userName }}</td>\\n          <td>{{ usuario.nomeCompleto }}</td>\\n          <td style=\\\"white-space: nowrap;\\\">{{ usuario.email }}</td>\\n          <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button *ngIf=\\\"this.excluir\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                tooltip=\\\"Excluir\\\" (click)=\\\"excluirUsuario(usuario, confirm)\\\">\\n                <i class=\\\"fa fa-eraser\\\"></i>\\n              </button>\\n              <a *ngIf=\\\"this.editar || this.usuarioId == usuario.id\\\"\\n                [routerLink]=\\\"['/usuarios','editar', usuario.id]\\\" tooltip=\\\"Editar/Perfil\\\"\\n                class=\\\"btn btn-sm btn-primary\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n              </a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot *ngIf=\\\"!usuarios\\\">\\n        <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n        <h4>\\n          Nenhum usuario encontrado!\\n        </h4>\\n      </tfoot>\\n    </table>\\n    Total de Registros: {{totalRegistros}}\\n    <div class=\\\"text-center\\\">\\n      <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n        nextLabel=\\\"Próximo\\\">\\n      </pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n<div bsModal #confirm=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">\\n          Excluir Colaborador\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"confirm.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{bodyExcluirUsuario}}</p>\\n      </div>\\n      <div class=\\\"modal-footer btn-group d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"confirm.hide()\\\">\\n          Cancelar\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"confirmeDelete(confirm)\\\">\\n          Excluir\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Usuario } from '../../_models/Cadastros/Usuarios/Usuario';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UsuarioService } from '../../_services/Cadastros/Usuarios/usuario.service';\nimport { BsModalService, BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from '../../_services/Permissoes/permissao.service';\nimport { Permissao } from '../../_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html'\n})\nexport class UsuarioComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n\n  usuariosFiltrados: Usuario[];\n  usuarios: Usuario[];\n  usuario: Usuario;\n  usuarioId: number;\n\n  modoSalvar = '';\n  cadastroForm: FormGroup;\n  bodyExcluirUsuario = '';\n\n  // tslint:disable-next-line:variable-name\n  _filtroLista: string;\n  filtroUsuarios: any;\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  constructor(\n    private usuarioService: UsuarioService,\n    private localeService: BsLocaleService,\n    private toastr: ToastrService,\n    private permissaoService: PermissaoService\n    ) {\n      this.localeService.use('pt-br');\n    }\n\n    ngOnInit() {\n      this.getUsuarios();\n    }\n\n    ngAfterViewInit() {\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n        this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n        this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('USUARIOS', 'EXCLUIR').subscribe((_PERMISSAO: Permissao) => {\n        this.excluir = this.permissaoService.verificarPermissao(_PERMISSAO);\n      });\n      this.usuarioId = this.permissaoService.getUsuarioId();\n    }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value: string) {\n    this._filtroLista = value;\n    this.usuariosFiltrados = this.filtrarUsuarios(this.filtroLista);\n  }\n\n  excluirUsuario(usuario: Usuario, template: any) {\n    template.show();\n    this.usuario = usuario;\n    this.bodyExcluirUsuario = `Tem certeza que deseja excluir o Usuario: ${usuario.userName}, Código: ${usuario.id}?`;\n  }\n\n  confirmeDelete(template: any) {\n    this.usuarioService.deletarUsuario(this.usuario.id).subscribe(\n    () => {\n        template.hide();\n        this.getUsuarios();\n        this.toastr.success('Excluído com sucesso!');\n      }, error => {\n        this.toastr.error(`Erro ao tentar Excluir: ${error}`);\n      });\n  }\n\n  filtrarUsuarios(filtrarPor: string): Usuario[] {\n    this.filtroUsuarios = this.usuarios;\n\n    if (filtrarPor) {\n      filtrarPor = filtrarPor.toLocaleLowerCase();\n      this.filtroUsuarios = this.usuarios.filter(\n        usuario => usuario.userName.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n      );\n    }\n\n    this.totalRegistros = this.filtroUsuarios.length;\n    return this.filtroUsuarios;\n  }\n\n  getUsuarios() {\n      this.usuarioService.getAllUsuario().subscribe(\n        // tslint:disable-next-line:variable-name\n        (_usuarios: Usuario[]) => {\n        this.usuarios = _usuarios;\n        this.usuariosFiltrados = this.filtrarUsuarios(this.filtroLista);\n      }, error => {\n        this.toastr.error(`Erro ao tentar carregar usuarios: ${error}`);\n      });\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-7\\\">\\r\\n    <div class=\\\"box box-default\\\">\\r\\n      <div class=\\\"box-header with-border\\\">\\r\\n        <i class=\\\"fa fa-bullhorn\\\"></i>\\r\\n\\r\\n        <h3 class=\\\"box-title\\\">Alerts</h3>\\r\\n      </div>\\r\\n      <!-- /.box-header -->\\r\\n      <div class=\\\"box-body\\\">\\r\\n\\r\\n        <ul class=\\\"timeline\\\">\\r\\n          <li class=\\\"time-label\\\">\\r\\n            <span class=\\\"bg-green\\\">\\r\\n              13/06/2019\\r\\n            </span>\\r\\n          </li>\\r\\n          <!-- /.timeline-label -->\\r\\n          <!-- timeline item -->\\r\\n          <li>\\r\\n            <i class=\\\"fa fa-hand-peace-o bg-purple\\\"></i>\\r\\n\\r\\n            <div class=\\\"timeline-item\\\">\\r\\n\\r\\n              <h3 class=\\\"timeline-header\\\"><a href=\\\"#\\\">Novo</a> sistema!</h3>\\r\\n\\r\\n              <div class=\\\"timeline-body\\\">\\r\\n                <img src=\\\"./../../assets/img/dashBoardInicial.png\\\" style=\\\"width: 100%;\\\" alt=\\\"...\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <!-- /.box-body -->\\r\\n    </div>\\r\\n    <!-- /.box -->\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../_services/WebSocket/Socket.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n\n  ioConnection: any;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","module.exports = \"<h2>Lançamentos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  (click)=\\\"abrirTemplateLancamento(0)\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Lançamento\\n        </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th style=\\\"white-space: nowrap;\\\">Descrição</th>\\n            <th style=\\\"text-align: center;\\\">Data Lançamento</th>\\n            <th style=\\\"text-align: center;\\\">Conta Débitada</th>\\n            <th style=\\\"text-align: center;\\\">Conta Créditada</th>\\n            <th style=\\\"text-align: center;\\\">Valor</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"lancamentos && lancamentos.length\\\">\\n          <tr *ngFor=\\\"let lancamento of lancamentos | paginate: { itemsPerPage: 5,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td>{{ lancamento.id }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ lancamento.descricao }}</td>\\n            <td style=\\\"text-align: center;\\\">{{ lancamento.dataLancamento | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"text-align: center;\\\">{{ lancamento.planoDebito.descricao}}</td>\\n            <td style=\\\"text-align: center;\\\">{{ lancamento.planoCredito.descricao}}</td>\\n            <td style=\\\"text-align: center;\\\">{{ lancamento.valor | currency:' ':false }}</td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div *ngIf=\\\"this.editar == true || this.visualizar\\\" class=\\\"btn-group\\\">\\n                <a  (click)=\\\"abrirTemplateLancamento(lancamento.Id)\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!lancamentos\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhum Lançamento encontrado!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n\\n<app-lancamento-templante [idLancamento]=\\\"this.idLancamento\\\" *ngIf=\\\"getLancamentoTemplate() == true\\\"></app-lancamento-templante>\\n\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { LancamentoService } from 'src/app/_services/Movimentos/Lancamentos/lancamento.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-lancamento',\n  templateUrl: './lancamento.component.html'\n})\nexport class LancamentoComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  visualizar = false;\n\n  lancamentos: Lancamentos[];\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  idLancamento: number;\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              private lancamentoService: LancamentoService) { }\n\n  ngOnInit() {\n    this.getLancamentos();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getLancamentoTemplate() {\n    return this.lancamentoService.getLancamentoTemplateStatus();\n  }\n\n  abrirTemplateLancamento(idLancamento: number) {\n    this.idLancamento = idLancamento;\n    this.lancamentoService.setLancamentoTemplateStatus(true);\n  }\n\n  getLancamentos() {\n    this.lancamentoService.getAllLancamentos().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_LANCAMENTOS: Lancamentos[]) => {\n      this.lancamentos = _LANCAMENTOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaS: ${error.error}`);\n  });\n}\n\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 50%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9sYW5jYW1lbnRvL2xhbmNhbWVudG9UZW1wbGF0ZS9sYW5jYW1lbnRvVGVtcGxhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNlaXJvL2xhbmNhbWVudG8vbGFuY2FtZW50b1RlbXBsYXRlL2xhbmNhbWVudG9UZW1wbGF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuIl19 */\"","module.exports = \"{{abrirTemplate(templateLancamento)}}\\n<div bsModal #templateLancamento=\\\"bs-modal\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Lançamento<label></label>\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateLancamento)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroLancamento\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Descrição(*)</label>\\n              <input style=\\\"text-transform: uppercase\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"descricao\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroLancamento.get('descricao').errors && cadastroLancamento.get('descricao').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroLancamento.get('descricao').hasError('required') &&cadastroLancamento.get('descricao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Lançamento</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataLancamento\\\"\\n                [ngModel]=\\\"cadastroLancamento.get('dataLancamento').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\" [ngClass]=\\\"{ 'is-invalid': cadastroLancamento.get('dataLancamento').errors && \\n                cadastroLancamento.get('dataLancamento').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroLancamento.get('dataLancamento').hasError('required') &&cadastroLancamento.get('dataLancamento').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroLancamento.get('valor').errors && \\n                  cadastroLancamento.get('valor').touched}\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroLancamento.get('valor').hasError('required') && cadastroLancamento.get('valor').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div *ngIf=\\\"cadastroLancamento.get('valor').hasError('min') && cadastroLancamento.get('valor').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Conta de Débito:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"contaDebitoIdSelecionado\\\" formControlName=\\\"planoDebitoId\\\" disabled\\n                [ngClass]=\\\"{ 'is-invalid': cadastroLancamento.get('planoDebitoId').errors && cadastroLancamento.get('planoDebitoId').touched}\\\">\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroLancamento.get('planoDebitoId').hasError('required') && cadastroLancamento.get('planoDebitoId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Conta de Crédito:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"contaCreditoIdSelecionado\\\" formControlName=\\\"planoCreditoId\\\" disabled\\n                [ngClass]=\\\"{ 'is-invalid': cadastroLancamento.get('planoCreditoId').errors && cadastroLancamento.get('planoCreditoId').touched}\\\">\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n              <div\\n                *ngIf=\\\"cadastroLancamento.get('planoCreditoId').hasError('required') && cadastroLancamento.get('planoCreditoId').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n          </div>\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateLancamento)\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"this.idLancamento != 0 && this.editar == true\\\" [disabled]=\\\"!cadastroLancamento.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarLancamento(templateLancamento)\\\">\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"this.idLancamento == 0 && this.novo == true\\\" [disabled]=\\\"!cadastroLancamento.valid\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarLancamento(templateLancamento)\\\">\\n          Cadastrar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { ToastrService } from 'ngx-toastr';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { LancamentoService } from 'src/app/_services/Movimentos/Lancamentos/lancamento.service';\nimport * as moment from 'moment';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-lancamento-templante',\n  templateUrl: './lancamentoTemplate.component.html',\n  styleUrls: ['./lancamentoTemplate.component.css']\n})\nexport class LancamentoTemplateComponent implements OnInit, AfterViewInit {\n  @Input() idLancamento: number;\n\n  novo = false;\n  editar = false;\n\n  cadastroLancamento: FormGroup;\n\n  lancamento: Lancamentos;\n\n  planoContas: PlanoContas[];\n  contaDebitoIdSelecionado: any;\n  contaCreditoIdSelecionado: any;\n\n  templateEnabled = false;\n  idUsuario: number;\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private planoContaService: PlanoContaService,\n              private permissaoService: PermissaoService,\n              public dataService: DataService,\n              private lancamentoService: LancamentoService) {}\n\n  ngOnInit() {\n    this.idUsuario = this.permissaoService.getUsuarioId();\n    this.validarLancamentos();\n    this.getPlanoContas();\n    if (this.idLancamento !== 0) {\n      this.carregarLancamento();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('LANÇAMENTOS', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarLancamento() {\n    this.lancamento = null;\n    this.lancamentoService.getLancamentoById(this.idLancamento)\n      .subscribe(\n        (_LANCAMENTO: Lancamentos) => {\n          this.lancamento = Object.assign(_LANCAMENTO, {\n            dataLancamento: this.dataService.getDataPTBR(_LANCAMENTO.dataLancamento)\n          });\n\n          this.cadastroLancamento.patchValue(this.lancamento);\n\n          console.log(this.lancamento);\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Lancamento: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validarLancamentos() {\n    this.cadastroLancamento = this.fb.group({\n        id:  [''],\n        centroDespesaId: [''],\n        centroReceitaId: [''],\n        descricao: ['', Validators.required],\n        planoDebitoId: ['', Validators.required],\n        planoCreditoId: ['', Validators.required],\n        valor: ['', [Validators.required, Validators.min(1)]],\n        usuarioId: [''],\n        dataHora: [''],\n        dataLancamento: ['', Validators.required]\n    });\n  }\n\n  salvarLancamento(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const dataLanc = moment(this.cadastroLancamento.get('dataLancamento').value, 'DD/MM/YYYY').format('YYYY-MM-DD');\n    if (this.idLancamento === 0) {\n      this.lancamento = Object.assign(this.cadastroLancamento.value, {id: 0, dataHora: dataAtual,\n        dataLancamento: dataLanc,\n        usuarioId: this.idUsuario});\n      this.lancamentoService.novoLancamento(this.lancamento).subscribe(\n        () => {\n          this.fecharTemplate(template);\n          this.toastr.success(`Cadastrado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        });\n    } else {\n      this.lancamento = Object.assign(this.cadastroLancamento.value, {\n        dataLancamento: dataLanc});\n      this.lancamentoService.editarLancamento(this.lancamento).subscribe(\n        () => {\n          this.toastr.success(`Editado com Sucesso!`);\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.lancamentoService.setLancamentoTemplateStatus(false);\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContas = _PLANOS.filter(c => c.categoria === 'ANALÍTICA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n\n}\n","module.exports = \"table td{\\r\\n    border:none !important;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9sYW5jYW1lbnRvL3JlbGF0b3Jpb0xhbmNhbWVudG8vcmVsYXRvcmlvTGFuY2FtZW50by5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0VBQ3hCIiwiZmlsZSI6InNyYy9hcHAvZmluYW5jZWlyby9sYW5jYW1lbnRvL3JlbGF0b3Jpb0xhbmNhbWVudG8vcmVsYXRvcmlvTGFuY2FtZW50by5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUgdGR7XHJcbiAgICBib3JkZXI6bm9uZSAhaW1wb3J0YW50O1xyXG4gIH0iXX0= */\"","module.exports = \"<h2>Relatório de Lançamentos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Balancete\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label>Filtrar por:</label>\\n            <ng-select [clearable]=\\\"false\\\" [items]=\\\"filtrarPor\\\" name=\\\"filtrarPor\\\" [(ngModel)]=\\\"filtroSelecionado\\\"\\n            (change)=\\\"setFiltroSelecionado($event)\\\">\\n            </ng-select>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label>Conta(*)</label>\\n            <ng-select [items]=\\\"planoContasFiltrados\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"descricao\\\" \\n              bindValue=\\\"id\\\" [(ngModel)]=\\\"contaSelecionada\\\" name=\\\"planoContaFiltro\\\">\\n            </ng-select>\\n          </div>\\n\\n          \\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n          <div class=\\\"pull-right\\\">\\n            <a (click)=\\\"getPlanoContasFilhosPorId(contaSelecionada)\\\" tooltip=\\\"Consultar Lançamentos\\\"\\n              class=\\\"btn btn-primary\\\">\\n              <i class=\\\"fa fa-search\\\"></i>&nbsp; Filtrar\\n            </a>\\n          </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n\\n          <div class=\\\"box-body\\\">\\n\\n            <table class=\\\"table table-responsive table-bordered\\\">\\n              <thead>\\n                <tr>\\n                  <th>Nível</th>\\n                  <th style=\\\"white-space: nowrap;\\\">Descrição</th>\\n                  <th style=\\\"text-align: right;\\\">Débito</th>\\n                  <th style=\\\"text-align: right;\\\">Crédito</th>\\n                  <th style=\\\"text-align: right;\\\">Saldo</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"listaContasFiltradas && listaContasFiltradas.length\\\">\\n                <tr *ngFor=\\\"let conta of listaContasFiltradas\\\">\\n                  <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\">{{conta.nivel}}</td>\\n                  <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\">{{conta.espacamento}}{{conta.descricao}}</td>\\n                  <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\" \\n                  *ngIf=\\\"conta.categoria == 'ANALÍTICA'\\\" style=\\\"text-align: right;\\\">{{conta.valorDebito | currency:' ':false }}</td>\\n                  <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\" \\n                  *ngIf=\\\"conta.categoria == 'ANALÍTICA'\\\" style=\\\"text-align: right;\\\">{{conta.valorCredito | currency:' ':false }}</td>\\n                  <td [ngStyle]=\\\"{'font-weight': conta.negrito}\\\" \\n                  *ngIf=\\\"conta.categoria == 'ANALÍTICA'\\\" style=\\\"text-align: right;\\\">{{conta.valorSaldo | currency:' ':false }}&nbsp;{{conta.saldoTipo}}</td>\\n                  <td *ngIf=\\\"conta.categoria == 'SINTÉTICA'\\\" style=\\\"text-align: right;\\\"></td>\\n                  <td *ngIf=\\\"conta.categoria == 'SINTÉTICA'\\\" style=\\\"text-align: right;\\\"></td>\\n                  <td *ngIf=\\\"conta.categoria == 'SINTÉTICA'\\\" style=\\\"text-align: right;\\\"></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </div>\\n\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Razão\\\" style=\\\"margin-top: 10px;\\\">\\n\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button style=\\\"position:relative;\\\" tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { LancamentoService } from 'src/app/_services/Movimentos/Lancamentos/lancamento.service';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\n\n@Component({\n  selector: 'app-relatorio-lancamento',\n  templateUrl: './relatorioLancamento.component.html',\n  styleUrls: ['./relatorioLancamento.component.css']\n})\nexport class RelatorioLancamentoComponent implements OnInit {\n\n  lancamentos: Lancamentos[];\n  planoContas: PlanoContas[];\n  planoContasFiltrados: PlanoContas[];\n\n  filtrarPor = ['GERAL', 'CONTA SINTÉTICA', 'CONTA ANALÍTICA'];\n  filtroSelecionado = 'GERAL';\n\n  contaSelecionada: number;\n\n  listaContas: PlanoContas;\n  listaContasFiltradas: PlanoContas[] = [];\n  idContasVerificadas: any = [];\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              private planoContaService: PlanoContaService,\n              public lancamentoService: LancamentoService) { }\n\n  ngOnInit() {\n    this.getLancamentos();\n    this.getPlanoContas();\n  }\n\n  setFiltroSelecionado(valor: any) {\n    this.filtroSelecionado = valor;\n    this.planoContasFiltrados = this.filtrarPlanoContas();\n  }\n\n  filtrarPlanoContas(): PlanoContas[] {\n    if (this.planoContas) {\n      if (this.filtroSelecionado === 'CONTA SINTÉTICA') {\n        return this.planoContas.filter(c => c.categoria === 'SINTÉTICA');\n      } else if (this.filtroSelecionado === 'CONTA ANALÍTICA') {\n        return this.planoContas.filter(c => c.categoria === 'ANALÍTICA');\n      } else {\n        return this.planoContas;\n      }\n    } else {\n      return [];\n    }\n  }\n\n  retornaInferiores(idSuperior: number) {\n    return this.planoContas.filter(c => c.planoContasId === idSuperior);\n  }\n\n  async filtrarLancamentos(conta: PlanoContas) {\n    let debito = 0;\n    let credito = 0;\n    this.lancamentos.filter(c => c.planoDebitoId === conta.id).forEach((lancamento => {\n      debito = lancamento.valor + debito;\n    }));\n    this.lancamentos.filter(c => c.planoCreditoId === conta.id).forEach((lancamento => {\n      credito = lancamento.valor + credito;\n    }));\n    const saldo = (debito - credito);\n    let espaco = '';\n    for (let index = 0; index < conta.nivel.length; index++) {\n      espaco += '  ';\n      index = index;\n    }\n    conta = Object.assign(conta, {valorDebito: debito, valorCredito: credito, espacamento: espaco,\n      valorSaldo: (saldo < 0) ? (saldo * -1) : saldo, saldoTipo: (saldo < 0) ? 'C' : 'D',\n      negrito: (conta.categoria === 'SINTÉTICA') ? 'bold' : 'regular'});\n    this.listaContasFiltradas.push(conta);\n    if (conta.planoConta) {\n      conta.planoConta.forEach((contaFilho) => {\n        this.filtrarLancamentos(contaFilho);\n      });\n    }\n  }\n\n  getLancamentos() {\n    this.lancamentoService.getAllLancamentos().subscribe(\n      (_LANCAMENTOS: Lancamentos[]) => {\n      this.lancamentos = _LANCAMENTOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaS: ${error.error}`);\n    });\n  }\n\n  getPlanoContasFilhosPorId(idConta: number) {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.listaContas = _PLANOS.filter(c => c.id === idConta)[0];\n      this.listaContasFiltradas = [];\n      this.filtrarLancamentos(this.listaContas);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContas = _PLANOS;\n      this.setFiltroSelecionado('GERAL');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n}\n","module.exports = \".modal-xl {\\r\\n    width: 55%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9wYWdhbWVudG8vZGV0YWxoYXJQYWdhbWVudG8vZGV0YWxoYXJQYWdhbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNlaXJvL3BhZ2FtZW50by9kZXRhbGhhclBhZ2FtZW50by9kZXRhbGhhclBhZ2FtZW50by5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuIl19 */\"","module.exports = \"{{abrirTemplate(templateDetalharPagamento)}}\\n<div bsModal #templateDetalharPagamento=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\"\\n  class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Pagamento ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateDetalharPagamento)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroPagamento\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Emissão</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataEmissao\\\"\\n                [ngModel]=\\\"cadastroPagamento.get('dataEmissao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroPagamento.get('dataEmissao').errors && \\n                cadastroPagamento.get('dataEmissao').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('dataEmissao').hasError('required') &&cadastroPagamento.get('dataEmissao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Pessoa/Fornecedor:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"pessoas\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"pessoaIdSelecionado\\\" formControlName=\\\"pessoasId\\\">\\n              </ng-select>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor do Pagamento:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valorTotal\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroPagamento.get('valorTotal').errors && \\n                  cadastroPagamento.get('valorTotal').touched}\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('valorTotal').hasError('required') && cadastroPagamento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('valorTotal').hasError('min') && cadastroPagamento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Centro de Despesa:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"centrosDespesa\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"centroDespesaIdSelecionado\\\"\\n                formControlName=\\\"centroDespesaId\\\" [disabled]=\\\"true\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Conta:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasDespesa\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\" disabled>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <hr style=\\\"width: 100%\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Pagamento:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planosPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoPagamentoIdSelecionado\\\"\\n                formControlName=\\\"planoPagamentoId\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n\\n        <div *ngIf=\\\"parcelas && parcelas.length > 0\\\" class=\\\"box box-success\\\">\\n          <div class=\\\"box-body\\\">\\n            <table class=\\\"table table-responsive table-bordered\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Documento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Data de Vencimento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Forma de Pagamento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Valor da Parcela</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Status</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Ações</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let parcela of parcelas\\\">\\n                  <td style=\\\"text-align: center;\\\">{{parcela.documento}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataVencimento }}</td>\\n                  <td style=\\\"text-align: center;\\\">{{parcela.formaPagamento.descricao}}</td>\\n                  <td style=\\\"text-align: center;\\\">{{parcela.valor | currency:' ':false}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PENDENTE'\\\" class=\\\"label label-warning\\\">\\n                      {{ parcela.status }}\\n                    </span>\\n                    <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PAGO'\\\" class=\\\"label label-success\\\">\\n                      {{ parcela.status }}\\n                    </span>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\"><a *ngIf=\\\"parcela.status == 'PENDENTE'\\\" tooltip=\\\"Quitar Parcela\\\" class=\\\"btn btn-sm btn-success\\\">\\n                      <i class=\\\"fa fa-usd\\\"></i>\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateDetalharPagamento)\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { Pagamentos } from 'src/app/_models/Financeiro/Pagamentos/Pagamentos';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PagamentoService } from 'src/app/_services/Financeiro/Pagamentos/pagamento.service';\nimport { CentroDespesaService } from 'src/app/_services/Cadastros/CentroDespesa/centroDespesa.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Component({\n  selector: 'app-detalhar-pagamento',\n  templateUrl: './detalharPagamento.component.html',\n  styleUrls: ['./detalharPagamento.component.css']\n})\nexport class DetalharPagamentoComponent implements OnInit {\n\n  @Input() idPagamento: number;\n  @Input() produtoItem: ProdutoItem;\n\n  cadastroPagamento: FormGroup;\n\n  pessoas: Pessoa[];\n  pessoaIdSelecionado: number;\n\n  centrosDespesa: CentroDespesa[];\n  centroDespesaIdSelecionado: any;\n\n  planoContasDespesa: PlanoContas[];\n  planoContasIdSelecionado: any;\n\n  idVenda: number;\n  venda: Venda;\n\n  pagamento: Pagamentos;\n  parcelas: any = [];\n\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: any;\n\n  formasPagamento: FormaPagamento[];\n  formaPagamentoIdSelecionado: any;\n\n  templateEnabled = false;\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private pagamentoService: PagamentoService,\n              private centroDespesaService: CentroDespesaService,\n              private planoContaService: PlanoContaService,\n              public dataService: DataService,\n              private planoPagamentoService: PlanoPagamentoService,\n              private formaPagamentoService: FormaPagamentoService,\n              private pessoaService: PessoaService,\n              private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.getCentroDespesa();\n    this.getPessoas();\n    this.getFormaPagamento();\n    this.getPlanoContas();\n    this.getPlanoPagamento();\n    this.validarPagamentos();\n    this.carregarPagamento();\n  }\n\n  carregarPagamento() {\n    this.pagamento = null;\n    this.pagamentoService.getPagamentosById(this.idPagamento)\n      .subscribe(\n        (_PAGAMENTO: Pagamentos) => {\n          this.pagamento = Object.assign(_PAGAMENTO, {\n            dataEmissao: this.dataService.getDataPTBR(_PAGAMENTO.dataEmissao)\n          });\n          this.pessoaIdSelecionado = this.pagamento.pessoasId;\n          this.centroDespesaIdSelecionado = this.pagamento.centroDespesaId;\n          this.planoPagamentoIdSelecionado = this.pagamento.planoPagamentoId;\n\n          this.cadastroPagamento.patchValue(this.pagamento);\n          this.cadastroPagamento.disable();\n          this.parcelas = this.pagamento.parcelas;\n\n          this.parcelas.forEach((parcela) => {\n            parcela.dataVencimento = this.dataService.getDataPTBR(parcela.dataVencimento);\n          });\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Pagamento: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validarPagamentos() {\n    this.cadastroPagamento = this.fb.group({\n        id:  [''],\n        pessoasId: ['', Validators.required],\n        dataEmissao: ['', Validators.required],\n        dataCompetencia: [''],\n        qtdParcelas: ['', Validators.required],\n        valorTotal: ['', [Validators.required, Validators.min(1)]],\n        planoPagamentoId: ['', Validators.required],\n        centroDespesaId: [{value: '', disabled: true}, Validators.required],\n        planoContasId: [{value: '', disabled: true}, Validators.required],\n    });\n  }\n\n  getPessoas() {\n    this.pessoaService.getAllPessoa().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_PESSOAS: Pessoa[]) => {\n      this.pessoas = _PESSOAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Pessoas: ${error.error}`);\n    });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContasDespesa = _PLANOS.filter(c => c.tipo === 'DESPESA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getCentroDespesa() {\n    this.centroDespesaService.getAllCentroDespesa().subscribe(\n      (_CENTROS: CentroDespesa[]) => {\n      this.centrosDespesa = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Despesa: ${error.error}`);\n    });\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_PLANOS: PlanoPagamento[]) => {\n      this.planosPagamento = _PLANOS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamento: ${error.error}`);\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.pagamentoService.setDetalharPagamentoStatus(false);\n    this.templateEnabled = false;\n  }\n\n}\n","module.exports = \"<h2>Pagamentos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  (click)=\\\"abrirTemplatePagamento()\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Pagamento\\n        </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th style=\\\"text-align: center;\\\">N° Doc</th>\\n            <th style=\\\"text-align: center;\\\">Status</th>\\n            <th>Pessoa</th>\\n            <th style=\\\"text-align: center;\\\">Data Emissão</th>\\n            <th style=\\\"text-align: center;\\\">Data Vencimento</th>\\n            <th style=\\\"text-align: center;\\\">Forma Pagamento</th>\\n            <th style=\\\"text-align: center;\\\">Valor Parcela</th>\\n            <th style=\\\"text-align: center;\\\">Valor Pago</th>\\n            <th style=\\\"text-align: center;\\\">Valor Restante</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"parcelas && parcelas.length\\\">\\n          <tr *ngFor=\\\"let parcela of parcelas | paginate: { itemsPerPage: 5,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td style=\\\"text-align: center;\\\">{{ parcela.documento }}</td>\\n            <td style=\\\"text-align: center;\\\">\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PENDENTE'\\\"  class=\\\"label label-warning\\\">\\n                {{ parcela.status }}\\n              </span>\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PAGO'\\\" class=\\\"label label-success\\\">\\n                {{ parcela.status }}\\n              </span>\\n            </td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ parcela.pessoas.nome }}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataEmissao  | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataVencimento  | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.formaPagamento.descricao }}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valor | currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valorPago| currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valorRestante | currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div class=\\\"btn-group\\\">\\n                <a *ngIf=\\\"this.visualizar == true\\\" (click)=\\\"abrirTemplateDetalharPagamento(parcela.pagamentosId)\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!parcelas\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhuma Parcela encontrada!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n<app-template-pagamento  *ngIf=\\\"getTemplatePagamento() == true\\\"></app-template-pagamento>\\n\\n<app-detalhar-pagamento [idPagamento]=\\\"this.idDetalharPagamento\\\" *ngIf=\\\"getDetalharPagamento() == true\\\"></app-detalhar-pagamento>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Pagamentos } from 'src/app/_models/Financeiro/Pagamentos/Pagamentos';\nimport { PagamentoParcelas } from 'src/app/_models/Financeiro/Pagamentos/PagamentoParcelas';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { PagamentoService } from 'src/app/_services/Financeiro/Pagamentos/pagamento.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-pagamento',\n  templateUrl: './pagamento.component.html'\n})\nexport class PagamentoComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  visualizar = false;\n\n  pagamentos: Pagamentos[];\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  parcelas: PagamentoParcelas[] = [];\n\n  idDetalharPagamento: number;\n\n  constructor(private toastr: ToastrService,\n              private permissaoService: PermissaoService,\n              private pagamentoService: PagamentoService) { }\n\n  ngOnInit() {\n    this.pagamentoService.setDetalharPagamentoStatus(false);\n    this.getPagamentos();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PAGAMENTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PAGAMENTOS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getPagamentos() {\n    this.pagamentoService.getAllPagamentos().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_PAGAMENTOS: Pagamentos[]) => {\n      this.pagamentos = _PAGAMENTOS;\n      console.log(this.pagamentos);\n\n      this.pagamentos.forEach((pagamento) => {\n        pagamento.parcelas.forEach(parcela => {\n\n          parcela = Object.assign(parcela, {\n            pessoas: pagamento.pessoas,\n            dataEmissao: pagamento.dataEmissao,\n            valorTotal: pagamento.valorTotal,\n            valorRestante: parcela.valor - parcela.valorPago,\n            centroDespesaId: pagamento.centroDespesaId,\n            planoContasId: pagamento.planoContasId\n          });\n\n          this.parcelas.push(parcela);\n        });\n      });\n\n      console.log(this.parcelas);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Pagamentos: ${error.error}`);\n    });\n  }\n\n  getDetalharPagamento() {\n    return this.pagamentoService.getDetalharPagamentoStatus();\n  }\n\n  abrirTemplateDetalharPagamento(idPagamento: number) {\n    this.idDetalharPagamento = idPagamento;\n    this.pagamentoService.setDetalharPagamentoStatus(true);\n  }\n\n  getTemplatePagamento() {\n    return this.pagamentoService.getTemplatePagamentoStatus();\n  }\n\n  abrirTemplatePagamento() {\n    this.pagamentoService.setTemplatePagamentoStatus(true);\n  }\n}\n","module.exports = \".modal-xl {\\r\\n    width: 50%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9wYWdhbWVudG8vdGVtcGxhdGVQYWdhbWVudG8vdGVtcGxhdGVQYWdhbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNlaXJvL3BhZ2FtZW50by90ZW1wbGF0ZVBhZ2FtZW50by90ZW1wbGF0ZVBhZ2FtZW50by5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuIl19 */\"","module.exports = \"{{abrirTemplate(templatePagamentos)}}\\n<div bsModal #templatePagamentos=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\"\\n  class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Pagamento ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templatePagamentos)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroPagamento\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Emissão</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataEmissao\\\"\\n                [ngModel]=\\\"cadastroPagamento.get('dataEmissao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroPagamento.get('dataEmissao').errors && \\n                cadastroPagamento.get('dataEmissao').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('dataEmissao').hasError('required') &&cadastroPagamento.get('dataEmissao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label>Pessoa/Fornecedor:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"pessoas\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n                [(ngModel)]=\\\"pessoaIdSelecionado\\\" formControlName=\\\"pessoasId\\\">\\n              </ng-select>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor do Pagamento:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valorTotal\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroPagamento.get('valorTotal').errors && \\n                  cadastroPagamento.get('valorTotal').touched}\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('valorTotal').hasError('required') && cadastroPagamento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('valorTotal').hasError('min') && cadastroPagamento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Centro de Despesa:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"centrosDespesa\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"centroDespesaIdSelecionado\\\"\\n                formControlName=\\\"centroDespesaId\\\" [disabled]=\\\"true\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Conta:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasDespesa\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\" disabled>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <hr style=\\\"width: 100%\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Pagamento: </label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planosPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoPagamentoIdSelecionado\\\"\\n                formControlName=\\\"planoPagamentoId\\\">\\n              </ng-select>\\n            </div>\\n            <div  *ngIf=\\\"!idVenda\\\" class=\\\"form-check form-group col-md-2\\\" style=\\\"margin-top: 30px;\\\">\\n              <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"diasFixo\\\"\\n                  formControlName=\\\"diasfixoCheck\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"customCheck\\\">&nbsp;Dias Fixo</label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\" style=\\\"margin-left: -10px;\\\" *ngIf=\\\"this.diasFixo == true\\\">\\n              <label>Dia:</label>\\n              <input class=\\\"form-control\\\" currencyMask formControlName=\\\"diasFixo\\\"\\n                [options]=\\\"{ prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\" v\\n                [ngClass]=\\\"{ 'is-invalid': cadastroPagamento.get('diasFixo').errors && cadastroPagamento.get('diasFixo').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('diasFixo').hasError('required') && cadastroPagamento.get('diasFixo').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroPagamento.get('diasFixo').hasError('min') && cadastroPagamento.get('diasFixo').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n\\n            <div class=\\\" form-group col-md-2\\\">\\n              <button style=\\\"position:relative;margin-top: 24px;\\\" [disabled]=\\\"cadastroPagamento.get('dataEmissao').hasError('required') == true ||\\n                   cadastroPagamento.get('valorTotal').hasError('required') == true || \\n                   cadastroPagamento.get('valorTotal').hasError('min') == true\\\" tooltip=\\\"Gerar Parcelas\\\" (click)=\\\"gerarParcelas()\\\"\\n                class=\\\"btn btn-primary\\\">\\n                &nbsp;Gerar Parcelas\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n\\n        <div *ngIf=\\\"parcelas && parcelas.length > 0\\\" class=\\\"box box-success\\\">\\n          <div class=\\\"box-body\\\">\\n            <table class=\\\"table table-responsive table-bordered\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Documento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Data de Vencimento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Forma de Pagamento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Valor da Parcela</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let parcela of parcelas\\\">\\n                  <td style=\\\"text-align: center;\\\">{{parcela.documento}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataVencimento\\\"\\n                        [ngModel]=\\\"this.dataService.getDataPTBR(parcela.dataVencimento)\\\" (ngModel)=\\\"parcela.dataVencimento\\\"  bsDatepicker\\n                        [bsConfig]=\\\"this.bsConfig\\\" />\\n                    </div>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"formasPagamento\\\" bindLabel=\\\"descricao\\\"\\n                        required bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"parcela.formaPagamentoId\\\"\\n                        name=\\\"formaPagamentoId\\\" disabled>\\n                      </ng-select>\\n                    </div>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" currencyMask name=\\\"valor\\\" [(ngModel)]=\\\"parcela.valor\\\"\\n                          [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" />\\n                        <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n                      </div>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templatePagamentos)\\\">\\n          Fechar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"cadastroPagamento.get('dataEmissao').hasError('required') == true ||\\n        cadastroPagamento.get('valorTotal').hasError('required') == true || \\n        cadastroPagamento.get('valorTotal').hasError('min') == true || parcelas.length == 0 || !parcelas\\\" (click)=\\\"lancarPagamento()\\\">\\n          Cadastrar Pagamento\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { PagamentoParcelas } from 'src/app/_models/Financeiro/Pagamentos/PagamentoParcelas';\nimport { Pagamentos } from 'src/app/_models/Financeiro/Pagamentos/Pagamentos';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { PagamentoService } from 'src/app/_services/Financeiro/Pagamentos/pagamento.service';\nimport { CentroDespesaService } from 'src/app/_services/Cadastros/CentroDespesa/centroDespesa.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { LancamentoService } from 'src/app/_services/Movimentos/Lancamentos/lancamento.service';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport * as moment from 'moment';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\nimport { VendaConfig } from 'src/app/_models/Movimentos/Venda/VendaConfig';\n@Component({\n  selector: 'app-template-pagamento',\n  templateUrl: './templatePagamento.component.html',\n  styleUrls: ['./templatePagamento.component.css']\n})\nexport class TemplatePagamentoComponent implements OnInit {\n\n  @Input() produtoItem: ProdutoItem;\n  @Input() idVenda: number;\n  @Input() vendaClienteId: number;\n  @ViewChild('templatePagamentos') templatePagamentos: any;\n\n  cadastroPagamento: FormGroup;\n\n  clientes: Cliente[];\n\n  centrosDespesa: CentroDespesa[];\n  centroDespesaIdSelecionado: any;\n\n  planoContasDespesa: PlanoContas[];\n  planoContasIdSelecionado: any;\n\n  pagamento: Pagamentos;\n  parcelas: PagamentoParcelas[] = [];\n\n  pessoas: Pessoa[];\n  pessoaIdSelecionado: number;\n\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: any;\n\n  formasPagamento: FormaPagamento[];\n  formaPagamentoIdSelecionado: any;\n\n  tipoPagamento: any;\n  qtdParcelas: any;\n  prazoPrimeiraParcela: any;\n  intervaloParcelas: any;\n\n  valorRealizado: VendaValorRealizado;\n  idProdutoItemValorRealizado: number;\n\n  vendaConfig: VendaConfig;\n\n  templateEnabled = false;\n  diasFixo = false;\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private pagamentoService: PagamentoService,\n              private centroDespesaService: CentroDespesaService,\n              private planoContaService: PlanoContaService,\n              public dataService: DataService,\n              private pessoaService: PessoaService,\n              private vendaService: VendaService,\n              private permissaoService: PermissaoService,\n              private planoPagamentoService: PlanoPagamentoService,\n              private formaPagamentoService: FormaPagamentoService,\n              private lancamentoService: LancamentoService) { }\n\n  ngOnInit() {\n    this.getPessoas();\n    this.getPlanoContas();\n    this.getFormaPagamento();\n    this.getCentroDespesa();\n    this.getPlanoPagamento();\n    this.getVendaConfig();\n    this.validarPagamentos();\n    this.carregarPagamentoVenda(this.produtoItem);\n  }\n\n  carregarPagamentoVenda(produtoItem: ProdutoItem) {\n    this.centroDespesaIdSelecionado = produtoItem.centroDespesaId;\n    this.planoContasIdSelecionado = produtoItem.planoContasId;\n    this.idProdutoItemValorRealizado = produtoItem.id;\n  }\n\n  validarPagamentos() {\n    this.cadastroPagamento = this.fb.group({\n        id:  [''],\n        pessoasId: ['', Validators.required],\n        dataEmissao: ['', Validators.required],\n        dataCompetencia: [''],\n        qtdParcelas: ['', Validators.required],\n        valorTotal: ['', [Validators.required, Validators.min(1)]],\n        planoPagamentoId: ['', Validators.required],\n        centroDespesaId: [{value: '', disabled: true}, Validators.required],\n        planoContasId: [{value: '', disabled: true}, Validators.required],\n        diasFixo: ['10', [Validators.required, Validators.min(1)]],\n        diasfixoCheck: ['']\n    });\n  }\n\n  getInfoPlanoPagamento(idPlanoPagamento: number): PlanoPagamento {\n    const info = this.planosPagamento.filter(c => c.id === idPlanoPagamento)[0];\n    return info;\n  }\n\n  setarDiaFixo(data: string, dia: string) {\n    if (data && data !== null && data.toString().length > 0) {\n      const novaData = data.split('T')[0].split('-');\n      const mes = novaData[1];\n      const ano = novaData[0];\n      return ano + '-' + mes + '-' + dia;\n    } else {\n      return '';\n    }\n  }\n\n  gerarParcelas() {\n    this.parcelas = [];\n    this.pagamento = new Pagamentos();\n    this.pagamento.parcelas = [];\n    const diaFixo = this.cadastroPagamento.get('diasFixo').value;\n    const dataEmissao = this.cadastroPagamento.get('dataEmissao').value.toLocaleString();\n    this.qtdParcelas = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).qtdParcelas;\n    this.prazoPrimeiraParcela = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).prazoPrimeiraParcela;\n    this.intervaloParcelas = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).intervaloParcelas;\n    this.formaPagamentoIdSelecionado = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).formaPagamentoId;\n    const formaPag = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).formaPagamento;\n    const valorTotal = this.cadastroPagamento.get('valorTotal').value;\n    const valorParcela = Number(Number(valorTotal) / this.qtdParcelas);\n    for (let i = 0; i < this.qtdParcelas; i++) {\n      const documentoText = this.idVenda + '/' + (i + 1);\n      let diasSoma = 0;\n      let mesSoma = 0;\n      if (Number(this.prazoPrimeiraParcela) === 0) {\n        if (i === 0) {\n          mesSoma = 0;\n          diasSoma = Number(this.prazoPrimeiraParcela);\n        } else {\n          mesSoma = i;\n          diasSoma = (Number(this.intervaloParcelas) * i);\n        }\n      } else {\n        if (i === 0) {\n          diasSoma = Number(this.prazoPrimeiraParcela);\n        } else {\n          diasSoma = Number(this.intervaloParcelas * i) + Number(this.prazoPrimeiraParcela);\n        }\n        mesSoma = i + 1;\n      }\n      const dataEmissaoSQL = moment(dataEmissao, 'DD/MM/YYYY').format('YYYY-MM-DD');\n      const dataEmissaoPTBR = this.dataService.getDataPTBR(dataEmissaoSQL);\n      const dataVencVariavel = moment(dataEmissaoPTBR, 'DD/MM/YYYY').add('days', diasSoma).format('YYYY-MM-DD');\n      const dataVencFixoAux = moment(dataEmissaoPTBR, 'DD/MM/YYYY').add('months', mesSoma).format('YYYY-MM-DD');\n      const dataVencFixo = (Number(this.prazoPrimeiraParcela) === 0 && i === 0) ? dataEmissaoPTBR :\n                            this.dataService.getDataPTBR(this.setarDiaFixo(dataVencFixoAux, diaFixo));\n\n      const parcela = Object.assign({id: 0, documento: documentoText,\n        dataVencimento: (this.diasFixo === true) ? dataVencFixo : this.dataService.getDataPTBR(dataVencVariavel),\n        dataPagamento: (i === 0 && (dataEmissaoSQL === dataVencVariavel || dataEmissaoSQL === dataVencFixo)) ? dataEmissaoSQL : null,\n        valor: Number(valorParcela),\n        valorPago: (Number(this.prazoPrimeiraParcela) === 0 && i === 0) ? Number(valorParcela) : 0,\n        status: ((i === 0 && (dataEmissaoSQL === dataVencVariavel || dataEmissaoSQL === dataVencFixo)) ||\n                formaPag.descricao === 'CHEQUE') ? 'PAGO' : 'PENDENTE',\n        formaPagamentoId: this.formaPagamentoIdSelecionado,\n        formaPagamento: formaPag,\n        dataLancamento: dataEmissao,\n        numeroParcela: i\n      });\n      this.parcelas.push(parcela);\n    }\n  }\n\n  efetuarLancamentos() {\n    let lancamentos: Lancamentos[];\n    lancamentos = [];\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.parcelas.forEach((parcela) => {\n      const conta = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).planoContasId;\n      lancamentos.push(Object.assign({\n        id: 0,\n        centroDespesaId: this.centroDespesaIdSelecionado,\n        descricao: 'VALOR PAGT - VENDA DE SISTEMA',\n        planoDebitoId:  this.planoContasIdSelecionado,\n        planoCreditoId: this.vendaConfig.planoContaPagParcelaAVistaId,\n        valor: parcela.valor,\n        usuarioId: this.permissaoService.getUsuarioId(),\n        dataHora: dataAtual,\n        dataLancamento: this.dataService.getDataSQL(parcela.dataLancamento)\n      }));\n    });\n    this.lancamentoService.novosLancamentos(lancamentos).subscribe(() => {\n      console.log('Lançamentos Efetuados.');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar inserir lancamentos : ${error.error}`);\n    });\n  }\n\n  lancarPagamento() {\n    const dataEmissao = this.cadastroPagamento.get('dataEmissao').value.toLocaleString();\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.pagamento = Object.assign(this.cadastroPagamento.value, {\n      id: 0,\n      vendaId: this.idVenda,\n      qtdParcelas: this.qtdParcelas,\n      dataEmissao: this.dataService.getDataSQL(dataEmissao),\n      centroDespesaId: this.centroDespesaIdSelecionado,\n      planoContasId: this.planoContasIdSelecionado,\n      produtosItensId: this.idProdutoItemValorRealizado,\n      planoPagamento: null,\n      planoPagamentoId: this.planoPagamentoIdSelecionado,\n      parcelas: []\n    });\n    this.pagamentoService.novoPagamento(this.pagamento).subscribe((_ID) => {\n      const pagamentoParcelas: PagamentoParcelas[] = [];\n      this.parcelas.forEach((parcela) => {\n        const parc = Object.assign(parcela, {\n          id: 0,\n          dataVencimento: this.dataService.getDataSQL(parcela.dataVencimento),\n          formaPagamento: null,\n          documento: _ID.toString() + '/' + parcela.documento,\n          pagamentosId: _ID\n        });\n        pagamentoParcelas.push(parc);\n      });\n      this.pagamentoService.novoPagamentoParcelas(pagamentoParcelas).subscribe(() => {\n        this.valorRealizado = Object.assign({\n          id: 0,\n          vendaId: this.idVenda,\n          produtosItensId: this.idProdutoItemValorRealizado,\n          dataHoraUltAlt: dataAtual,\n          pagamentos: null,\n          pagamentosId: _ID,\n        });\n        this.vendaService.novoVendaValorRealizado(this.valorRealizado).subscribe(() => {\n          this.toastr.success('Salvo com Sucesso!');\n          this.efetuarLancamentos();\n          this.vendaService.atualizarVenda();\n          this.vendaService.atualizarPagamentos();\n          this.fecharTemplate(this.templatePagamentos);\n        }, error => {\n          console.log(error.error);\n          this.toastr.error(`Erro ao tentar inserir novo Valor Realizado : ${error.error}`);\n        });\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar inserir novo Pagamento Parcelas : ${error.error}`);\n      });\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar inserir novo Pagamento: ${error.error}`);\n    });\n  }\n\n  getPessoas() {\n    this.pessoaService.getAllPessoa().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_PESSOAS: Pessoa[]) => {\n      this.pessoas = _PESSOAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Pessoas: ${error.error}`);\n    });\n  }\n\n  getVendaConfig() {\n    this.vendaService.getVendaConfig().subscribe(\n      (_CONFIG: VendaConfig) => {\n      this.vendaConfig = _CONFIG;\n      if (this.idVenda !== 0) {\n        this.planoPagamentoIdSelecionado = this.vendaConfig.planoPagamentoSaidasId;\n        this.cadastroPagamento.get('planoPagamentoId').disable();\n      }\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaConfig: ${error.error}`);\n    });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContasDespesa = _PLANOS.filter(c => c.tipo === 'DESPESA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getCentroDespesa() {\n    this.centroDespesaService.getAllCentroDespesa().subscribe(\n      (_CENTROS: CentroDespesa[]) => {\n      this.centrosDespesa = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Despesa: ${error.error}`);\n    });\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_PLANOS: PlanoPagamento[]) => {\n      this.planosPagamento = _PLANOS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamento: ${error.error}`);\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.pagamentoService.setTemplatePagamentoStatus(false);\n    this.templateEnabled = false;\n  }\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 55%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9yZWNlYmltZW50by9kZXRhbGhhclJlY2ViaW1lbnRvL2RldGFsaGFyUmVjZWJpbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNlaXJvL3JlY2ViaW1lbnRvL2RldGFsaGFyUmVjZWJpbWVudG8vZGV0YWxoYXJSZWNlYmltZW50by5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuIl19 */\"","module.exports = \"{{abrirTemplate(templateDetalharRecebimento)}}\\n<div bsModal #templateDetalharRecebimento=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Recebimento ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\"\\n          (click)=\\\"fecharTemplate(templateDetalharRecebimento)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroRecebimento\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Emissão</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataEmissao\\\"\\n                [ngModel]=\\\"cadastroRecebimento.get('dataEmissao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroRecebimento.get('dataEmissao').errors && \\n                cadastroRecebimento.get('dataEmissao').touched}\\\"/>\\n                <div *ngIf=\\\"cadastroRecebimento.get('dataEmissao').hasError('required') &&cadastroRecebimento.get('dataEmissao').touched\\\"\\n                  class=\\\"invalid-feedback\\\">\\n                  Campo obrigatório.\\n                </div>\\n            </div>\\n            \\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor da Venda:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valorTotal\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroRecebimento.get('valorTotal').errors && \\n                  cadastroRecebimento.get('valorTotal').touched}\\\"/>           \\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div *ngIf=\\\"cadastroRecebimento.get('valorTotal').hasError('required') && cadastroRecebimento.get('valorTotal').touched\\\"\\n                    class=\\\"invalid-feedback\\\">\\n                    Campo obrigatório.\\n                </div>\\n                <div *ngIf=\\\"cadastroRecebimento.get('valorTotal').hasError('min') && cadastroRecebimento.get('valorTotal').touched\\\"\\n                    class=\\\"invalid-feedback\\\">\\n                    Valor deve ser maior que 0.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Centro de Receita:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"centrosReceita\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"centroReceitaIdSelecionado\\\"\\n                formControlName=\\\"centroReceitaId\\\" [disabled]=\\\"true\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Conta:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasReceita\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\" disabled>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <hr style=\\\"width: 100%\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Pagamento:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planosPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoPagamentoIdSelecionado\\\"\\n                formControlName=\\\"planoPagamentoId\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n\\n        <div *ngIf=\\\"parcelas && parcelas.length > 0\\\" class=\\\"box box-success\\\">\\n          <div class=\\\"box-body\\\">\\n            <table class=\\\"table table-responsive table-bordered\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Documento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Data de Vencimento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Forma de Pagamento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Valor da Parcela</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Status</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Ações</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let parcela of parcelas\\\">\\n                  <td style=\\\"text-align: center;\\\">{{parcela.documento}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataVencimento }}</td>\\n                  <td style=\\\"text-align: center;\\\">{{parcela.formaPagamento.descricao}}</td>\\n                  <td style=\\\"text-align: center;\\\">{{parcela.valor | currency:' ':false}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PENDENTE'\\\"  class=\\\"label label-warning\\\">\\n                      {{ parcela.status }}\\n                    </span>\\n                    <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PAGO'\\\" class=\\\"label label-success\\\">\\n                      {{ parcela.status }}\\n                    </span>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\"><a \\n                      tooltip=\\\"Quitar Parcela\\\" class=\\\"btn btn-sm btn-success\\\">\\n                      <i class=\\\"fa fa-usd\\\"></i>\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateDetalharRecebimento)\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { CentroReceita } from 'src/app/_models/Cadastros/CentroReceita/CentroReceita';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { Recebimentos } from 'src/app/_models/Financeiro/Recebimentos/Recebimentos';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { RecebimentoService } from 'src/app/_services/Financeiro/Recebimentos/recebimento.service';\nimport { CentroReceitaService } from 'src/app/_services/Cadastros/CentroReceita/centroReceita.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Component({\n  selector: 'app-detalhar-recebimento',\n  templateUrl: './detalharRecebimento.component.html',\n  styleUrls: ['./detalharRecebimento.component.css']\n})\nexport class DetalharRecebimentoComponent implements OnInit {\n\n  @Input() idRecebimento: number;\n  @Input() produtoItem: ProdutoItem;\n\n  cadastroRecebimento: FormGroup;\n\n  clientes: Cliente[];\n  recebimentoClientesId: any;\n\n  centrosReceita: CentroReceita[];\n  centroReceitaIdSelecionado: any;\n\n  planoContasReceita: PlanoContas[];\n  planoContasIdSelecionado: any;\n\n  idVenda: number;\n  venda: Venda;\n\n  recebimento: Recebimentos;\n  parcelas: any = [];\n\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: any;\n\n  formasPagamento: FormaPagamento[];\n  formaPagamentoIdSelecionado: any;\n\n  templateEnabled = false;\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private recebimentoService: RecebimentoService,\n              private centroReceitaService: CentroReceitaService,\n              private planoContaService: PlanoContaService,\n              public dataService: DataService,\n              private planoPagamentoService: PlanoPagamentoService,\n              private formaPagamentoService: FormaPagamentoService) { }\n\n  ngOnInit() {\n    this.getCentroReceita();\n    this.getFormaPagamento();\n    this.getPlanoContas();\n    this.getPlanoPagamento();\n    this.validarRecebimentos();\n    this.carregarRecebimento();\n  }\n\n  carregarRecebimento() {\n    this.recebimento = null;\n    this.recebimentoService.getRecebimentosById(this.idRecebimento)\n      .subscribe(\n        (_RECEBIMENTO: Recebimentos) => {\n          this.recebimento = Object.assign(_RECEBIMENTO, {\n            dataEmissao: this.dataService.getDataPTBR(_RECEBIMENTO.dataEmissao)\n          });\n\n          this.cadastroRecebimento.patchValue(this.recebimento);\n          this.cadastroRecebimento.disable();\n          this.parcelas = this.recebimento.parcelas;\n\n          this.parcelas.forEach((parcela) => {\n            parcela.dataVencimento = this.dataService.getDataPTBR(parcela.dataVencimento);\n          });\n\n          this.recebimentoClientesId = this.recebimento.clientesId;\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Recebimento: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validarRecebimentos() {\n    this.cadastroRecebimento = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        dataEmissao: ['', Validators.required],\n        dataCompetencia: [''],\n        qtdParcelas: ['', Validators.required],\n        valorTotal: ['', [Validators.required, Validators.min(1)]],\n        planoPagamentoId: ['', Validators.required],\n        centroReceitaId: [{value: '', disabled: true}, Validators.required],\n        planoContasId: [{value: '', disabled: true}, Validators.required],\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.recebimentoService.setDetalharRecebimentoStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContasReceita = _PLANOS.filter(c => c.tipo === 'RECEITA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getCentroReceita() {\n    this.centroReceitaService.getAllCentroReceita().subscribe(\n      (_CENTROS: CentroReceita[]) => {\n      this.centrosReceita = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Receita: ${error.error}`);\n    });\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_PLANOS: PlanoPagamento[]) => {\n      this.planosPagamento = _PLANOS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamento: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"<h2>Recebimentos</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  (click)=\\\"abrirTemplateRecebimento()\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Recebimento\\n        </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th style=\\\"text-align: center;\\\">N° Doc</th>\\n            <th style=\\\"text-align: center;\\\">Status</th>\\n            <th>Cliente</th>\\n            <th style=\\\"text-align: center;\\\">Data Emissão</th>\\n            <th style=\\\"text-align: center;\\\">Data Vencimento</th>\\n            <th style=\\\"text-align: center;\\\">Forma Pagamento</th>\\n            <th style=\\\"text-align: center;\\\">Valor Parcela</th>\\n            <th style=\\\"text-align: center;\\\">Valor Recebido</th>\\n            <th style=\\\"text-align: center;\\\">Valor Restante</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"parcelas && parcelas.length\\\">\\n          <tr *ngFor=\\\"let parcela of parcelas | paginate: { itemsPerPage: 50,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td style=\\\"text-align: center;\\\">{{ parcela.documento }}</td>\\n            <td style=\\\"text-align: center;\\\">\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PENDENTE'\\\"  class=\\\"label label-warning\\\">\\n                {{ parcela.status }}\\n              </span>\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"parcela.status == 'PAGO'\\\" class=\\\"label label-success\\\">\\n                {{ parcela.status }}\\n              </span>\\n            </td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ parcela.clientes.nomeFantasia }}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataEmissao  | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.dataVencimento  | date:'dd/MM/yyyy'}}</td>\\n            <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ parcela.formaPagamento.descricao }}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valor | currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valorRecebido | currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;\\\">{{parcela.valorRestante | currency:' ':false}}</td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div *ngIf=\\\"this.visualizar == true\\\" class=\\\"btn-group\\\">\\n                <a (click)=\\\"abrirTemplateDetalharRecebimento(parcela.recebimentosId)\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!parcelas\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhuma Parcela encontrada!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n\\n<app-template-recebimento [idVenda]=\\\"0\\\" *ngIf=\\\"getTemplateRecebimento() == true\\\"></app-template-recebimento>\\n\\n<app-detalhar-recebimento [idRecebimento]=\\\"this.idDetalharRecebimento\\\" *ngIf=\\\"getDetalharRecebimento() == true\\\"></app-detalhar-recebimento>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Recebimentos } from 'src/app/_models/Financeiro/Recebimentos/Recebimentos';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { RecebimentoService } from 'src/app/_services/Financeiro/Recebimentos/recebimento.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { RecebimentoParcelas } from 'src/app/_models/Financeiro/Recebimentos/RecebimentoParcelas';\n\n@Component({\n  selector: 'app-recebimento',\n  templateUrl: './recebimento.component.html'\n})\nexport class RecebimentoComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  visualizar = false;\n\n  recebimentos: Recebimentos[];\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  parcelas: RecebimentoParcelas[] = [];\n\n  idDetalharRecebimento: number;\n\n  constructor(private toastr: ToastrService,\n              private permissaoService: PermissaoService,\n              private recebimentoService: RecebimentoService) { }\n\n  ngOnInit() {\n    this.recebimentoService.setDetalharRecebimentoStatus(false);\n    this.getRecebimentos();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('RECEBIMENTOS', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('RECEBIMENTOS', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getRecebimentos() {\n    this.recebimentoService.getAllRecebimentos().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_RECEBIMENTOS: Recebimentos[]) => {\n      this.recebimentos = _RECEBIMENTOS;\n\n      this.recebimentos.forEach((recebimento) => {\n        recebimento.parcelas.forEach(parcela => {\n\n          parcela = Object.assign(parcela, {\n            clientes: recebimento.clientes,\n            dataEmissao: recebimento.dataEmissao,\n            valorTotal: recebimento.valorTotal,\n            valorRestante: parcela.valor - parcela.valorRecebido,\n            centroReceitaId: recebimento.centroReceitaId,\n            planoContasId: recebimento.planoContasId\n          });\n\n          this.parcelas.push(parcela);\n        });\n      });\n\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Recebimentos: ${error.error}`);\n    });\n  }\n\ngetDetalharRecebimento() {\n  return this.recebimentoService.getDetalharRecebimentoStatus();\n}\n\nabrirTemplateDetalharRecebimento(idRecebimento: number) {\n  this.idDetalharRecebimento = idRecebimento;\n  this.recebimentoService.setDetalharRecebimentoStatus(true);\n}\n\ngetTemplateRecebimento() {\n  return this.recebimentoService.getTemplateRecebimentoStatus();\n}\n\nabrirTemplateRecebimento() {\n  this.recebimentoService.setTemplateRecebimentoStatus(true);\n\n}\n\n\n}\n","module.exports = \".modal-xl {\\r\\n    width: 50%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jZWlyby9yZWNlYmltZW50by90ZW1wbGF0ZVJlY2ViaW1lbnRvL3RlbXBsYXRlUmVjZWJpbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNlaXJvL3JlY2ViaW1lbnRvL3RlbXBsYXRlUmVjZWJpbWVudG8vdGVtcGxhdGVSZWNlYmltZW50by5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuIl19 */\"","module.exports = \"{{abrirTemplate(templateRecebimentos)}}\\n<div bsModal #templateRecebimentos=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Recebimento ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateRecebimentos)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cadastroRecebimento\\\">\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Data Emissão</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataEmissao\\\"\\n                [ngModel]=\\\"cadastroRecebimento.get('dataEmissao').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\"\\n                [ngClass]=\\\"{ 'is-invalid': cadastroRecebimento.get('dataEmissao').errors && \\n                cadastroRecebimento.get('dataEmissao').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroRecebimento.get('dataEmissao').hasError('required') &&cadastroRecebimento.get('dataEmissao').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Valor da Venda:</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask formControlName=\\\"valorTotal\\\"\\n                  [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" [ngClass]=\\\"{ 'is-invalid': cadastroRecebimento.get('valorTotal').errors && \\n                  cadastroRecebimento.get('valorTotal').touched}\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroRecebimento.get('valorTotal').hasError('required') && cadastroRecebimento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroRecebimento.get('valorTotal').hasError('min') && cadastroRecebimento.get('valorTotal').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Centro de Receita:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"centrosReceita\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"centroReceitaIdSelecionado\\\"\\n                formControlName=\\\"centroReceitaId\\\" [disabled]=\\\"true\\\">\\n              </ng-select>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Conta:</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContasReceita\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"planoContasIdSelecionado\\\" formControlName=\\\"planoContasId\\\" disabled>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\">\\n                  <div><span></span><span [ngOptionHighlight]=\\\"search\\\">{{item.descricao}}</span></div>\\n                  <small><b>Tipo:</b> {{item.tipo}}</small> <br>\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <hr style=\\\"width: 100%\\\">\\n            <div class=\\\"form-group col-md-5\\\">\\n              <label style=\\\"white-space: nowrap;\\\">Plano de Pagamento:(*)</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planosPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoPagamentoIdSelecionado\\\"\\n                formControlName=\\\"planoPagamentoId\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-check form-group col-md-2\\\" style=\\\"margin-top: 30px;\\\">\\n              <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"diasFixo\\\"\\n                  formControlName=\\\"diasfixoCheck\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"customCheck\\\">&nbsp;Dias Fixo</label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\" style=\\\"margin-left: -10px;\\\" *ngIf=\\\"this.diasFixo == true\\\">\\n              <label>Dia:</label>\\n              <input class=\\\"form-control\\\" currencyMask formControlName=\\\"diasFixo\\\"\\n                [options]=\\\"{ prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\" v\\n                [ngClass]=\\\"{ 'is-invalid': cadastroRecebimento.get('diasFixo').errors && cadastroRecebimento.get('diasFixo').touched}\\\" />\\n              <div\\n                *ngIf=\\\"cadastroRecebimento.get('diasFixo').hasError('required') && cadastroRecebimento.get('diasFixo').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Campo obrigatório.\\n              </div>\\n              <div\\n                *ngIf=\\\"cadastroRecebimento.get('diasFixo').hasError('min') && cadastroRecebimento.get('diasFixo').touched\\\"\\n                class=\\\"invalid-feedback\\\">\\n                Valor deve ser maior que 0.\\n              </div>\\n            </div>\\n\\n            <div class=\\\" form-group col-md-2\\\">\\n              <button style=\\\"position:relative;margin-top: 24px;\\\" [disabled]=\\\"cadastroRecebimento.get('dataEmissao').hasError('required') == true ||\\n                   cadastroRecebimento.get('valorTotal').hasError('required') == true || \\n                   cadastroRecebimento.get('valorTotal').hasError('min') == true\\\" (click)=\\\"gerarParcelas()\\\"\\n                tooltip=\\\"Gerar Parcelas\\\" class=\\\"btn btn-primary\\\">\\n                &nbsp;Gerar Parcelas\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\" form-group col-md-2 pull-right\\\" style=\\\"margin-right: 35px;\\\">\\n              <button  class=\\\"btn btn-success\\\" (click)=\\\"abrirTemplateChequePre()\\\" tooltip=\\\"Novo Cheque Pre\\\">\\n                <i class=\\\"fa fa-plus-circle\\\"> </i>&nbsp;Novo Cheque Pre</button>\\n            </div>\\n          </div>\\n        </form>\\n\\n        <div *ngIf=\\\"parcelas && parcelas.length > 0\\\" class=\\\"box box-success\\\">\\n          <div class=\\\"box-body\\\">\\n            <table class=\\\"table table-responsive table-bordered\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Documento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Data de Vencimento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Forma de Pagamento</th>\\n                  <th style=\\\"white-space: nowrap;text-align: center;\\\">Valor da Parcela</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let parcela of parcelas\\\">\\n                  <td style=\\\"text-align: center;\\\">{{parcela.documento}}</td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataVencimento\\\"\\n                        [ngModel]=\\\"this.dataService.getDataPTBR(parcela.dataVencimento)\\\" (ngModel)=\\\"parcela.dataVencimento\\\"bsDatepicker\\n                        [bsConfig]=\\\"this.bsConfig\\\" />\\n                    </div>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"formasPagamento\\\" bindLabel=\\\"descricao\\\"\\n                        required bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"parcela.formaPagamentoId\\\"\\n                        name=\\\"formaPagamentoId\\\" disabled>\\n                      </ng-select>\\n                    </div>\\n                  </td>\\n                  <td style=\\\"text-align: center;\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" currencyMask name=\\\"valor\\\" [(ngModel)]=\\\"parcela.valor\\\"\\n                          [options]=\\\"{ prefix: '', thousands: '.', decimal: ',' }\\\" />\\n                        <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n                      </div>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateRecebimentos)\\\">\\n          Fechar\\n        </button>\\n        \\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"cadastroRecebimento.get('dataEmissao').hasError('required') == true ||\\n        cadastroRecebimento.get('valorTotal').hasError('required') == true || \\n        cadastroRecebimento.get('valorTotal').hasError('min') == true || parcelas.length == 0 || !parcelas\\\" (click)=\\\"lancarRecebimento()\\\">\\n          Cadastrar Recebimento\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<app-cheque-pre-template [idChequePre]=\\\"0\\\" *ngIf=\\\"getTemplateChequePre() == true\\\"></app-cheque-pre-template>\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormaPagamentoService } from 'src/app/_services/Cadastros/FormaPagamento/formaPagamento.service';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { CentroReceitaService } from 'src/app/_services/Cadastros/CentroReceita/centroReceita.service';\nimport { RecebimentoService } from 'src/app/_services/Financeiro/Recebimentos/recebimento.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { CentroReceita } from 'src/app/_models/Cadastros/CentroReceita/CentroReceita';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { Recebimentos } from 'src/app/_models/Financeiro/Recebimentos/Recebimentos';\nimport { RecebimentoParcelas } from 'src/app/_models/Financeiro/Recebimentos/RecebimentoParcelas';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { FormaPagamento } from 'src/app/_models/Cadastros/FormaPagamento/FormaPagamento';\nimport * as moment from 'moment';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Lancamentos } from 'src/app/_models/Movimentos/Lancamentos/Lancamentos';\nimport { LancamentoService } from 'src/app/_services/Movimentos/Lancamentos/lancamento.service';\nimport { ChequePreService } from 'src/app/_services/Cadastros/ChequePre/chequePre.service';\nimport { VendaConfig } from 'src/app/_models/Movimentos/Venda/VendaConfig';\n\n@Component({\n  selector: 'app-template-recebimento',\n  templateUrl: './templateRecebimento.component.html',\n  styleUrls: ['./templateRecebimento.component.css']\n})\nexport class TemplateRecebimentoComponent implements OnInit {\n\n  @Input() produtoItem: ProdutoItem;\n  @Input() idVenda: number;\n  @Input() vendaClienteId: number;\n  @ViewChild('templateRecebimentos') templateRecebimentos: any;\n\n  cadastroRecebimento: FormGroup;\n\n  clientes: Cliente[];\n\n  centrosReceita: CentroReceita[];\n  centroReceitaIdSelecionado: any;\n\n  planoContasReceita: PlanoContas[];\n  planoContasIdSelecionado: any;\n\n  recebimento: Recebimentos;\n  parcelas: RecebimentoParcelas[] = [];\n\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: any;\n\n  formasPagamento: FormaPagamento[];\n  formaPagamentoIdSelecionado: any;\n\n  tipoPagamento: any;\n  qtdParcelas: number;\n  prazoPrimeiraParcela: number;\n  intervaloParcelas: number;\n\n  valorRealizado: VendaValorRealizado;\n  idProdutoItemValorRealizado: number;\n\n  vendaConfig: VendaConfig;\n\n  templateEnabled = false;\n  diasFixo = false;\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private recebimentoService: RecebimentoService,\n              private centroReceitaService: CentroReceitaService,\n              private planoContaService: PlanoContaService,\n              public dataService: DataService,\n              private clienteService: ClienteService,\n              private vendaService: VendaService,\n              private permissaoService: PermissaoService,\n              private planoPagamentoService: PlanoPagamentoService,\n              private formaPagamentoService: FormaPagamentoService,\n              private lancamentoService: LancamentoService,\n              private chequePreService: ChequePreService) { }\n\n  ngOnInit() {\n    this.getPlanoPagamento();\n    this.getFormaPagamento();\n    this.getCentroReceita();\n    this.getPlanoContas();\n    this.getVendaConfig();\n    this.validarRecebimentos();\n    if (this.idVenda !== 0) {\n      this.carregarRecebimentoVenda(this.produtoItem);\n    }\n  }\n\n  carregarRecebimentoVenda(produtoItem: ProdutoItem) {\n    this.centroReceitaIdSelecionado = produtoItem.centroReceitaId;\n    this.planoContasIdSelecionado = produtoItem.planoContasId;\n    this.idProdutoItemValorRealizado = produtoItem.id;\n  }\n\n  validarRecebimentos() {\n    this.cadastroRecebimento = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        dataEmissao: ['', Validators.required],\n        dataCompetencia: [''],\n        qtdParcelas: ['', Validators.required],\n        valorTotal: ['', [Validators.required, Validators.min(1)]],\n        planoPagamentoId: ['', Validators.required],\n        centroReceitaId: [{value: '', disabled: true}, Validators.required],\n        planoContasId: [{value: '', disabled: true}, Validators.required],\n        diasFixo: ['10', [Validators.required, Validators.min(1)]],\n        diasfixoCheck: ['']\n    });\n  }\n\n  getInfoPlanoPagamento(idPlanoPagamento: number): PlanoPagamento {\n    const info = this.planosPagamento.filter(c => c.id === idPlanoPagamento)[0];\n    return info;\n  }\n\n  setarDiaFixo(data: string, dia: string) {\n    if (data && data !== null && data.toString().length > 0) {\n      const novaData = data.split('T')[0].split('-');\n      const mes = novaData[1];\n      const ano = novaData[0];\n      return ano + '-' + mes + '-' + dia;\n    } else {\n      return '';\n    }\n  }\n\n  gerarParcelas() {\n    this.parcelas = [];\n    this.recebimento = new Recebimentos();\n    this.recebimento.parcelas = [];\n    const diaFixo = this.cadastroRecebimento.get('diasFixo').value;\n    const dataEmissao = this.cadastroRecebimento.get('dataEmissao').value.toLocaleString();\n    this.qtdParcelas = Number(this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).qtdParcelas);\n    this.prazoPrimeiraParcela = Number(this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).prazoPrimeiraParcela);\n    this.intervaloParcelas = Number(this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).intervaloParcelas);\n    this.formaPagamentoIdSelecionado = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).formaPagamentoId;\n    const formaPag = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).formaPagamento;\n    const valorTotal = this.cadastroRecebimento.get('valorTotal').value;\n    const valorParcela = Number(Number(valorTotal) / this.qtdParcelas);\n    for (let i = 0; i < this.qtdParcelas; i++) {\n      const documentoText = (i + 1). toString();\n      let diasSoma = 0;\n      let mesSoma = 0;\n      if (this.prazoPrimeiraParcela === 0) {\n        if (i === 0) {\n          mesSoma = 0;\n          diasSoma = this.prazoPrimeiraParcela;\n        } else {\n          mesSoma = i;\n          diasSoma = (this.intervaloParcelas * i);\n        }\n      } else {\n        if (i === 0) {\n          diasSoma = this.prazoPrimeiraParcela;\n        } else {\n          diasSoma = (this.intervaloParcelas * i) + this.prazoPrimeiraParcela;\n        }\n        mesSoma = i + 1;\n      }\n\n      const dataEmissaoSQL = moment(dataEmissao, 'DD/MM/YYYY').format('YYYY-MM-DD');\n      const dataEmissaoPTBR = this.dataService.getDataPTBR(dataEmissaoSQL);\n      const dataVencVariavel = moment(dataEmissaoPTBR, 'DD/MM/YYYY').add('days', diasSoma).format('YYYY-MM-DD');\n      const dataVencFixoAux = moment(dataEmissaoPTBR, 'DD/MM/YYYY').add('months', mesSoma).format('YYYY-MM-DD');\n      const dataVencFixo = (this.prazoPrimeiraParcela === 0 && i === 0) ? dataEmissaoPTBR :\n                            this.dataService.getDataPTBR(this.setarDiaFixo(dataVencFixoAux, diaFixo));\n\n      const parcela = Object.assign({id: 0, documento: documentoText,\n        dataVencimento: (this.diasFixo === true) ? dataVencFixo : this.dataService.getDataPTBR(dataVencVariavel),\n        dataRecebimento: (i === 0 && (dataEmissaoSQL === dataVencVariavel || dataEmissaoSQL === dataVencFixo)) ? dataEmissaoSQL : null,\n        valor: valorParcela,\n        valorRecebido: ((i === 0 && (dataEmissaoSQL === dataVencVariavel || dataEmissaoSQL === dataVencFixo)) ||\n                formaPag.descricao === 'CHEQUE') ? valorParcela : 0,\n        status: ((i === 0 && (dataEmissaoSQL === dataVencVariavel || dataEmissaoSQL === dataVencFixo)) ||\n                formaPag.descricao === 'CHEQUE') ? 'PAGO' : 'PENDENTE',\n        formaPagamentoId: this.formaPagamentoIdSelecionado,\n        formaPagamento: formaPag,\n        dataLancamento: dataEmissao,\n        numeroParcela: i\n      });\n      this.parcelas.push(parcela);\n    }\n  }\n\n  efetuarLancamentos() {\n    let lancamentos: Lancamentos[];\n    lancamentos = [];\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.parcelas.forEach((parcela) => {\n      const conta = this.getInfoPlanoPagamento(this.planoPagamentoIdSelecionado).planoContasId;\n      lancamentos.push(Object.assign({\n        id: 0,\n        centroReceitaId: this.centroReceitaIdSelecionado,\n        descricao: 'VALOR PAGT - VENDA DE SISTEMA',\n        planoDebitoId: (parcela.numeroParcela === 0 && this.prazoPrimeiraParcela === 0) ?\n                        this.vendaConfig.planoContaRecebParcelaAVistaId : conta,\n        planoCreditoId: this.planoContasIdSelecionado,\n        valor: parcela.valor,\n        usuarioId: this.permissaoService.getUsuarioId(),\n        dataHora: dataAtual,\n        dataLancamento: this.dataService.getDataSQL(parcela.dataLancamento)\n      }));\n    });\n    this.lancamentoService.novosLancamentos(lancamentos).subscribe(() => {\n      console.log('Lançamentos Efetuados.');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar inserir lancamentos : ${error.error}`);\n    });\n  }\n\n  lancarRecebimento() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const dataEmissao = this.cadastroRecebimento.get('dataEmissao').value.toLocaleString();\n    this.recebimento = Object.assign(this.cadastroRecebimento.value, {\n      id: 0,\n      vendaId: this.idVenda,\n      clientesId: this.vendaClienteId,\n      qtdParcelas: this.qtdParcelas,\n      dataEmissao: this.dataService.getDataSQL(dataEmissao),\n      produtosItensId: this.produtoItem.id,\n      centroReceitaId: this.centroReceitaIdSelecionado,\n      planoContasId: this.planoContasIdSelecionado,\n      parcelas: []\n    });\n\n    this.recebimentoService.novoRecebimentos(this.recebimento).subscribe((_ID) => {\n      const recebimentoParcelas: RecebimentoParcelas[] = [];\n      this.parcelas.forEach((parcela) => {\n        const parc = Object.assign(parcela, {\n          id: 0,\n          dataVencimento: this.dataService.getDataSQL(parcela.dataVencimento),\n          formaPagamento: null,\n          documento: _ID.toString() + '/' + parcela.documento,\n          recebimentosId: _ID\n        });\n        recebimentoParcelas.push(parc);\n      });\n\n      this.recebimentoService.novoRecebimentoParcelas(recebimentoParcelas).subscribe(() => {\n        this.valorRealizado = Object.assign({\n          id: 0,\n          vendaId: this.idVenda,\n          produtosItensId: this.idProdutoItemValorRealizado,\n          dataHoraUltAlt: dataAtual,\n          recebimentos: null,\n          recebimentosId: _ID,\n        });\n        this.vendaService.novoVendaValorRealizado(this.valorRealizado).subscribe(() => {\n          this.toastr.success('Salvo com Sucesso!');\n          this.efetuarLancamentos();\n          this.vendaService.atualizarVenda();\n          this.vendaService.atualizarRecebimentos();\n          this.fecharTemplate(this.templateRecebimentos);\n        }, error => {\n          console.log(error.error);\n          this.toastr.error(`Erro ao tentar inserir novo Valor Realizado : ${error.error}`);\n        });\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar inserir novo Recebimento Parcelas : ${error.error}`);\n      });\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar inserir novo Recebimento: ${error.error}`);\n    });\n  }\n\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      template.show();\n      this.templateEnabled = true;\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.recebimentoService.setTemplateRecebimentoStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getTemplateChequePre() {\n    return this.chequePreService.getChequePreTemplateStatus();\n  }\n\n  abrirTemplateChequePre() {\n    this.chequePreService.setChequePreTemplateStatus(true);\n  }\n\n  getVendaConfig() {\n    this.vendaService.getVendaConfig().subscribe(\n      (_CONFIG: VendaConfig) => {\n      this.vendaConfig = _CONFIG;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaConfig: ${error.error}`);\n    });\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContasReceita = _PLANOS.filter(c => c.tipo === 'RECEITA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  getCentroReceita() {\n    this.centroReceitaService.getAllCentroReceita().subscribe(\n      (_CENTROS: CentroReceita[]) => {\n      this.centrosReceita = _CENTROS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Centros de Receita: ${error.error}`);\n    });\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_PLANOS: PlanoPagamento[]) => {\n      this.planosPagamento = _PLANOS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  getFormaPagamento() {\n    this.formaPagamentoService.getAllFormaPagamento().subscribe(\n      (_FORMAS: FormaPagamento[]) => {\n      this.formasPagamento = _FORMAS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Formas de Pagamento: ${error.error}`);\n    });\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvY29uZmlnVmVuZGEvY29uZmlnVmVuZGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"{{abrirTemplate(templateConfigVenda)}}\\n<div bsModal #templateConfigVenda=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\"\\n  class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Configurações das Vendas\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateConfigVenda)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"box box-solid\\\">\\n          <div class=\\\"box-header with-border\\\">\\n            <form [formGroup]=\\\"cadastroVendaConfig\\\">\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-12\\\">\\n                  <label style=\\\"white-space: nowrap;\\\">Plano de Contas(D) Parcela À VISTA(RECEITAS)</label>\\n                  <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\" required\\n                    bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoContaRecebIdSelecionado\\\"\\n                    formControlName=\\\"planoContaRecebParcelaAVistaId\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\"> \\n                <div class=\\\"form-group col-md-12\\\">\\n                  <label style=\\\"white-space: nowrap;\\\">Plano de Contas(C) Parcela À VISTA(DESPESA)</label>\\n                  <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planoContas\\\" bindLabel=\\\"descricao\\\" required\\n                    bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoContaPagIdSelecionado\\\"\\n                    formControlName=\\\"planoContaPagParcelaAVistaId\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-12\\\">\\n                  <label style=\\\"white-space: nowrap;\\\">Plano de Pagamento(DESPESAS)</label>\\n                  <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"planosPagamento\\\" bindLabel=\\\"descricao\\\" required\\n                    bindValue=\\\"id\\\" [clearable]=\\\"false\\\" [(ngModel)]=\\\"planoPagamentoIdSelecionado\\\"\\n                    formControlName=\\\"planoPagamentoSaidasId\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateConfigVenda)\\\">\\n          Fechar\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"cadastroVendaConfig.get('planoContaRecebParcelaAVistaId').hasError('required') == true ||\\n        cadastroVendaConfig.get('planoContaPagParcelaAVistaId').hasError('required') == true || \\n        cadastroVendaConfig.get('planoPagamentoSaidasId').hasError('required') == true\\\" (click)=\\\"salvarAlteracao()\\\">\\n          Salvar Configurações\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { PlanoPagamentoService } from 'src/app/_services/Cadastros/PlanoPagamento/planoPagamento.service';\nimport { PlanoContaService } from 'src/app/_services/Cadastros/PlanosConta/planoConta.service';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { ToastrService } from 'ngx-toastr';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { VendaConfig } from 'src/app/_models/Movimentos/Venda/VendaConfig';\n\n@Component({\n  selector: 'app-config-venda',\n  templateUrl: './configVenda.component.html',\n  styleUrls: ['./configVenda.component.css']\n})\n\nexport class ConfigVendaComponent implements OnInit {\n\n  cadastroVendaConfig: FormGroup;\n\n  vendaConfig: VendaConfig;\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: number;\n\n  planoContas: PlanoContas[];\n  planoContaRecebIdSelecionado: number;\n  planoContaPagIdSelecionado: number;\n\n  templateEnabled = false;\n\n  idVendaConfig = 0;\n\n  constructor(private planoPagamentoService: PlanoPagamentoService,\n              private planoContaService: PlanoContaService,\n              private vendaService: VendaService,\n              private toastr: ToastrService,\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.getPlanoContas();\n    this.getPlanoPagamento();\n    this.validarRecebimentos();\n    this.carregarConfigVenda();\n  }\n\n  carregarConfigVenda() {\n    this.vendaService.getVendaConfig()\n      .subscribe(\n        (_CONFIG: VendaConfig) => {\n          this.vendaConfig = Object.assign({}, _CONFIG);\n          this.idVendaConfig = this.vendaConfig.id;\n\n          this.cadastroVendaConfig.patchValue(this.vendaConfig);\n\n          this.planoPagamentoIdSelecionado = this.vendaConfig.planoPagamentoSaidasId;\n          this.planoContaRecebIdSelecionado = this.vendaConfig.planoContaRecebParcelaAVistaId;\n          this.planoContaPagIdSelecionado = this.vendaConfig.planoContaPagParcelaAVistaId;\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Venda: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  validarRecebimentos() {\n    this.cadastroVendaConfig = this.fb.group({\n        id:  [''],\n        planoContaRecebParcelaAVistaId: ['', Validators.required],\n        planoContaPagParcelaAVistaId: ['', Validators.required],\n        planoPagamentoSaidasId: ['', Validators.required]\n    });\n  }\n\n  salvarAlteracao() {\n    if (this.idVendaConfig === 0) {\n      const vendaConfig = Object.assign(this.cadastroVendaConfig.value, {id: 0});\n      this.vendaService.novoVendaConfig(vendaConfig).subscribe((_CONFIG: VendaConfig[]) => {\n          this.vendaConfig = Object.assign({}, _CONFIG[0]);\n          this.toastr.success('Salvo com Sucesso!');\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar inserir nova venda config : ${error.error}`);\n      });\n    } else {\n      const vendaConfig = Object.assign(this.cadastroVendaConfig.value);\n      console.log(vendaConfig);\n      this.vendaService.editarVendaConfig(vendaConfig).subscribe((_CONFIG: VendaConfig[]) => {\n          this.vendaConfig = Object.assign({}, _CONFIG[0]);\n          this.toastr.success('Salvo com Sucesso!');\n      }, error => {\n        console.log(error.error);\n        this.toastr.error(`Erro ao tentar inserir nova venda config : ${error.error}`);\n      });\n    }\n  }\n\n  getPlanoContas() {\n    this.planoContaService.getAllPlanosConta().subscribe(\n      (_PLANOS: PlanoContas[]) => {\n      this.planoContas = _PLANOS.filter(c => c.tipo === 'MOVIMENTO' && c.categoria === 'ANALÍTICA');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Contas: ${error.error}`);\n    });\n  }\n\n  getPlanoPagamento() {\n    this.planoPagamentoService.getAllPlanoPagamento().subscribe(\n      (_PLANOS: PlanoPagamento[]) => {\n      this.planosPagamento = _PLANOS.filter(c => c.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Planos de Pagamento: ${error.error}`);\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      this.templateEnabled = true;\n      template.show();\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.vendaService.setConfigVendaStatus(false);\n    this.templateEnabled = false;\n  }\n}\n","module.exports = \".modal-xl {\\r\\n    width: 50%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n.modal-sm {\\r\\n    width: 25%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n\\r\\n.modal-nw {\\r\\nwidth: 60%;\\r\\n    /* New width for large modal */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aW1lbnRvcy92ZW5kYS9lZGl0YXJWZW5kYS9lZGl0YXJWZW5kYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFVBQVU7SUFDViw4QkFBOEI7QUFDbEM7O0FBRUE7QUFDQSxVQUFVO0lBQ04sOEJBQThCO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvbW92aW1lbnRvcy92ZW5kYS9lZGl0YXJWZW5kYS9lZGl0YXJWZW5kYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICAvKiBOZXcgd2lkdGggZm9yIGxhcmdlIG1vZGFsICovXHJcbn1cclxuXHJcbi5tb2RhbC1zbSB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgLyogTmV3IHdpZHRoIGZvciBsYXJnZSBtb2RhbCAqL1xyXG59XHJcblxyXG4ubW9kYWwtbncge1xyXG53aWR0aDogNjAlO1xyXG4gICAgLyogTmV3IHdpZHRoIGZvciBsYXJnZSBtb2RhbCAqL1xyXG59Il19 */\"","module.exports = \"<h2>Venda (Custo do Produto de Revenda)</h2>\\n<h5>Cliente: {{getNomeCliente()}}</h5>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Negociação: </label>\\n              <input *ngIf=\\\"disabledDataNegociacao() == true\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"dataNegociacao\\\" [ngModel]=\\\"cadastroForm.get('dataNegociacao').value\\\" bsDatepicker\\n                [bsConfig]=\\\"this.bsConfig\\\" disabled />\\n\\n              <input *ngIf=\\\"disabledDataNegociacao() == false\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"dataNegociacao\\\" [ngModel]=\\\"cadastroForm.get('dataNegociacao').value\\\" bsDatepicker\\n                [bsConfig]=\\\"this.bsConfig\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Data Finalizado: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"dataFinalizado\\\"\\n                [ngModel]=\\\"cadastroForm.get('dataFinalizado').value\\\" bsDatepicker [bsConfig]=\\\"this.bsConfig\\\" disabled />\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Empresa</label>\\n              <ng-select disabled style=\\\"text-transform: uppercase\\\" [clearable]=\\\"false\\\" [items]=\\\"empresas\\\"\\n                bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"empresaIdSelecionado\\\" formControlName=\\\"empresasId\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Vendedor</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [clearable]=\\\"false\\\" [items]=\\\"vendedores\\\" bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"vendedorIdSelecionado\\\" formControlName=\\\"vendedorId\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Cliente</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [clearable]=\\\"false\\\" [items]=\\\"clientes\\\"\\n                bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clientesId\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label>Produto</label>\\n              <ng-select style=\\\"text-transform: uppercase\\\" [clearable]=\\\"false\\\" [items]=\\\"produtos\\\" bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\" [(ngModel)]=\\\"produtoIdSelecionado\\\" formControlName=\\\"produtoId\\\">\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label>Status:</label>\\n              <ng-select [clearable]=\\\"false\\\" *ngIf=\\\"disabledStatus() == true\\\"\\n                (change)=\\\"setarDataFinalizado(cadastroForm.get('status').value)\\\" [items]=\\\"status\\\"\\n                [(ngModel)]=\\\"cadastroForm.get('status').value\\\" formControlName=\\\"status\\\" disabled>\\n              </ng-select>\\n            </div>\\n\\n            <button *ngIf=\\\"this.gerarPedido == true && !this.autorizadoGerarPedido\\\" style=\\\"position:relative;margin-top:15px;\\\" (click)=\\\"solicitarAutorizacao()\\\"\\n              tooltip=\\\"Solicitar Autorização\\\" [disabled]=\\\"verificarValorPrevistoLancados()\\\" class=\\\"btn btn-lg btn-warning\\\">\\n              &nbsp;Solicitar Autorização\\n            </button>\\n\\n            <button *ngIf=\\\"this.gerarPedido == true\\\" style=\\\"position:relative;margin-top:15px;margin-left:15px;\\\" (click)=\\\"gerarPDF()\\\"\\n              tooltip=\\\"Gerar Pedido de Venda\\\" class=\\\"btn btn-lg btn-success\\\" [disabled]=\\\"!autorizadoGerarPedido\\\">\\n              &nbsp;Gerar Pedido\\n            </button>\\n            <button  style=\\\"position:relative;margin-top:15px;margin-left:15px;\\\" (click)=\\\"enviarEmail()\\\"\\n              tooltip=\\\"Gerar Pedido de Venda\\\" class=\\\"btn btn-lg btn-success\\\" >\\n              &nbsp;Testar E-mail\\n            </button>\\n          </div>\\n        </form>\\n      </tab>\\n      <tab heading=\\\"Receitas e Despesas\\\" style=\\\"margin-top: 10px;\\\">\\n\\n        <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n          <hr style=\\\"width: 100%\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"box box-info\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-share\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Receitas</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n\\n                  <table class=\\\"table table-responsive table-bordered \\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Descrição</th>\\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensEntrada\\\">\\n                        <td>{{item.descricao}}</td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\"\\n                              (click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              (click)=\\\"abrirRecebimentosVenda(item)\\\" tooltip=\\\"Valor Realizado\\\"\\n                              class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\"\\n                              class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <hr style=\\\"width: 100%\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n\\n              <div class=\\\"box box-danger\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-reply\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Despesas(COMISSÕES)</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                  <table class=\\\"table table-responsive table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Descrição</th>\\n                        <th style=\\\"text-align: center;\\\">Status</th>\\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensSaidaComissao\\\">\\n                        <td>{{item.descricao}}</td>\\n\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"verificarPrevisto(item.vendaValorPrevisto) == true &&\\n                          verificarValorPrevistoMaiorZero(item.vendaValorPrevisto) == false\\\"\\n                            class=\\\"label label-danger\\\">X</span>\\n                          <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"verificarPagamento(item.vendaValorRealizado) == true &&\\n                          verificarValorPrevistoMaiorZero(item.vendaValorPrevisto) == true\\\"\\n                            class=\\\"label label-success\\\">PAGO</span>\\n                          <span style=\\\"margin-top:0px;\\\" *ngIf=\\\"verificarPagamento(item.vendaValorRealizado) == false &&\\n                          verificarValorPrevistoMaiorZero(item.vendaValorPrevisto) == true\\\"\\n                            class=\\\"label label-warning\\\">PENDENTE</span>\\n                        </td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\"\\n                              (click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado\\\" (click)=\\\"abrirPagamentosVenda(item)\\\"\\n                              class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\"\\n                              class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n\\n              <div class=\\\"box box-danger\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                  <i class=\\\"fa fa-reply\\\"></i>\\n                  <h3 class=\\\"box-title\\\">Despesas(GASTOS)</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                  <table class=\\\"table table-responsive table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Descrição</th>\\n\\n                        <th style=\\\"text-align: center;\\\">Ações</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let item of vendaItensSaidaGasto\\\">\\n                        <td>{{item.descricao}}</td>\\n                        <td style=\\\"white-space: nowrap;text-align: center;\\\">\\n                          <div class=\\\"btn-group\\\">\\n                            <a *ngIf=\\\"this.editarValorPrevisto == true\\\"\\n                              (click)=\\\"abrirFormValorPrevisto(item.id, item.descricao, templateValorPrevisto)\\\"\\n                              tooltip=\\\"Valor Previsto\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado\\\" (click)=\\\"abrirPagamentosVenda(item)\\\"\\n                              class=\\\"btn btn-sm btn-info\\\">\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                            <a *ngIf=\\\"this.editarValorRealizado == true && !verificarPrevisto(item.vendaValorPrevisto)\\\"\\n                              tooltip=\\\"Valores Realizado(Previsão deve ser lançada antes do Valor Realizado)\\\"\\n                              class=\\\"btn btn-sm btn-info\\\" disabled>\\n                              <i class=\\\"fa fa-usd\\\"></i>\\n                            </a>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </tab>\\n\\n      <tab *ngIf=\\\"this.visualizarResumo == true\\\" heading=\\\"Resumo\\\" style=\\\"margin-top: 10px;\\\">\\n        <app-resumo-venda></app-resumo-venda>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n<button *ngIf=\\\"this.editar == true\\\" style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\"\\n  (click)=\\\"salvarAlteracoes()\\\" tooltip=\\\"Salvar\\\" class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\\n\\n\\n<div bsModal #templateValorPrevisto=\\\"bs-modal\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Valor Previsto ({{(produtoItem) ? produtoItem.descricao : ''}})\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"templateValorPrevisto.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"form-group col-md-12\\\">\\n            <form [formGroup]=\\\"cadastroValorPrevistoForm\\\">\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" currencyMask [(ngModel)]=\\\"valorPrevistoPipe\\\" formControlName=\\\"valor\\\"\\n                  [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" />\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"templateValorPrevisto.hide()\\\">\\n          Fechar\\n        </button>\\n        <button *ngIf=\\\"!cadastroValorPrevistoForm.valid || valorPrevistoDisabled == true\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarValorPrevisto(templateValorPrevisto)\\\" disabled>\\n          Salvar\\n        </button>\\n        <button *ngIf=\\\"cadastroValorPrevistoForm.valid && valorPrevistoDisabled == false\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"salvarValorPrevisto(templateValorPrevisto)\\\">\\n          Salvar\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<app-pagamentos-venda [produtoItem]=\\\"this.produtoItem\\\" [idVenda]=\\\"this.idVenda\\\" *ngIf=\\\"getPagamentosVenda() == true\\\">\\n</app-pagamentos-venda>\\n<app-recebimentos-venda [produtoItem]=\\\"this.produtoItem\\\" [vendaClienteId]=\\\"this.vendaClienteId\\\" [idVenda]=\\\"this.idVenda\\\"\\n  *ngIf=\\\"getRecebimentosVenda() == true\\\"></app-recebimentos-venda>\"","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport * as moment from 'moment';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\nimport { PlanoContas } from 'src/app/_models/Cadastros/PlanoContas/planoContas';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { RecebimentoService } from 'src/app/_services/Financeiro/Recebimentos/recebimento.service';\nimport { CentroDespesa } from 'src/app/_models/Cadastros/CentroDespesa/CentroDespesa';\nimport { PlanoPagamento } from 'src/app/_models/Cadastros/PlanoPagamento/PlanoPagamento';\nimport { Empresa } from 'src/app/_models/Cadastros/Empresas/Empresa';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { EmpresaService } from 'src/app/_services/Cadastros/Empresas/empresa.service';\nimport { AutorizacaoService } from 'src/app/_services/Autorizacoes/autorizacao.service';\nimport { Usuario } from 'src/app/_models/Cadastros/Usuarios/Usuario';\nimport { UsuarioService } from 'src/app/_services/Cadastros/Usuarios/usuario.service';\nimport { SocketService } from 'src/app/_services/WebSocket/Socket.service';\nimport { NotificacaoService } from 'src/app/_services/Notificacoes/notificacao.service';\nimport { Notificacao } from 'src/app/_models/Notificacoes/notificacao';\nimport { Autorizacao } from 'src/app/_models/Autorizacoes/Autorizacao';\nimport { EmailService } from 'src/app/_services/Email/email.service';\n\n@Component({\n  selector: 'app-editar-venda',\n  templateUrl: './editarVenda.component.html',\n  styleUrls: ['./editarVenda.component.css']\n})\nexport class EditarVendaComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  editar = false;\n  editarValorPrevisto = false;\n  editarValorRealizado = false;\n  visualizarResumo = false;\n  gerarPedido = false;\n  autorizadoGerarPedido = false;\n\n  cadastroForm: FormGroup;\n  cadastroValorPrevistoForm: FormGroup;\n  cadastroRecebimento: FormGroup;\n  cadastroNovoValor: FormGroup;\n\n  pessoas: Pessoa[];\n  pessoaIdSelecionado: any;\n\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  empresas: Empresa[];\n  empresaIdSelecionado: any;\n\n  vendedores: Pessoa[];\n  vendedorIdSelecionado: any;\n\n  produtos: Produto[];\n  produtoIdSelecionado: any;\n\n  centrosDespesa: CentroDespesa[];\n  centroDespesaIdSelecionado: any;\n\n  planoContasReceita: PlanoContas[];\n  planoContasDespesa: PlanoContas[];\n  planoContasIdSelecionado: any;\n\n  idVenda: number;\n  vendaClienteId: any;\n  produtoItem: ProdutoItem;\n\n  venda: Venda;\n\n  vendaItensEntrada: ProdutoItem[];\n  vendaItensSaidaComissao: ProdutoItem[];\n  vendaItensSaidaGasto: ProdutoItem[];\n\n  valorPrevistoPipe: any;\n  valorPrevisto: VendaValorPrevisto;\n  valorPrevistoDisabled = true;\n  idProdutoItemValorPrevisto: number;\n\n  status = ['EM NEGOCIAÇÃO', 'EM IMPLANTAÇÃO', 'FINALIZADO'];\n\n  planosPagamento: PlanoPagamento[];\n  planoPagamentoIdSelecionado: any;\n\n  idDetalharRecebimento: number;\n  idProdutoItem: number;\n\n  autorizacoes: Autorizacao[];\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: ActivatedRoute,\n              private vendaService: VendaService,\n              private recebimentoService: RecebimentoService,\n              public permissaoService: PermissaoService,\n              public dataService: DataService,\n              private clienteService: ClienteService,\n              private produtoService: ProdutoService,\n              private pessoaService: PessoaService,\n              private usuarioService: UsuarioService,\n              private empresaService: EmpresaService,\n              private autorizacaoService: AutorizacaoService,\n              private socketService: SocketService,\n              private notificacaoService: NotificacaoService,\n              private emailService: EmailService,\n              private changeDetectionRef: ChangeDetectorRef) {\n                this.vendaService.atualizaVenda.subscribe(x => {\n                  this.carregarVenda();\n                });\n              }\n\n  ngOnInit() {\n    this.idVenda = +this.router.snapshot.paramMap.get('id');\n    this.getClientes();\n    this.getProdutos();\n    this.getEmpresas();\n    this.getVendedores();\n    this.getAutorizacoes();\n    this.validarForm();\n    this.validarValorPrevistoForm();\n    this.validarNovoValorForm();\n    this.carregarVenda();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR', 'VALOR PREVISTO').subscribe((_PERMISSAO: Permissao) => {\n      this.editarValorPrevisto = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR', 'VALOR REALIZADO').subscribe((_PERMISSAO: Permissao) => {\n      this.editarValorRealizado = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'VISUALIZAR', 'RESUMO').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarResumo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'GERAR PEDIDO').subscribe((_PERMISSAO: Permissao) => {\n      this.gerarPedido = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarVenda() {\n    this.venda = null;\n    this.vendaService.getVendaById(this.idVenda)\n      .subscribe(\n        (_VENDA: Venda) => {\n          this.venda = Object.assign({}, _VENDA);\n\n          this.venda = Object.assign(this.venda, {\n            dataNegociacao: this.dataService.getDataPTBR(this.venda.dataNegociacao),\n            dataFinalizado: this.dataService.getDataPTBR(this.venda.dataFinalizado)\n          });\n\n          this.produtoIdSelecionado = this.venda.vendaProdutos[0].produtosId;\n          this.empresaIdSelecionado = this.venda.empresasId;\n          this.vendedorIdSelecionado = this.venda.vendedorId;\n          this.clienteIdSelecionado = this.venda.clientesId;\n\n          this.cadastroForm.patchValue(this.venda);\n          this.vendaItensEntrada = this.venda.vendaProdutos[0].produtos.itens.filter(item => item.tipoItem === 'RECEITA');\n          this.vendaItensEntrada.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id);\n          });\n\n          this.vendaItensSaidaComissao = this.venda.vendaProdutos[0].produtos.itens.filter(\n            item => item.tipoItem === 'DESPESA' && item.subTipoItem === 'COMISSÃO');\n          this.vendaItensSaidaComissao.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id);\n          });\n\n          this.vendaItensSaidaGasto = this.venda.vendaProdutos[0].produtos.itens.filter(\n            item => item.tipoItem === 'DESPESA' && item.subTipoItem === 'GASTO');\n          this.vendaItensSaidaGasto.forEach(item => {\n            item.vendaValorPrevisto = this.venda.vendaValorPrevisto.filter(c => c.produtosItensId === item.id)[0];\n            item.vendaValorRealizado = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === item.id);\n          });\n\n          this.vendaClienteId = this.venda.clientesId;\n\n        }, error => {\n          this.toastr.error(`Erro ao tentar carregar Venda: ${error.error}`);\n          console.log(error);\n        });\n  }\n\n  enviarNotificacoesAutorizacao() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const usuariosIdNotificacao = [];\n    this.usuarioService.getAllUsuario().subscribe(\n      (_USUARIOS: Usuario[]) => {\n      this.permissaoService.getPermissoesByFormularioAcaoObjeto('AUTORIZACOES', 'GERAR PEDIDO').subscribe((_PERMISSAO: Permissao) => {\n        _PERMISSAO.permissaoNiveis.forEach((permissao) => {\n          _USUARIOS.forEach((usuario: Usuario) => {\n            if (usuario.usuarioNivel.filter(c => c.roleId === permissao.nivelId).length > 0) {\n              usuariosIdNotificacao.push(usuario.id);\n            }\n          });\n        });\n        const notificacao: Notificacao[] = [];\n        usuariosIdNotificacao.forEach(idUsuario => {\n          notificacao.push(Object.assign({id: 0, usuarioId: idUsuario, dataHora: dataAtual, tipo: 'Autorização', visto: 0}));\n        });\n        this.notificacaoService.novasNotificacoes(notificacao).subscribe(\n          () => {\n          usuariosIdNotificacao.forEach(idUsuario => {\n            this.socketService.sendSocket('AutorizacaoVendaGerarPedido', idUsuario);\n          });\n          this.toastr.success('Cadastrado com sucesso!');\n        });\n      });\n    });\n  }\n\n\n  solicitarAutorizacao() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const autorizacao = Object.assign({\n      id: 0,\n      solicitanteId: this.permissaoService.getUsuarioId(),\n      formularioId: this.idVenda,\n      formulario: 'VENDA',\n      acao: 'GERAR PEDIDO',\n      dataHoraSolicitado: dataAtual,\n      autorizado: 0,\n      visto: 0\n    });\n    this.autorizacaoService.novaAutorizacao(autorizacao).subscribe(() => {\n      this.enviarNotificacoesAutorizacao();\n    }, error => {\n      this.toastr.error(`Erro ao tentar solicitar autorizacao: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n  enviarEmail() {\n    this.emailService.enviarEmail();\n  }\n\n  gerarPDF() {\n   /* const documento: jsPDF = new jsPDF();\n    const empresa: Empresa = this.empresas.filter(c => c.id === this.empresaIdSelecionado)[0];\n\n    documento.line(10, 10, 200, 10);\n    documento.setFontSize(10);\n    documento.setFontType('bold');\n    documento.text('Nome Fantasia: ' , 10, 15);\n    documento.setFontType('regular');\n    documento.text(empresa.nomeFantasia, 40, 15);\n    documento.setFontType('bold');\n    documento.text('Razão Social: ' , 10, 20);\n    documento.setFontType('regular');\n    documento.text(empresa.razaoSocial, 34, 20);\n    documento.setFontType('bold');\n    documento.text('CNPJ/CPF: ' , 10, 25);\n    documento.setFontType('regular');\n    documento.text(empresa.cnpjCpf, 30, 25);\n    documento.output('dataurlnewwindow');*/\n  }\n\n  disabledStatus() {\n    if (this.venda) {\n      if (this.venda.status === 'FINALIZADO') {\n        this.cadastroForm.get('status').disable();\n        return true;\n      } else {\n        this.cadastroForm.get('status').enable();\n        return true;\n      }\n    }\n    return true;\n  }\n\n  disabledDataNegociacao() {\n    if (this.venda) {\n      if (this.venda.dataNegociacao.toString() !== '') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  showedDataFinalizado() {\n    if (this.venda) {\n      if (this.venda.status === 'FINALIZADO') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setarDataFinalizado(status: string) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (status === 'FINALIZADO') {\n      this.cadastroForm.controls.dataFinalizado.setValue(dataAtual);\n    } else {\n      this.cadastroForm.controls.dataFinalizado.setValue('');\n    }\n  }\n\n  getNomeCliente() {\n    if (this.venda) {\n      if (this.venda.clientes) {\n        return this.venda.clientes.nomeFantasia;\n      }\n    }\n    return '';\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        vendedorId: ['', Validators.required],\n        empresasId: ['', Validators.required],\n        produtoId: ['', Validators.required],\n        status: ['', Validators.required],\n        dataEmissao: [''],\n        dataNegociacao: [''],\n        dataFinalizado: [''],\n        dataHoraUltAlt: ['']\n    });\n  }\n\n  abrirTemplateRecebimento(produtoItem: ProdutoItem) {\n    this.produtoItem = produtoItem;\n    if (produtoItem.vendaValorRealizado && produtoItem.vendaValorRealizado.length > 0) {\n      if (produtoItem.vendaValorRealizado[0].recebimentos) {\n        this.idDetalharRecebimento = produtoItem.vendaValorRealizado[0].recebimentos.id;\n        this.recebimentoService.setDetalharRecebimentoStatus(true);\n      } else {\n        this.recebimentoService.setTemplateRecebimentoStatus(true);\n      }\n    } else {\n      this.recebimentoService.setTemplateRecebimentoStatus(true);\n    }\n  }\n\n  getPagamentosVenda() {\n    return this.vendaService.getPagamentosVendaStatus();\n  }\n\n  getRecebimentosVenda() {\n    return this.vendaService.getRecebimentosVendaStatus();\n  }\n\n  abrirPagamentosVenda(produtoItem: ProdutoItem) {\n    this.produtoItem = produtoItem;\n    this.vendaService.setPagamentosVendaStatus(true);\n  }\n\n  abrirRecebimentosVenda(produtoItem: ProdutoItem) {\n    this.produtoItem = produtoItem;\n    this.vendaService.setRecebimentosVendaStatus(true);\n  }\n\n\n  validarValorPrevistoForm() {\n    this.cadastroValorPrevistoForm = this.fb.group({\n        id: [''],\n        valor: ['', Validators.required]\n    });\n  }\n\n  verificarPrevisto(vendaValorPrevisto: any): boolean {\n    if (vendaValorPrevisto) {\n      return true;\n    }\n    return false;\n  }\n\n  verificarValorPrevistoLancados() {\n    if (this.venda) {\n      if (this.venda.vendaValorPrevisto &&  this.venda.vendaProdutos[0].produtos.itens) {\n        if (this.venda.vendaValorPrevisto.length === this.venda.vendaProdutos[0].produtos.itens.length) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  verificarValorPrevistoMaiorZero(vendaValorPrevisto: any): boolean {\n    if (vendaValorPrevisto) {\n      if (vendaValorPrevisto.valor > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  verificarPagamento(ValorRealizado: any): boolean {\n    if (ValorRealizado) {\n      if (ValorRealizado.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  verificarStatus() {\n    if (this.cadastroForm.get('status')) {\n      return this.cadastroForm.get('status').value;\n    }\n  }\n\n  abrirFormValorPrevisto(idProdutoItem: number, descricaoItem: string, template: any) {\n    this.idProdutoItemValorPrevisto = idProdutoItem;\n    this.vendaService.getVendaValorPrevistoByProdIdVendId(idProdutoItem, this.idVenda).subscribe(\n      (_VALORPREVISTO: VendaValorPrevisto) => {\n        if (_VALORPREVISTO) {\n          this.valorPrevistoDisabled = true;\n          this.valorPrevisto = Object.assign({}, _VALORPREVISTO);\n          this.cadastroValorPrevistoForm.patchValue(this.valorPrevisto);\n        } else {\n          this.valorPrevisto = null;\n          this.valorPrevistoDisabled = false;\n          this.cadastroValorPrevistoForm.patchValue({id: 0, valor: null});\n        }\n\n      }, error => {\n        console.log(error.error);\n      }\n    );\n    template.show();\n  }\n\n  salvarValorPrevisto(template: any) {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    this.valorPrevisto = Object.assign(this.cadastroValorPrevistoForm.value,\n       {id: 0, vendaId: this.idVenda, produtosItensId: this.idProdutoItemValorPrevisto, dataHoraUltAlt: dataAtual});\n    this.vendaService.novoVendaValorPrevisto(this.valorPrevisto).subscribe(\n      () => {\n        this.carregarVenda();\n        this.toastr.success('Salvo com Sucesso!');\n        template.hide();\n      }, error => {\n        console.log(error.error);\n      }\n    );\n  }\n\n  validarNovoValorForm() {\n    this.cadastroNovoValor = this.fb.group({\n        valor: ['', Validators.required],\n        pessoasId:  ['', Validators.required],\n        dataPagamento: [''],\n        descricao:  ['', Validators.required]\n    });\n  }\n\n  salvarAlteracoes() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    const dataNeg = this.cadastroForm.get('dataNegociacao').value.toLocaleString();\n    const dataFin = this.cadastroForm.get('dataFinalizado').value.toLocaleString();\n\n    this.venda = Object.assign(this.cadastroForm.value, {id: this.venda.id,\n      dataNegociacao: this.dataService.getDataSQL(dataNeg),\n      dataFinalizado: this.dataService.getDataSQL(dataFin),\n      dataHoraUltAlt: dataAtual\n    });\n\n    this.vendaService.editarVenda(this.venda).subscribe(\n      () => {\n        this.toastr.success('Editado com sucesso!');\n        this.carregarVenda();\n      }, error => {\n        this.toastr.error(`Erro ao tentar Editar: ${error.error}`);\n        console.log(error);\n      });\n  }\n\n  getProdutos() {\n    this.produtoService.getAllProduto().subscribe(\n      (_PRODUTOS: Produto[]) => {\n      this.produtos = _PRODUTOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar produtos: ${error.error}`);\n    });\n  }\n\n  getAutorizacoes() {\n    this.autorizacaoService.getAutorizacaoFormularioById(this.idVenda).subscribe(\n      (_AUTORIZACOES: Autorizacao[]) => {\n      this.autorizacoes = _AUTORIZACOES;\n      if (this.autorizacoes.filter(c => c.autorizado === 1).length > 0) {\n        this.autorizadoGerarPedido = true;\n      }\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar autorizacoes: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  getEmpresas() {\n    this.empresaService.getAllEmpresa().subscribe(\n      (_EMPRESAS: Empresa[]) => {\n      this.empresas = _EMPRESAS.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar empresas: ${error.error}`);\n    });\n  }\n\n  getVendedores() {\n    this.pessoaService.getAllPessoa().subscribe(\n      (_PESSOAS: Pessoa[]) => {\n      this.vendedores = _PESSOAS.filter(pessoa =>\n        pessoa.pessoaTipos.filter(c => c.tiposPessoa.descricao === 'VENDEDOR').length > 0\n        && pessoa.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar vendedores: ${error.error}`);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvZWRpdGFyVmVuZGEvcGFnYW1lbnRvc1ZlbmRhL3BhZ2FtZW50b3NWZW5kYS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"{{abrirTemplate(templatePagamentosVenda)}}\\n<div bsModal #templatePagamentosVenda=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Pagamentos da Venda ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templatePagamentosVenda)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"box box-solid\\\">\\n          <div class=\\\"box-header with-border\\\">\\n            <div class=\\\"row\\\">\\n              <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n                <a (click)=\\\"abrirTemplatePagamento()\\\" class=\\\"btn btn-success\\\">\\n                  <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Pagamento\\n                </a>\\n              </div>\\n            </div>\\n            <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th >Id</th>\\n                  <th >Pessoa</th>\\n                  <th style=\\\"text-align: center;\\\">Data Emissão</th>\\n                  <th style=\\\"text-align: center;\\\">Valor</th>\\n                  <th style=\\\"text-align: center;\\\">Ações</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"pagamentos && pagamentos.length\\\">\\n                <tr\\n                  *ngFor=\\\"let pagamento of pagamentos\\\">\\n                 \\n                  <td style=\\\"white-space: nowrap;\\\">{{pagamento.id}}</td>\\n                  <td style=\\\"white-space: nowrap;\\\">{{pagamento.pessoas.nome}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ pagamento.dataEmissao  | date:'dd/MM/yyyy'}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ pagamento.valorTotal | currency:' ':false}}</td>\\n                  <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n                    <div class=\\\"btn-group\\\">\\n                      <a (click)=\\\"abrirTemplateDetalharPagamento(pagamento.id)\\\" tooltip=\\\"Detalhar Pagamento\\\"\\n                        class=\\\"btn btn-sm btn-primary\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i>\\n                      </a>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n              <tfoot *ngIf=\\\"!pagamentos\\\">\\n                <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n                <h4>\\n                  Nenhum Pagamento encontrado!\\n                </h4>\\n              </tfoot>\\n            </table>\\n\\n          </div>\\n\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templatePagamentosVenda)\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<app-template-pagamento [idVenda]=\\\"this.idVenda\\\" [produtoItem]=\\\"this.produtoItem\\\" *ngIf=\\\"getTemplatePagamento() == true\\\"></app-template-pagamento>\\n\\n<app-detalhar-pagamento [idPagamento]=\\\"this.idDetalharPagamento\\\" [produtoItem]=\\\"this.produtoItem\\\" *ngIf=\\\"getDetalharPagamento() == true\\\">\\n</app-detalhar-pagamento>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Pagamentos } from 'src/app/_models/Financeiro/Pagamentos/Pagamentos';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { PagamentoService } from 'src/app/_services/Financeiro/Pagamentos/pagamento.service';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\n\n@Component({\n  selector: 'app-pagamentos-venda',\n  templateUrl: './pagamentosVenda.component.html',\n  styleUrls: ['./pagamentosVenda.component.css']\n})\n\nexport class PagamentosVendaComponent implements OnInit {\n\n  @Input() produtoItem: ProdutoItem;\n  @Input() idVenda: number;\n  @Input() vendaClienteId: number;\n\n  pagamentos: Pagamentos[];\n\n  idDetalharPagamento: number;\n\n  templateEnabled = false;\n\n  constructor(private vendaService: VendaService,\n              private toastr: ToastrService,\n              private permissaoService: PermissaoService,\n              private pagamentoService: PagamentoService) {\n                this.vendaService.atualizaVenda.subscribe(x => {\n                  this.getPagamentos();\n                });\n               }\n\n  ngOnInit() {\n    this.getPagamentos();\n  }\n\n  getPagamentos() {\n    this.pagamentoService.getAllPagamentos().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_PAGAMENTOS: Pagamentos[]) => {\n        this.pagamentos = _PAGAMENTOS.filter(c => c.produtosItensId === this.produtoItem.id && c.vendaId === this.idVenda);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Pagamentos: ${error.error}`);\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      this.templateEnabled = true;\n      template.show();\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.vendaService.setPagamentosVendaStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getDetalharPagamento() {\n    return this.pagamentoService.getDetalharPagamentoStatus();\n  }\n\n  abrirTemplateDetalharPagamento(idPagamento: number) {\n    this.idDetalharPagamento = idPagamento;\n    this.pagamentoService.setDetalharPagamentoStatus(true);\n  }\n\n  getTemplatePagamento() {\n    return this.pagamentoService.getTemplatePagamentoStatus();\n  }\n\n  abrirTemplatePagamento() {\n    this.pagamentoService.setTemplatePagamentoStatus(true);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvZWRpdGFyVmVuZGEvcmVjZWJpbWVudG9zVmVuZGEvcmVjZWJpbWVudG9zVmVuZGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"{{abrirTemplate(templateRecebimentosVenda)}}\\n<div bsModal #templateRecebimentosVenda=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" class=\\\"modal fade bd-example-modal-xl\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Recebimentos da Venda ({{produtoItem.descricao}})\\n        </h4>\\n\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"fecharTemplate(templateRecebimentosVenda)\\\"\\n          aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"box box-solid\\\">\\n          <div class=\\\"box-header with-border\\\">\\n            <div class=\\\"row\\\">\\n              <div style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n                <a (click)=\\\"abrirTemplateRecebimento()\\\" class=\\\"btn btn-success\\\">\\n                  <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Recebimento\\n                </a>\\n              </div>\\n            </div>\\n            <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th >Id</th>\\n                  <th >Plano de Pagamento</th>\\n                  <th style=\\\"text-align: center;\\\">Data Emissão</th>\\n                  <th style=\\\"text-align: center;\\\">Valor</th>\\n                  <th style=\\\"text-align: center;\\\">Ações</th>\\n                </tr>\\n              </thead>\\n              <tbody *ngIf=\\\"recebimentos && recebimentos.length\\\">\\n                <tr\\n                  *ngFor=\\\"let recebimento of recebimentos\\\">\\n                  <td style=\\\"white-space: nowrap;\\\">{{recebimento.id}}</td>\\n                  <td style=\\\"white-space: nowrap;\\\">{{recebimento.planoPagamento.descricao}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ recebimento.dataEmissao  | date:'dd/MM/yyyy'}}</td>\\n                  <td style=\\\"white-space: nowrap;text-align: center;\\\">{{ recebimento.valorTotal | currency:' ':false}}</td>\\n                  <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n                    <div class=\\\"btn-group\\\">\\n                      <a (click)=\\\"abrirTemplateDetalharRecebimento(recebimento.id)\\\" tooltip=\\\"Detalhar Recebimento\\\"\\n                        class=\\\"btn btn-sm btn-primary\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i>\\n                      </a>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n              <tfoot *ngIf=\\\"!recebimentos\\\">\\n                <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n                <h4>\\n                  Nenhum Recebimento encontrado!\\n                </h4>\\n              </tfoot>\\n            </table>\\n\\n          </div>\\n\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer d-flex\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"fecharTemplate(templateRecebimentosVenda)\\\">\\n          Fechar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<app-detalhar-recebimento [idRecebimento]=\\\"this.idDetalharRecebimento\\\" [produtoItem]=\\\"this.produtoItem\\\" *ngIf=\\\"getDetalharRecebimento() == true\\\">\\n</app-detalhar-recebimento>\\n\\n<app-template-recebimento [idVenda]=\\\"this.idVenda\\\" [vendaClienteId]=\\\"this.vendaClienteId\\\" [produtoItem]=\\\"this.produtoItem\\\" *ngIf=\\\"getTemplateRecebimento() == true\\\"></app-template-recebimento>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { RecebimentoService } from 'src/app/_services/Financeiro/Recebimentos/recebimento.service';\nimport { Recebimentos } from 'src/app/_models/Financeiro/Recebimentos/Recebimentos';\n\n@Component({\n  selector: 'app-recebimentos-venda',\n  templateUrl: './recebimentosVenda.component.html',\n  styleUrls: ['./recebimentosVenda.component.css']\n})\nexport class RecebimentosVendaComponent implements OnInit {\n\n  @Input() produtoItem: ProdutoItem;\n  @Input() idVenda: number;\n  @Input() vendaClienteId: number;\n\n  recebimentos: Recebimentos[];\n\n  idDetalharRecebimento: number;\n\n  templateEnabled = false;\n\n  constructor(private vendaService: VendaService,\n              private toastr: ToastrService,\n              private recebimentoService: RecebimentoService) {\n                this.vendaService.atualizaVenda.subscribe(x => {\n                  this.getRecebimentos();\n                });\n               }\n\n  ngOnInit() {\n    this.getRecebimentos();\n  }\n\n  getRecebimentos() {\n    this.recebimentoService.getAllRecebimentos().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_RECEBIMENTOS: Recebimentos[]) => {\n        this.recebimentos = _RECEBIMENTOS.filter(c => c.produtosItensId === this.produtoItem.id && c.vendaId === this.idVenda);\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar Recebimentos: ${error.error}`);\n    });\n  }\n\n  abrirTemplate(template: any) {\n    if (this.templateEnabled === false) {\n      this.templateEnabled = true;\n      template.show();\n    }\n  }\n\n  fecharTemplate(template: any) {\n    template.hide();\n    this.vendaService.setRecebimentosVendaStatus(false);\n    this.templateEnabled = false;\n  }\n\n  getDetalharRecebimento() {\n    return this.recebimentoService.getDetalharRecebimentoStatus();\n  }\n\n  abrirTemplateDetalharRecebimento(idRecebimento: number) {\n    this.idDetalharRecebimento = idRecebimento;\n    this.recebimentoService.setDetalharRecebimentoStatus(true);\n  }\n\n  getTemplateRecebimento() {\n    return this.recebimentoService.getTemplateRecebimentoStatus();\n  }\n\n  abrirTemplateRecebimento() {\n    this.recebimentoService.setTemplateRecebimentoStatus(true);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvZWRpdGFyVmVuZGEvcmVzdW1vVmVuZGEvcmVzdW1vVmVuZGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"margin-right: 15px; margin-bottom: 15px;\\\" >\\n  <a  (click)=\\\"atualizarResumoVenda()\\\" class=\\\"btn btn-primary\\\">\\n    <i class=\\\"fa fa-refresh\\\"></i>&nbsp; Atualizar Resultados\\n  </a>\\n</div>\\n<div class=\\\"col-md-5\\\">\\n  {{somar()}}\\n  <div class=\\\"box box-info\\\">\\n    <table class=\\\"table  table-bordered\\\" style=\\\"table-layout:fixed;\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Previsto</th>\\n          <th>Realizado</th>\\n          <th>Diferença</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td style=\\\"font-size:20px;max-width:60px;\\\">Receitas</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalReceitasPrevisto | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalReceitasRealizado | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">\\n            {{valorDiferencaReceitas | currency:'BRL':true}}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n  <hr style=\\\"width: 100%;\\\">\\n\\n  <div class=\\\"box box-danger\\\">\\n    <table class=\\\"table  table-bordered \\\" style=\\\"table-layout:fixed;\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th>Descrição</th>\\n          <th>Previsto</th>\\n          <th>Realizado</th>\\n          <th>Diferença</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td style=\\\"font-size:20px;\\\">Comissões</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalDespesasComissaoPrevisto | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">{{valorTotalDespesasComissaoRealizado | currency:'BRL':true}}</td>\\n          <td style=\\\"vertical-align: middle;\\\">\\n            {{valorDiferencaDespesasComissao | currency:'BRL':true}}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <hr style=\\\"width: 100%;\\\">\\n    <div class=\\\"box box-danger\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Descrição</th>\\n            <th>Previsto</th>\\n            <th>Realizado</th>\\n            <th>Diferença</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr style=\\\"vertical-align: middle;\\\">\\n            <td style=\\\"font-size:20px;\\\">Gastos</td>\\n            <td style=\\\"vertical-align: middle;\\\">{{valorTotalDespesasGastoPrevisto | currency:'BRL':true}}</td>\\n            <td style=\\\"vertical-align: middle;\\\">{{valorTotalDespesasGastoRealizado | currency:'BRL':true}}</td>\\n            <td style=\\\"vertical-align: middle;\\\">\\n              {{valorDiferencaDespesasGasto | currency:'BRL':true}}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"col-md-7\\\">\\n\\n  <div class=\\\"md-2\\\">\\n    <div class=\\\"box box-info\\\">\\n      <table class=\\\"table  table-bordered\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th style=\\\" font-size:30px;text-align: center;\\\">\\n              <span *ngIf=\\\"resultadoPrevisto >= 0\\\"\\n                class=\\\"label label-success\\\">RESULTADO PREVISTO\\n              </span>\\n              <span *ngIf=\\\"0 > resultadoPrevisto\\\"\\n                class=\\\"label label-danger\\\">RESULTADO PREVISTO\\n              </span>\\n            </th>\\n            <th style=\\\" font-size:30px;text-align: center;\\\">\\n              <span *ngIf=\\\"resultadoReal >= 0\\\"\\n                class=\\\"label label-success\\\">RESULTADO REAL\\n              </span>\\n              <span *ngIf=\\\"0 > resultadoReal\\\"\\n                class=\\\"label label-danger\\\">RESULTADO REAL\\n              </span>\\n            </th>\\n            <th style=\\\" font-size:30px;text-align: center;\\\">\\n              <span \\n                class=\\\"label label-primary\\\">%\\n              </span>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr style=\\\"vertical-align: middle;\\\">\\n            <td style=\\\"text-align: center;font-size:30px;\\\">\\n              {{resultadoPrevisto | currency:'BRL':true}}\\n            </td>\\n            <td style=\\\"text-align: center;font-size:30px;\\\">\\n              {{resultadoReal | currency:'BRL':true}}\\n            </td>\\n            <td style=\\\"text-align: center;font-size:30px;\\\">\\n              {{porcentagemPrevistoReal | currency:' ':false}}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n<div class=\\\"col-md-3\\\">\\n  <div class=\\\"chart\\\" style=\\\"width: 400px;height: 200px;\\\">\\n    <canvas baseChart [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\"\\n      [options]=\\\"pieChartOptions\\\" [plugins]=\\\"pieChartPlugins\\\" [colors]=\\\"pieChartColors\\\" [legend]=\\\"pieChartLegend\\\">\\n    </canvas>\\n  </div>\\n</div>\\n<div class=\\\"col-md-4\\\">\\n  <div class=\\\"chart\\\" style=\\\"width: 350px;margin-left:55px;margin-top: 20px;height: 200px;\\\">\\n    <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\"\\n      [plugins]=\\\"barChartPlugins\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\">\\n    </canvas>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { ProdutoItem } from 'src/app/_models/Cadastros/Produtos/produtoItem';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { VendaValorRealizado } from 'src/app/_models/Movimentos/Venda/VendaValorRealizado';\nimport { VendaValorPrevisto } from 'src/app/_models/Movimentos/Venda/VendaValorPrevisto';\nimport { ChartType, ChartOptions, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\n\n@Component({\n  selector: 'app-resumo-venda',\n  templateUrl: './resumoVenda.component.html',\n  styleUrls: ['./resumoVenda.component.css']\n})\nexport class ResumoVendaComponent implements OnInit, AfterViewChecked {\n\n\n  idVenda: number;\n  venda: Venda;\n\n  vendaItensReceita: ProdutoItem[];\n  vendaItensDespesaComissao: ProdutoItem[];\n  vendaItensDespesaGasto: ProdutoItem[];\n\n\n  idValorRealizado: number;\n\n  idValorPrevisto: number;\n  previstoReceitaValores: VendaValorPrevisto[] = [ ];\n  previstoDespesaComissaoValores: VendaValorPrevisto[] = [];\n  previstoDespesaGastoValores: VendaValorPrevisto[] = [];\n\n  realizadoReceitaValores = [];\n  realizadoDespesaComissaoValores = [];\n  realizadoDespesaGastoValores = [];\n  subTipoItem: string;\n  tipoItem: string;\n\n  valorTotalReceitasPrevisto = 0;\n  valorTotalReceitasRealizado = 0;\n\n  valorTotalDespesasComissaoPrevisto = 0;\n  valorTotalDespesasComissaoRealizado = 0;\n\n  valorTotalDespesasGastoPrevisto = 0;\n  valorTotalDespesasGastoRealizado = 0;\n\n  valorDiferencaReceitas = 0;\n  valorDiferencaDespesasComissao = 0;\n  valorDiferencaDespesasGasto = 0;\n\n  resultadoPrevisto = 0;\n  resultadoReal = 0;\n  porcentagemPrevistoReal = 0;\n\n  verificarSoma = false;\n  public pieChartOptions: ChartOptions = {\n    tooltips: {\n      callbacks: {\n        label: (value, ctx) => {\n          const texto = ctx.labels[value.index];\n          return texto;\n        },\n        afterLabel: (value, ctx) => {\n          const texto = Number(ctx.datasets[0].data[value.index]).toFixed(2).replace('.', ',');\n          return 'R$ ' +  texto;\n        },\n      }\n    },\n    responsive: true,\n    legend: {\n      position: 'top',\n    },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          return '';\n        },\n      },\n    }\n  };\n  public pieChartLabels: Label[] = ['RECEITAS', 'COMISSÕES', 'GASTOS'];\n  public pieChartData: number[] = [0, 0, 0];\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [pluginDataLabels];\n  public pieChartColors = [\n    {\n      backgroundColor: ['rgba(0,192,239,1)', 'rgba(221,75,57,0.5)', 'rgba(221,75,57,1)'],\n    },\n  ];\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    tooltips: {\n      callbacks: {\n        label: (item, ctx) => {\n          const texto = Number(item.value).toFixed(2).replace('.', ',');\n          return 'R$ ' +  texto;\n        }\n      },\n    },\n    scales: { xAxes: [{}], yAxes: [{ticks: {max: 5000, min: 0, stepSize: 1000}}] },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = value.toFixed(2).replace('.', ',');\n          return 'R$' + label;\n        },\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = ['RESULTADO'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartPlugins = [pluginDataLabels];\n\n  public barChartData: ChartDataSets[] = [\n    { data: [0], label: 'Receitas', backgroundColor: 'rgba(0,192,239,1)', hoverBackgroundColor: 'rgba(0,192,239,1)',\n      borderColor: 'rgba(0,192,239,1)'},\n    { data: [0], label: 'Despesas', backgroundColor: 'rgba(221,75,57,1)', hoverBackgroundColor: 'rgba(221,75,57,1)',\n      borderColor: 'rgba(221,75,57,1)'}\n  ];\n\n  constructor(private toastr: ToastrService,\n              private router: ActivatedRoute,\n              private vendaService: VendaService,\n              private pessoaService: PessoaService,\n              public dataService: DataService,\n              private changeDetectionRef: ChangeDetectorRef) {\n                this.vendaService.atualizaResumoVenda.subscribe(x => {\n                  this.carregarVenda();\n                });\n              }\n\n  ngOnInit() {\n    this.idVenda = +this.router.snapshot.paramMap.get('id');\n    this.carregarVenda();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetectionRef.detectChanges();\n  }\n\n  verificarMaiorZero(valor: number) {\n    if (valor >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  somarValores(valores: any): number {\n    let valorTotal = 0;\n    if (valores) {\n        if (valores.length > 0) {\n      valores.forEach(item => {\n          if (typeof item === 'object') {\n            valorTotal = valorTotal + Number(item.valor);\n          } else {\n            valorTotal = valorTotal + Number(item);\n          }\n        });\n      }\n    }\n    return valorTotal;\n  }\n\n  calcularDiferenca(valorRealizado: number, valorPrevisto: number): number {\n    return valorPrevisto - valorRealizado;\n  }\n\n  calcularResultado(): number {\n    const valorTotalDespesa = this.valorTotalDespesasComissaoRealizado + this.valorTotalDespesasGastoRealizado;\n    return this.valorTotalReceitasRealizado - valorTotalDespesa;\n  }\n\n  calcularPorcentagemPrevistoReal() {\n    return (this.resultadoReal / this.resultadoPrevisto) * 100;\n  }\n  somar(): any {\n    if (this.verificarSoma === false) {\n      this.valorTotalReceitasPrevisto = this.somarValores(this.previstoReceitaValores);\n      this.valorTotalReceitasRealizado = this.somarValores(this.realizadoReceitaValores);\n      this.valorTotalDespesasComissaoPrevisto = this.somarValores(this.previstoDespesaComissaoValores);\n      this.valorTotalDespesasComissaoRealizado = this.somarValores(this.realizadoDespesaComissaoValores);\n      this.valorTotalDespesasGastoRealizado = this.somarValores(this.realizadoDespesaGastoValores);\n      this.valorTotalDespesasGastoPrevisto = this.somarValores(this.previstoDespesaGastoValores);\n      this.valorDiferencaReceitas = this.calcularDiferenca(this.valorTotalReceitasRealizado, this.valorTotalReceitasPrevisto);\n      this.valorDiferencaDespesasComissao = this.calcularDiferenca(this.valorTotalDespesasComissaoRealizado,\n         this.valorTotalDespesasComissaoPrevisto);\n      this.valorDiferencaDespesasGasto = this.calcularDiferenca(this.valorTotalDespesasGastoRealizado,\n         this.valorTotalDespesasGastoPrevisto);\n      this.resultadoPrevisto = this.valorTotalReceitasPrevisto - this.valorTotalDespesasComissaoPrevisto -\n        this.valorTotalDespesasGastoPrevisto;\n      this.resultadoReal = this.valorTotalReceitasRealizado - this.valorTotalDespesasComissaoRealizado -\n        this.valorTotalDespesasGastoRealizado;\n      this.porcentagemPrevistoReal = this.calcularPorcentagemPrevistoReal();\n\n      this.pieChartData = [this.valorTotalReceitasRealizado, this.valorTotalDespesasComissaoRealizado,\n        this.valorTotalDespesasGastoRealizado];\n      this.barChartData[0].data = [this.valorTotalReceitasRealizado];\n      this.barChartData[1].data = [this.valorTotalDespesasComissaoRealizado + this.valorTotalDespesasGastoRealizado];\n      this.verificarSoma = true;\n    }\n    return '';\n  }\n\n  atualizarResumoVenda() {\n    this.vendaService.atualizarResumoVenda();\n  }\n\n  carregarVenda() {\n    this.previstoReceitaValores = [];\n    this.previstoDespesaComissaoValores = [];\n    this.previstoDespesaGastoValores = [];\n    this.realizadoDespesaComissaoValores = [];\n    this.realizadoDespesaGastoValores = [];\n\n    this.vendaService.getVendaById(this.idVenda).subscribe((_VENDA: Venda) => {\n      this.venda = Object.assign({}, _VENDA);\n\n      this.vendaItensReceita = this.venda.vendaProdutos[0].produtos.itens.filter(item => item.tipoItem === 'RECEITA');\n      this.vendaItensReceita.map(itemReceita => {\n        const valorRealizadoItem = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === itemReceita.id);\n        if (valorRealizadoItem) {\n          valorRealizadoItem.forEach(valorRealizado => {\n            this.realizadoReceitaValores.push(valorRealizado.recebimentos.valorTotal);\n          });\n          this.verificarSoma = false;\n        }\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemReceita.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n          if (_VALORPREVISTO) {\n            this.previstoReceitaValores.push(_VALORPREVISTO);\n            this.verificarSoma = false;\n          }\n        });\n      });\n\n      this.vendaItensDespesaComissao = this.venda.vendaProdutos[0].produtos.itens.filter(\n        item => item.tipoItem === 'DESPESA' && item.subTipoItem === 'COMISSÃO');\n      this.vendaItensDespesaComissao.map(itemComissao => {\n\n        const valorRealizadoItem = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === itemComissao.id);\n        if (valorRealizadoItem) {\n          valorRealizadoItem.forEach(valorRealizado => {\n            this.realizadoDespesaComissaoValores.push(valorRealizado.pagamentos.valorTotal);\n          });\n          this.verificarSoma = false;\n        }\n\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemComissao.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n           if (_VALORPREVISTO) {\n             this.previstoDespesaComissaoValores.push(_VALORPREVISTO);\n             this.verificarSoma = false;\n            }\n        });\n      });\n\n      this.vendaItensDespesaGasto = this.venda.vendaProdutos[0].produtos.itens.filter(\n        item => item.tipoItem === 'DESPESA' && item.subTipoItem === 'GASTO');\n      this.vendaItensDespesaGasto.map(itemGasto => {\n\n        const valorRealizadoItem = this.venda.vendaValorRealizado.filter(c => c.produtosItensId === itemGasto.id);\n        if (valorRealizadoItem) {\n          valorRealizadoItem.forEach(valorRealizado => {\n            this.realizadoDespesaGastoValores.push(valorRealizado.pagamentos.valorTotal);\n          });\n          this.verificarSoma = false;\n        }\n\n        this.vendaService.getVendaValorPrevistoByProdIdVendId(itemGasto.id, this.idVenda)\n          .subscribe((_VALORPREVISTO: VendaValorPrevisto) => {\n           if (_VALORPREVISTO) {\n             this.previstoDespesaGastoValores.push(_VALORPREVISTO);\n             this.verificarSoma = false;\n          }\n        });\n\n      });\n\n    }, error => {\n      this.toastr.error(`Erro ao tentar carregar Venda: ${error.error}`);\n      console.log(error);\n    });\n  }\n\n}\n","module.exports = \"<h2>Novo Venda</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <form [formGroup]=\\\"cadastroForm\\\" class=\\\"mt-3\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Empresa:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"empresas\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"empresaIdSelecionado\\\" formControlName=\\\"empresasId\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Vendedor:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"vendedores\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"vendedorIdSelecionado\\\" formControlName=\\\"vendedorId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Cliente:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"clientes\\\" bindLabel=\\\"nomeFantasia\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"clienteIdSelecionado\\\" formControlName=\\\"clientesId\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-md-5\\\">\\n          <label>Produto:(*)</label>\\n          <ng-select style=\\\"text-transform: uppercase\\\" [items]=\\\"produtos\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\"\\n            [(ngModel)]=\\\"produtoIdSelecionado\\\" formControlName=\\\"produtoId\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n    <div *ngIf=\\\"!cadastroForm.valid\\\" style=\\\"font-size:18px;\\\" class=\\\"invalid-feedback d-block\\\">\\n      Preencha todos os campos com (*).\\n    </div>\\n  </div>\\n</div>\\n\\n<button style=\\\"position:relative;\\\" [disabled]=\\\"!cadastroForm.valid\\\" (click)=\\\"cadastrarVenda()\\\" tooltip=\\\"Novo Venda\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Cadastrar\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/_models/Cadastros/Clientes/Cliente';\nimport { ToastrService } from 'ngx-toastr';\nimport { ClienteService } from 'src/app/_services/Cadastros/Clientes/cliente.service';\nimport { Produto } from 'src/app/_models/Cadastros/Produtos/produto';\nimport { ProdutoService } from 'src/app/_services/Cadastros/Produtos/produto.service';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { VendaProduto } from 'src/app/_models/Movimentos/Venda/VendaProduto';\nimport { PessoaService } from 'src/app/_services/Cadastros/Pessoas/pessoa.service';\nimport { EmpresaService } from 'src/app/_services/Cadastros/Empresas/empresa.service';\nimport { Empresa } from 'src/app/_models/Cadastros/Empresas/Empresa';\nimport { Pessoa } from 'src/app/_models/Cadastros/Pessoas/Pessoa';\n@Component({\n  selector: 'app-novo-venda',\n  templateUrl: './novoVenda.component.html'\n})\nexport class NovoVendaComponent implements OnInit {\n\n  cadastroForm: FormGroup;\n\n  clientes: Cliente[];\n  clienteIdSelecionado: any;\n\n  empresas: Empresa[];\n  empresaIdSelecionado: any;\n\n  vendedores: Pessoa[];\n  vendedorIdSelecionado: any;\n\n  produtos: Produto[];\n  produtoIdSelecionado: any;\n\n  produtoVenda: VendaProduto[];\n  venda: Venda;\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private router: Router,\n              private clienteService: ClienteService,\n              private produtoService: ProdutoService,\n              private pessoaService: PessoaService,\n              private empresaService: EmpresaService,\n              private vendaService: VendaService) { }\n\n  ngOnInit() {\n    this.getClientes();\n    this.getProdutos();\n    this.getEmpresas();\n    this.getVendedores();\n    this.validarForm();\n  }\n\n  validarForm() {\n    this.cadastroForm = this.fb.group({\n        id:  [''],\n        clientesId: ['', Validators.required],\n        produtoId: ['', Validators.required],\n        empresasId: ['', Validators.required],\n        vendedorId: ['', Validators.required]\n    });\n  }\n\n  cadastrarVenda() {\n    const dataAtual = moment(new Date(), 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\n    if (this.cadastroForm.valid) {\n      this.venda = Object.assign(this.cadastroForm.value, {id: 0, status: 'EM NEGOCIAÇÃO',\n       dataEmissao: dataAtual, dataHoraUltAlt: dataAtual});\n\n      this.vendaService.novoVenda(this.venda).subscribe(\n        () => {\n          this.vendaService.getIdUltimaVenda().subscribe(\n            (_VENDA: Venda) => {\n              const IdUltimaVenda = _VENDA.id;\n\n              this.produtoVenda = [];\n              this.produtoVenda.push(Object.assign({vendaId: IdUltimaVenda, produtosId: this.produtoIdSelecionado}));\n\n              this.vendaService.novoProdutoVenda(this.produtoVenda).subscribe(() => {\n                this.toastr.success('Cadastrado com sucesso!');\n                this.router.navigate([`/movimentos/vendas/editar/${IdUltimaVenda}`]);\n              });\n          });\n        }, error => {\n          console.log(error.error);\n        }\n      );\n    }\n  }\n\n  getProdutos() {\n    this.produtoService.getAllProduto().subscribe(\n      (_PRODUTOS: Produto[]) => {\n      this.produtos = _PRODUTOS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar produtos: ${error.error}`);\n    });\n  }\n\n  getClientes() {\n    this.clienteService.getAllCliente().subscribe(\n      (_CLIENTES: Cliente[]) => {\n      this.clientes = _CLIENTES.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar clientes: ${error.error}`);\n    });\n  }\n\n  getEmpresas() {\n    this.empresaService.getAllEmpresa().subscribe(\n      (_EMPRESAS: Empresa[]) => {\n      this.empresas = _EMPRESAS.filter(cliente => cliente.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar empresas: ${error.error}`);\n    });\n  }\n\n  getVendedores() {\n    this.pessoaService.getAllPessoa().subscribe(\n      (_PESSOAS: Pessoa[]) => {\n      console.log(_PESSOAS);\n      this.vendedores = _PESSOAS.filter(pessoa =>\n        pessoa.pessoaTipos.filter(c => c.tiposPessoa.descricao === 'VENDEDOR').length > 0\n        && pessoa.status !== 'INATIVO');\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar vendedores: ${error.error}`);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmltZW50b3MvdmVuZGEvcmVsYXRvcmlvVmVuZGEvcmVsYXRvcmlvVmVuZGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Relatório Vendas</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\">\\n    <tabset>\\n      <tab heading=\\\"Geral\\\" style=\\\"margin-top: 10px;\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\n            <div class=\\\"info-box\\\">\\n              <span class=\\\"info-box-icon bg-yellow\\\"><i class=\\\"fa fa-spinner\\\"></i></span>\\n\\n              <div class=\\\"info-box-content\\\">\\n                <span class=\\\"info-box-text\\\">EM NEGOCIAÇÃO</span>\\n                <span class=\\\"info-box-number\\\" style=\\\"font-size:40px;\\\">{{this.informacoes.quantidadeEmNegociacao}}</span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"clearfix visible-sm-block\\\"></div>\\n\\n          <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\n            <div class=\\\"info-box\\\">\\n              <span class=\\\"info-box-icon bg-aqua\\\"><i class=\\\"fa fa-download\\\"></i></span>\\n              <div class=\\\"info-box-content\\\">\\n                <span class=\\\"info-box-text\\\">EM IMPLANTAÇÃO</span>\\n                <span class=\\\"info-box-number\\\"\\n                  style=\\\"font-size:40px;\\\">{{this.informacoes.quantidadeEmImplantacao}}</span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\n            <div class=\\\"info-box\\\">\\n              <span class=\\\"info-box-icon bg-green\\\"><i class=\\\"fa fa-thumbs-o-up\\\"></i></span>\\n\\n              <div class=\\\"info-box-content\\\">\\n                <span class=\\\"info-box-text\\\">FINALIZADO</span>\\n                <span class=\\\"info-box-number\\\" style=\\\"font-size:40px;\\\">{{this.informacoes.quantidadeFinalizado}}</span>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"row\\\" style=\\\"height: 300px;\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <div class=\\\"box\\\">\\n              <div class=\\\"box-header with-border\\\">\\n                <h3 class=\\\"box-title\\\">Grafico Geral</h3>\\n              </div>\\n              <div class=\\\"box-body\\\">\\n                <p class=\\\"text-center\\\">\\n                  <strong>Vendas: 01/01/2019 - 31/12/2019</strong>\\n                </p>\\n                <div class=\\\"chart\\\">\\n                  <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\"\\n                    [plugins]=\\\"barChartPlugins\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\">\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10 col-xs-12\\\">\\n                <div class=\\\"info-box\\\">\\n                  <span class=\\\"info-box-icon\\\"><i class=\\\"fa fa-handshake\\\"></i></span>\\n\\n                  <div class=\\\"info-box-content\\\">\\n                    <span class=\\\"info-box-text\\\">Total de Vendas Negociadas</span>\\n                    <span class=\\\"info-box-number\\\" style=\\\"font-size:35px;\\\">{{this.informacoes.quantidadeTotal}}</span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"clearfix visible-sm-block\\\"></div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10 col-xs-12\\\">\\n                <div class=\\\"info-box\\\">\\n                  <span class=\\\"info-box-icon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n\\n                  <div class=\\\"info-box-content\\\">\\n                    <span class=\\\"info-box-text\\\">Valor Líquido de Vendas Negociadas</span>\\n                    <span class=\\\"info-box-number\\\"\\n                      style=\\\"font-size:35px;\\\">{{this.informacoes.valorLiquidoReceitas | currency:'BRL':true}}</span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"clearfix visible-sm-block\\\"></div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10 col-xs-12\\\">\\n                <div class=\\\"info-box\\\">\\n                  <span class=\\\"info-box-icon\\\"><i class=\\\"fa fa-dollar\\\"></i></span>\\n\\n                  <div class=\\\"info-box-content\\\">\\n                    <span class=\\\"info-box-text\\\">Valor Médio</span>\\n                    <span class=\\\"info-box-number\\\"\\n                      style=\\\"font-size:35px;\\\">{{this.informacoes.valorMedio | currency:'BRL':true}}</span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Resumo\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label>Selecione a Data:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dataFiltro\\\" (bsValueChange)=\\\"setDataFiltro($event)\\\"\\n              [bsConfig]=\\\"this.bsConfig\\\" bsDaterangepicker />\\n          </div>\\n\\n          <div style=\\\"margin-right: 15px; margin-top: 24px;\\\">\\n            <a (click)=\\\"getVendas(this.dataPeriodo)\\\" class=\\\"btn btn-primary\\\">\\n              <i class=\\\"fa fa-search\\\"></i>&nbsp; Gerar Relatório\\n            </a>\\n          </div>\\n        </div>\\n\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { DataPeriodo } from 'src/app/_models/Cadastros/Uteis/DataPeriodo';\nimport { DataService } from 'src/app/_services/Cadastros/Uteis/data.service';\nimport { ChartType, ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label } from 'ng2-charts';\nimport * as moment from 'moment';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-relatorio-venda',\n  templateUrl: './relatorioVenda.component.html',\n  styleUrls: ['./relatorioVenda.component.css']\n})\n\nexport class RelatorioVendaComponent implements OnInit, AfterViewInit {\n\n  vendas: Venda[];\n\n  visualizarRelatorio = false;\n\n  dataPeriodo: DataPeriodo;\n\n  informacoes = Object.assign({});\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    tooltips: {\n      callbacks: {\n        label: (item, ctx) => {\n          const texto = Number(item.value).toFixed(2).replace('.', ',');\n          return 'R$ ' +  texto;\n        }\n      }\n    },\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{ticks: {max: 20000, min: 0, stepSize: 2000}}] },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = value.toFixed(2).replace('.', ',');\n          return '';\n        },\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = ['JANEIRO', 'FEVEREIRO', 'MARÇO', 'ABRIL', 'MAIO', 'JUNHO', 'JULHO', 'AGOSTO',\n   'SETEMBRO', 'OUTUBRO', 'NOVEMBRO', 'DEZEMBRO'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartPlugins = [pluginDataLabels];\n\n  public barChartData: ChartDataSets[] = [\n    { data: [0], label: 'Receitas', backgroundColor: 'rgba(0,192,239,1)', hoverBackgroundColor: 'rgba(0,192,239,1)',\n      borderColor: 'rgba(0,192,239,1)'},\n    { data: [0], label: 'Despesas', backgroundColor: 'rgba(221,75,57,1)', hoverBackgroundColor: 'rgba(221,75,57,1)',\n      borderColor: 'rgba(221,75,57,1)'}\n  ];\n\n  bsConfig: Partial<BsDatepickerConfig> = Object.assign({}, { containerClass: 'theme-dark-blue' });\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              private dataService: DataService,\n              public vendaService: VendaService) { }\n\n  ngOnInit() {\n    this.dataPeriodo = Object.assign(\n      {\n        dataInicial: this.dataService.getDataSQL('01/01/2019') + 'T00:00:00',\n        dataFinal: this.dataService.getDataSQL('31/12/2019') + 'T23:59:00'\n      }\n    );\n    this.getVendas(this.dataPeriodo);\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('RELATÓRIOS VENDA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizarRelatorio = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  carregarInformacoes() {\n    let valorTotalReceitasVendas = 0;\n    let valorTotalDespesasVendas = 0;\n    this.barChartData[0].data = [];\n    this.barChartData[1].data = [];\n    const quantidadeVendasEmNegociacao = this.vendas.filter(c => c.status === 'EM NEGOCIAÇÃO').length;\n    const quantidadeVendasEmImplantacao = this.vendas.filter(c => c.status === 'EM IMPLANTAÇÃO').length;\n    const quantidadeVendasFinalizado = this.vendas.filter(c => c.status === 'FINALIZADO').length;\n\n    this.vendas.forEach((venda) => {\n      if (venda.vendaValorRealizado && venda.status !== 'EM NEGOCIAÇÃO') {\n        const valorRealizadoReceitas = venda.vendaValorRealizado.filter(c => c.recebimentosId !== null);\n        if (valorRealizadoReceitas.length > 0) {\n          valorRealizadoReceitas.forEach((receita) => {\n            valorTotalReceitasVendas += receita.recebimentos.valorTotal;\n          });\n        }\n\n        const valorRealizadoDespesas = venda.vendaValorRealizado.filter(c => c.pagamentosId !== null);\n        if (valorRealizadoDespesas.length > 0) {\n          valorRealizadoDespesas.forEach((despesa) => {\n            valorTotalDespesasVendas += despesa.pagamentos.valorTotal;\n          });\n        }\n      }\n\n    });\n    const barChartArrayReceitas = [];\n    const barChartArrayDespesas = [];\n    for (let index = 0; index <= 11; index++) {\n\n      let valorTotalReceitasMes = 0;\n      let valorTotalDespesasMes = 0;\n      const vendas = this.vendas.filter(c => moment(c.dataNegociacao, 'YYYY-MM-DD').month() === index);\n\n      vendas.forEach((venda) => {\n        if (venda.vendaValorRealizado && venda.status !== 'EM NEGOCIAÇÃO') {\n          const valorRealizadoReceitas = venda.vendaValorRealizado.filter(c => c.recebimentosId !== null);\n          if (valorRealizadoReceitas.length > 0) {\n            valorRealizadoReceitas.forEach((receita) => {\n              valorTotalReceitasMes += receita.recebimentos.valorTotal;\n            });\n          }\n\n          const valorRealizadoDespesas = venda.vendaValorRealizado.filter(c => c.pagamentosId !== null);\n          if (valorRealizadoDespesas.length > 0) {\n            valorRealizadoDespesas.forEach((despesa) => {\n              valorTotalDespesasMes += despesa.pagamentos.valorTotal;\n            });\n          }\n        }\n      });\n\n      barChartArrayReceitas.push(valorTotalReceitasMes);\n      barChartArrayDespesas.push(valorTotalDespesasMes);\n    }\n    this.barChartData[0].data = barChartArrayReceitas;\n    this.barChartData[1].data = barChartArrayDespesas;\n\n    this.informacoes = Object.assign({\n      quantidadeEmNegociacao: quantidadeVendasEmNegociacao,\n      quantidadeEmImplantacao: quantidadeVendasEmImplantacao,\n      quantidadeFinalizado: quantidadeVendasFinalizado,\n      quantidadeTotal: quantidadeVendasEmImplantacao + quantidadeVendasFinalizado,\n      valorLiquidoReceitas: valorTotalReceitasVendas - valorTotalDespesasVendas,\n      valorMedio: (valorTotalReceitasVendas / (quantidadeVendasEmImplantacao + quantidadeVendasFinalizado)),\n    });\n  }\n\n  setDataFiltro(valor: Date[]) {\n    this.dataPeriodo = Object.assign(\n      {\n        dataInicial: this.dataService.getDataSQL(valor[0].toLocaleString()) + 'T00:00:00',\n        dataFinal: this.dataService.getDataSQL(valor[1].toLocaleString()) + 'T23:59:00'\n      }\n    );\n  }\n\n  getVendas(dataPeriodo: DataPeriodo) {\n    this.vendaService.getAllVendaRelatorio(dataPeriodo).subscribe(\n      // tslint:disable-next-line:variable-name\n      (_VENDAS: Venda[]) => {\n      this.vendas = _VENDAS;\n      this.carregarInformacoes();\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaS: ${error.error}`);\n    });\n}\n\n}\n","module.exports = \"<h2>Venda</h2>\\n\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"this.novo == true\\\" style=\\\"margin-right: 15px;\\\" class=\\\"pull-right\\\">\\n        <a  [routerLink]=\\\"['novo']\\\" class=\\\"btn btn-success\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Novo Venda\\n        </a>\\n        <a (click)=\\\"abrirVendaConfig()\\\" style=\\\"margin-left:5px;\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"fa fa-gear\\\"></i>\\n          </a>\\n      </div>\\n    </div>\\n    <table style=\\\"margin-top: 15px;\\\" class=\\\"table table-striped table-bordered mt-4\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Cliente</th>\\n            <th>Data Emissão</th>\\n            <th style=\\\"text-align: center;\\\">Status</th>\\n            <th style=\\\"text-align: center;\\\">Ações</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"vendas && vendas.length\\\">\\n          <tr *ngFor=\\\"let venda of vendas | paginate: { itemsPerPage: 50,currentPage: paginaAtual, totalItems: totalRegistros };\\\">\\n            <td>{{ venda.id }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ venda.clientes.nomeFantasia }}</td>\\n            <td style=\\\"white-space: nowrap;\\\">{{ venda.dataEmissao  | date:'dd/MM/yyyy HH:mm'}}</td>\\n            <td style=\\\"text-align: center;\\\">\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"venda.status == 'EM IMPLANTAÇÃO'\\\"  class=\\\"label label-info\\\">\\n                {{ venda.status }}\\n              </span>\\n              <span style=\\\"text-align: center;\\\" *ngIf=\\\"venda.status == 'EM NEGOCIAÇÃO'\\\"  class=\\\"label label-warning\\\">\\n                {{ venda.status }}\\n              </span>\\n              <span style=\\\"text-align: center;\\\"*ngIf=\\\"venda.status == 'FINALIZADO'\\\" class=\\\"label label-success\\\">\\n                {{ venda.status }}\\n              </span></td>\\n            <td style=\\\"text-align: center;white-space: nowrap;\\\">\\n              <div *ngIf=\\\"this.visualizar == true\\\" class=\\\"btn-group\\\">\\n                <a  [routerLink]=\\\"['/movimentos/vendas','editar', venda.id]\\\" tooltip=\\\"Editar/Detalhes\\\" class=\\\"btn btn-sm btn-primary\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot *ngIf=\\\"!vendas\\\">\\n          <tr colspan=\\\"7\\\" class=\\\"text-center\\\"></tr>\\n          <h4>\\n            Nenhum produto encontrado!\\n          </h4>\\n        </tfoot>\\n      </table>\\n      Total de Registros: {{totalRegistros}}\\n      <div class=\\\"text-center\\\">\\n        <pagination-controls (pageChange)=\\\"paginaAtual = $event\\\" name=\\\"retornoPagination\\\" previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Próximo\\\">\\n        </pagination-controls>\\n      </div>\\n  </div>\\n\\n</div>\\n\\n<app-config-venda *ngIf=\\\"getVendaConfig() == true\\\"></app-config-venda>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { BsLocaleService } from 'ngx-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissaoService } from 'src/app/_services/Permissoes/permissao.service';\nimport { Venda } from 'src/app/_models/Movimentos/Venda/Venda';\nimport { FormGroup } from '@angular/forms';\nimport { VendaService } from 'src/app/_services/Movimentos/Venda/venda.service';\nimport { Permissao } from 'src/app/_models/Permissoes/permissao';\n\n@Component({\n  selector: 'app-venda',\n  templateUrl: './venda.component.html'\n})\nexport class VendaComponent implements OnInit, AfterViewInit {\n\n  novo = false;\n  editar = false;\n  excluir = false;\n  visualizar = false;\n\n  vendas: Venda[];\n\n  paginaAtual = 1;\n  totalRegistros = 0; number;\n\n  constructor(private localeService: BsLocaleService,\n              private toastr: ToastrService,\n              public permissaoService: PermissaoService,\n              public vendaService: VendaService) { }\n\n  ngOnInit() {\n    this.getVendas();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'NOVO').subscribe((_PERMISSAO: Permissao) => {\n      this.novo = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('VENDA', 'VISUALIZAR').subscribe((_PERMISSAO: Permissao) => {\n      this.visualizar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getVendas() {\n    this.vendaService.getAllVenda().subscribe(\n      // tslint:disable-next-line:variable-name\n      (_VENDAS: Venda[]) => {\n      this.vendas = _VENDAS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar VendaS: ${error.error}`);\n    });\n}\n\ngetVendaConfig() {\n  return this.vendaService.getConfigVendaStatus();\n}\n\nabrirVendaConfig() {\n  this.vendaService.setConfigVendaStatus(true);\n}\n\n}\n","module.exports = \"<h2>Permissões</h2>\\n<hr width=\\\"100%\\\">\\n<div class=\\\"box box-solid\\\">\\n  <div class=\\\"box-header with-border\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <label>Formulário: </label>\\n        <ng-select [items]=\\\"formularios\\\" style=\\\"text-transform: uppercase\\\" bindLabel=\\\"nome\\\" bindValue=\\\"nome\\\"\\n          [(ngModel)]=\\\"formularioSelecionado\\\" (change)=\\\"getPermissoesFormularios()\\\" name=\\\"cidadeId\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"table\\\"> \\n      <thead>\\n        <tr>\\n          <th>Ação</th>\\n          <th>Níveis Permitidos</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"formularioSelecionado !== ''\\\" >\\n        <tr *ngFor=\\\"let permissao of permissoesFormulario\\\">\\n          \\n          <td *ngIf=\\\"permissao.objeto == null\\\">{{permissao.acao}}</td>\\n          <td *ngIf=\\\"permissao.objeto !== null\\\">{{permissao.acao}} {{permissao.objeto}} </td>\\n          <td>\\n            <ng-select style=\\\"max-height:35px;\\\" [items]=\\\"niveis\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" \\n            [ngModel]=\\\"getNiveisPermissao(permissao.id)\\\"\\n            \\n            (change)=\\\"setNiveisPermissao(permissao.id, $event)\\\"\\n            required [multiple]=\\\"true\\\">\\n            </ng-select>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n   \\n  </div>\\n\\n</div>\\n\\n<button *ngIf=\\\"this.editar == true\\\" style=\\\"position:relative;\\\" (click)=\\\"salvarAlteracao()\\\" tooltip=\\\"Salvar\\\"\\n  class=\\\"btn btn-lg btn-primary\\\">\\n  &nbsp;Salvar Alterações\\n</button>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UsuarioService } from '../_services/Cadastros/Usuarios/usuario.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder } from '@angular/forms';\nimport { Nivel } from '../_models/Cadastros/Usuarios/Nivel';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\nimport { Permissao } from '../_models/Permissoes/permissao';\nimport { NiveisPermissao } from '../_models/Permissoes/niveisPermissao';\nimport { PermissaoNivel } from '../_models/Permissoes/permissaoNivel';\n\n@Component({\n  selector: 'app-permissao',\n  templateUrl: './permissao.component.html'\n})\nexport class PermissaoComponent implements OnInit, AfterViewInit {\n\n  formularios: any =\n  [\n    {\n      nome: 'EMPRESAS'\n    },\n    {\n      nome: 'USUARIOS'\n    },\n    {\n      nome: 'CLIENTES'\n    },\n    {\n      nome: 'PESSOAS'\n    },\n    {\n      nome: 'PRODUTOS'\n    },\n    {\n      nome: 'PLANO DE CONTAS'\n    },\n    {\n      nome: 'CENTRO DE RECEITA'\n    },\n    {\n      nome: 'CENTRO DE DESPESA'\n    },\n    {\n      nome: 'PLANO DE PAGAMENTO'\n    },\n    {\n      nome: 'FORMA DE PAGAMENTO'\n    },\n    {\n      nome: 'FINANCEIRO'\n    },\n    {\n      nome: 'RECEBIMENTOS'\n    },\n    {\n      nome: 'PAGAMENTOS'\n    },\n    {\n      nome: 'LANÇAMENTOS'\n    },\n    {\n      nome: 'RELATÓRIOS LANÇAMENTOS'\n    },\n    {\n      nome: 'CHEQUES PRE-DATADO'\n    },\n    {\n      nome: 'VENDA'\n    },\n    {\n      nome: 'RELATÓRIOS VENDA'\n    },\n    {\n      nome: 'PERMISSOES'\n    },\n    {\n      nome: 'AUTORIZACOES'\n    }\n  ];\n\n  niveis: Nivel[];\n  editar = false;\n\n  formularioSelecionado: any;\n  permissoesFormulario: Permissao[];\n  niveisPermissao: NiveisPermissao[] = [];\n  controllerPermissaoNivel: PermissaoNivel[] = [];\n  constructor(private usuarioService: UsuarioService,\n              private toastr: ToastrService,\n              private permissaoService: PermissaoService) { }\n\n  ngOnInit() {\n    this.getNiveis();\n  }\n\n  ngAfterViewInit() {\n    this.permissaoService.getPermissoesByFormularioAcaoObjeto('PERMISSOES', 'EDITAR').subscribe((_PERMISSAO: Permissao) => {\n      this.editar = this.permissaoService.verificarPermissao(_PERMISSAO);\n    });\n  }\n\n  getPermissoesFormularios() {\n    this.niveisPermissao = [];\n    let niveisConst;\n    this.permissaoService.getPermissoesByFormulario(this.formularioSelecionado)\n    .subscribe((_PERMISSOES: Permissao[]) => {\n      this.permissoesFormulario = _PERMISSOES;\n      _PERMISSOES.forEach(permissao => {\n        niveisConst = [];\n        permissao.permissaoNiveis.forEach(nivel => {\n          niveisConst.push(nivel.nivelId);\n        });\n        this.niveisPermissao.push(Object.assign({permissaoId: permissao.id, niveis: niveisConst}));\n      });\n    });\n  }\n\n  setNiveisPermissao(idPermissao: number, niveis: any) {\n    let niveisConst: any;\n    if (niveis) {\n      niveisConst = [];\n      niveis.forEach(nivel => {\n        niveisConst.push(nivel.id);\n      });\n      if (this.niveisPermissao.filter(c => c.permissaoId === idPermissao)[0]) {\n        this.niveisPermissao.forEach(np => {\n          if (np.permissaoId === idPermissao) {\n            if (niveisConst !== np.niveis) {\n              np.niveis = niveisConst;\n            }\n          }\n        });\n      } else {\n        this.niveisPermissao.push(Object.assign({permissaoId: idPermissao, niveis: niveisConst}));\n      }\n    }\n  }\n\n  getNiveisPermissao(idPermissao: number) {\n    if (this.niveisPermissao.filter(c => c.permissaoId === idPermissao).length > 0) {\n      return this.niveisPermissao.filter(c => c.permissaoId === idPermissao)[0].niveis;\n    } else {\n      return null;\n    }\n  }\n\n  salvarAlteracao() {\n    let verificaErro = false;\n    this.controllerPermissaoNivel = [];\n    this.niveisPermissao.forEach(np => {\n\n      if (np.niveis.length > 0) {\n        np.niveis.forEach(nivel => {\n          const obj = Object.assign({permissaoId: np.permissaoId, nivelId: nivel});\n          this.controllerPermissaoNivel.push(obj);\n        });\n\n        if (np.niveis.filter(c => c === 1).length === 0) {\n          const obj = Object.assign({permissaoId: np.permissaoId, nivelId: 1});\n          this.controllerPermissaoNivel.push(obj);\n        }\n      } else {\n        const obj = Object.assign({permissaoId: np.permissaoId, nivelId: 1});\n        this.controllerPermissaoNivel.push(obj);\n      }\n\n      this.permissaoService.editarNiveisPermissoes(this.formularioSelecionado, this.controllerPermissaoNivel)\n      .subscribe( () => {\n      }, error => {\n        verificaErro = true;\n        this.toastr.error(`Erro ao tentar alterar Permissões: ${error.error}`);\n        console.log(error.error);\n      });\n      this.controllerPermissaoNivel = [];\n    });\n    if (verificaErro === false) {\n      this.toastr.success(`Permissões alteradas com Sucesso!`);\n    }\n  }\n\n  getNiveis() {\n    this.niveis = [];\n    this.usuarioService.getAllNiveis().subscribe(\n      (_NIVEIS: Nivel[]) => {\n      this.niveis = _NIVEIS;\n    }, error => {\n      console.log(error.error);\n      this.toastr.error(`Erro ao tentar carregar niveis: ${error.error}`);\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {telefoneFixoPattern, telefoneCelularPattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'celularPipePipe'\n})\n\nexport class CelularPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n\n    if (value.length > 13) {\n      return vanillaMasker.toPattern(value, telefoneCelularPattern);\n    }\n\n    return vanillaMasker.toPattern(value, telefoneFixoPattern);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {cepPattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'cepPipePipe'\n})\nexport class CepPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    return vanillaMasker.toPattern(value, cepPattern);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {cnpjPattern, cpfPattern} from './commons/constants';\nimport { removeNonDigitValues, validarCPF } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\nconst CPF_LENGTH = 14;\n@Pipe({\n  name: 'cnpjCpfPipePipe'\n})\n\n\nexport class CnpjCpfPipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n\n    if (value.length > CPF_LENGTH) {\n      return vanillaMasker.toPattern(value, cnpjPattern);\n    }\n\n    return vanillaMasker.toPattern(value, cpfPattern);\n  }\n\n}\n","export const telefoneFixoPattern = '(99)9999-9999';\nexport const telefoneCelularPattern = '(99)99999-9999';\nexport const horaPattern = '99:99';\nexport const cpfPattern = '999.999.999-99';\nexport const cnpjPattern = '99.999.999/9999-99';\nexport const cepPattern = '99999-999';\nexport const iePattern = '999.999.999/9999';\n\nexport const cepPlaceholder = '00000-000';\nexport const cnpjPlaceholder = '00.000.000/0000-00';\nexport const cpfPlaceholder = '000.000.000-00';\nexport const pesoPlaceholder = '0,00 kg';\nexport const dinheiroPlaceholder = 'R$ 0,00';\nexport const percentualPlaceholder = '0%';\nexport const horaPlaceholder = 'HH:MM';\n\nexport const dinheiroPatternConfig = {\n  precision: 2,\n  separator: ',',\n  delimiter: '.',\n  unit: 'R$',\n  zeroCents: false,\n};\n\nexport const percentualPatternConfig = {\n  precision: 1,\n  separator: ',',\n  delimiter: ',',\n  suffixUnit: '%',\n  zeroCents: false,\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {iePattern} from './commons/constants';\nimport { removeNonDigitValues } from './commons/utils';\n\nconst vanillaMasker = require('vanilla-masker');\n\n@Pipe({\n  name: 'iePipePipe'\n})\nexport class IePipe implements PipeTransform {\n\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    \n    return vanillaMasker.toPattern(value, iePattern);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PermissaoService } from '../_services/Permissoes/permissao.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n  toggled = false;\n  idUsuario = '';\n  menus = [\n    {\n      title: 'Geral',\n      type: 'header'\n    },\n    {\n      title: 'Dashboard',\n      icon: 'fa fa-dashboard',\n      active: false,\n      type: 'simple',\n      badge: {\n        text: 'New ',\n        class: 'badge-warning'\n      },\n      link: 'dashboard'\n    },\n    {\n      title: 'Autorizações',\n      icon: 'fa fa-dashboard',\n      active: false,\n      type: 'simple',\n      badge: {\n        text: '0',\n        class: 'badge-warning'\n      },\n      link: 'autorizacoes'\n    },\n    {\n      title: 'Cadastros',\n      icon: 'fa fa-file-alt',\n      active: false,\n      type: 'dropdown',\n      submenus: [\n        {\n          title: 'Minhas Empresas',\n          link: 'empresas',\n          icon: 'fa fa-building-o'\n        },\n        {\n          title: 'Usuários',\n          link: 'usuarios',\n          icon: 'fa fa-user-o'\n        },\n        {\n          title: 'Clientes',\n          link: 'clientes',\n          icon: 'fa fa-users'\n        },\n        {\n          title: 'Pessoas',\n          link: 'pessoas',\n          icon: 'fa fa-users'\n        },\n        {\n          title: 'Produtos',\n          link: 'produtos',\n          icon: 'fa fa-dropbox'\n        },\n        {\n          title: 'Plano de Contas',\n          link: 'plano-conta',\n          icon: 'fa fa-sitemap'\n        },\n        {\n          title: 'Centro de Receita',\n          link: 'centro-receita',\n          icon: 'fa fa-arrow-right'\n        },\n        {\n          title: 'Centro de Despesa',\n          link: 'centro-despesa',\n          icon: 'fa fa-arrow-left'\n        },\n        {\n          title: 'Plano de Pagamento',\n          link: 'plano-pagamento',\n          icon: 'fa fa-sitemap'\n        },\n        {\n          title: 'Forma de Pagamento',\n          link: 'forma-pagamento',\n          icon: 'fa fa-dollar'\n        }\n      ]\n    },\n    {\n      title: 'Atendimentos',\n      icon: 'fa fa-phone',\n      active: false,\n      type: 'dropdown',\n      submenus: [\n        {\n          title: 'Retornos',\n          icon: 'fa fa-phone',\n          link: 'atendimentos/retornos'\n        }\n      ]\n    },\n    {\n      title: 'Financeiro',\n      icon: 'fa fa-dollar',\n      active: false,\n      type: 'dropdown',\n      submenus: [\n        {\n          title: 'Recebimentos',\n          icon: 'fa fa-arrow-right',\n          link: 'financeiro/recebimentos'\n        },\n        {\n          title: 'Pagamentos',\n          icon: 'fa fa-arrow-left',\n          link: 'financeiro/pagamentos'\n        },\n        {\n          title: 'Lançamentos',\n          icon: 'fa fa-exchange',\n          link: 'financeiro/lancamentos'\n        },\n        {\n          title: 'Relatórios Lançamentos',\n          icon: 'fa fa-chart-line',\n          link: 'financeiro/lancamentos/relatorios'\n        },\n        {\n          title: 'Cheques Pré-Datado',\n          icon: 'fa fa-credit-card',\n          link: 'cheque-pre'\n        }\n      ]\n    },\n    {\n      title: 'Movimentos',\n      icon: 'fa fa-handshake',\n      active: false,\n      type: 'dropdown',\n      submenus: [\n        {\n          title: 'Venda',\n          icon: 'fa fa-shopping-cart',\n          link: 'movimentos/vendas'\n        },\n        {\n          title: 'Relatórios Venda',\n          icon: 'fa fa-shopping-cart',\n          link: 'movimentos/vendas/relatorios'\n        }\n      ]\n    },\n    {\n      title: 'Configurações',\n      type: 'header'\n    },\n    {\n      title: 'Permissões',\n      icon: 'fa fa-lock',\n      active: false,\n      type: 'simple',\n      link: 'permissoes'\n    },\n    {\n      title: 'Meu Perfil',\n      icon: 'fa fa-user-o',\n      active: false,\n      type: 'simple',\n      link: 'usuarios/editar/' + this.idUsuario\n    }\n  ];\n\n  constructor(private permissaoService: PermissaoService) {\n    if (this.permissaoService.getUsuarioId() !== null) {\n      this.idUsuario = this.permissaoService.getUsuarioId();\n    }\n  }\n\n  toggle() {\n    this.toggled = ! this.toggled;\n  }\n\n  getSidebarState() {\n    return this.toggled;\n  }\n\n  setSidebarState(state: boolean) {\n    this.toggled = state;\n  }\n\n  getMenuList() {\n    return this.menus;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}